[project]
name = "symforce"
description = "Fast symbolic computation, code generation, and nonlinear optimization for robotics"
authors = [{ name = "Skydio, Inc.", email = "hayk@skydio.com" }]
license = { text = "Apache 2.0" }
keywords = [
  "python",
  "computer-vision",
  "cpp",
  "robotics",
  "optimization",
  "structure-from-motion",
  "motion-planning",
  "code-generation",
  "slam",
  "autonomous-vehicles",
  "symbolic-computation",
]
# For a list of valid classifiers see https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Software Development :: Code Generators",
  "Topic :: Software Development :: Embedded Systems",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Education :: Computer Aided Instruction (CAI)",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: C++",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dynamic = ["version", "readme", "dependencies", "optional-dependencies"]

[project.urls]
"Bug Tracker" = "https://github.com/symforce-org/symforce/issues"
Source = "https://github.com/symforce-org/symforce"

[tool.setuptools_scm]
# Empty, presence enables setuptools_scm

# --------------------------------------------------------------------------------
# Ruff
# --------------------------------------------------------------------------------

[tool.ruff]
line-length = 100
exclude = ["third_party", "build", ".eggs", "lcmtypes", "*.pyi"]
extend-include = ["*.ipynb"]

[tool.ruff.lint]
preview = true
typing-modules = ["symforce.typing"]

select = [
  "A",      # flake8
  "B",      # flake8-bugbear
  "E4",     # pycodestyle - ERROR - Imports - E401, E402
  "E7",     # pycodestyle - ERROR - Statements - E701-E743
  "E9",     # pycodestyle - ERROR - Runtime - E901, E902
  "F",      # pyflakes - ALL - F401-F901
  "I",      # isort
  "PLC",    # pylint - convention
  "PLE",    # pylint - error
  "PLR",    # pylint - refactor
  "PLW",    # pylint - warning
  "RUF100", # unused-noqa
  "SLF",    # flake8-self
]

ignore = [
  # Leave ignored:
  "B008", # function-call-in-default-argument
  "E402", # Module level import not at top of file
  "E731", # Do not assign a `lambda` expression, use a `def`
  "E741", # Ambiguous variable name: `x`
  "PLC0415", # import-outside-top-level
  "PLC2701", # Private name import `_x` from external module `y`
  "PLR2004", # magic-value-comparison
  "PLW1514", # unspecified-encoding
  "PLW1641", # eq-without-hash
  "PLW2901", # redefined-loop-name

  # Maybe enable later
  "ARG",    # flake8-unused-arguments
  "B011",   # Do not `assert False`, raise `AssertionError()`
]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["__doc__"]


[tool.ruff.lint.per-file-ignores]

# Unused imports in __init__.py
"__init__.py" = ["F401"]

# Unbound loop variables in benchmark notebooks
"symforce/benchmarks/notebooks/*.ipynb" = ["B023"]

# Imports shadowing builtins (like display)
"**/*.ipynb" = ["A004"]

[tool.ruff.lint.isort]
known-first-party = ["sym", "symforce"]
force-single-line = true
section-order = [
  "future",
  "standard-library",
  "third-party",
  "generated",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.isort.sections]
"generated" = ["lcmtypes"]

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 20
max-locals = 20
max-public-methods = 100
max-returns = 10

# --------------------------------------------------------------------------------
# Mypy
# --------------------------------------------------------------------------------

[tool.mypy]
python_version = "3.8"
warn_unused_configs = true
warn_unused_ignores = true
disallow_untyped_defs = true
mypy_path = [".", "gen/python", "$SYMFORCE_LCMTYPES_DIR", "symforce/pybind"]
explicit_package_bases = true

[[tool.mypy.overrides]]
module = [
  "IPython.*",
  "argh.*",
  "clang_format",
  "graphviz.*",
  "matplotlib.*",
  "mpl_toolkits.*",
  "numba.*",
  "ruff.*",
  "scipy.*",
  "setuptools_scm.*",
  "skymarshal.*",
  "symengine.*",
  "sympy.*",
  "torch.*",        # We don't require torch to be installed
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "lcmtypes"
follow_imports = "silent"
