// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>

namespace sym {

/**
 * Residual that penalizes the difference between between(a, b) and a_T_b.
 *
 * In vector space terms that would be:
 *     (b - a) - a_T_b
 *
 * In lie group terms:
 *     local_coordinates(a_T_b, between(a, b))
 *     to_tangent(compose(inverse(a_T_b), compose(inverse(a), b)))
 *
 * Args:
 *     sqrt_info: Square root information matrix to whiten residual. This can be computed from
 *                a covariance matrix as the cholesky decomposition of the inverse. In the case
 *                of a diagonal it will contain 1/sigma values. Must match the tangent dim.
 *     jacobian: (6x12) jacobian of res wrt args a (6), b (6)
 *     hessian: (12x12) Gauss-Newton hessian for args a (6), b (6)
 *     rhs: (12x1) Gauss-Newton rhs for args a (6), b (6)
 */
template <typename Scalar>
void BetweenFactorPose3(const sym::Pose3<Scalar>& a, const sym::Pose3<Scalar>& b,
                        const sym::Pose3<Scalar>& a_T_b,
                        const Eigen::Matrix<Scalar, 6, 6>& sqrt_info, const Scalar epsilon,
                        Eigen::Matrix<Scalar, 6, 1>* const res = nullptr,
                        Eigen::Matrix<Scalar, 6, 12>* const jacobian = nullptr,
                        Eigen::Matrix<Scalar, 12, 12>* const hessian = nullptr,
                        Eigen::Matrix<Scalar, 12, 1>* const rhs = nullptr) {
  // Total ops: 2026

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _a = a.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _b = b.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _a_T_b = a_T_b.Data();

  // Intermediate terms (515)
  const Scalar _tmp0 = std::pow(_a[1], Scalar(2));
  const Scalar _tmp1 = std::pow(_a[2], Scalar(2));
  const Scalar _tmp2 = _tmp0 + _tmp1;
  const Scalar _tmp3 = _tmp2 + Scalar(-1) / Scalar(2);
  const Scalar _tmp4 = 2 * _b[4];
  const Scalar _tmp5 = _a[0] * _a[2];
  const Scalar _tmp6 = _a[1] * _a[3];
  const Scalar _tmp7 = _tmp5 - _tmp6;
  const Scalar _tmp8 = _a[6] * _tmp7;
  const Scalar _tmp9 = _a[0] * _a[1];
  const Scalar _tmp10 = _a[2] * _a[3];
  const Scalar _tmp11 = _tmp10 + _tmp9;
  const Scalar _tmp12 = _a[5] * _tmp11;
  const Scalar _tmp13 = 2 * _b[6];
  const Scalar _tmp14 = _tmp13 * _tmp7;
  const Scalar _tmp15 = 2 * _b[5];
  const Scalar _tmp16 = _tmp11 * _tmp15;
  const Scalar _tmp17 = _tmp14 + _tmp16;
  const Scalar _tmp18 =
      2 * _a[4] * _tmp3 - _a_T_b[4] - 2 * _tmp12 + _tmp17 - _tmp3 * _tmp4 - 2 * _tmp8;
  const Scalar _tmp19 = std::pow(_a[0], Scalar(2));
  const Scalar _tmp20 = _tmp19 + Scalar(-1) / Scalar(2);
  const Scalar _tmp21 = _tmp1 + _tmp20;
  const Scalar _tmp22 = _a[1] * _a[2];
  const Scalar _tmp23 = _a[0] * _a[3];
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = _a[6] * _tmp24;
  const Scalar _tmp26 = -_tmp10 + _tmp9;
  const Scalar _tmp27 = _a[4] * _tmp26;
  const Scalar _tmp28 = _tmp13 * _tmp24;
  const Scalar _tmp29 = _tmp26 * _tmp4;
  const Scalar _tmp30 = _tmp28 + _tmp29;
  const Scalar _tmp31 =
      2 * _a[5] * _tmp21 - _a_T_b[5] - _tmp15 * _tmp21 - 2 * _tmp25 - 2 * _tmp27 + _tmp30;
  const Scalar _tmp32 = _a[0] * _b[0] + _a[1] * _b[1] + _a[2] * _b[2] + _a[3] * _b[3];
  const Scalar _tmp33 = _a_T_b[3] * _tmp32;
  const Scalar _tmp34 = _a[0] * _b[2] - _a[1] * _b[3] - _a[2] * _b[0] + _a[3] * _b[1];
  const Scalar _tmp35 = _a_T_b[1] * _tmp34;
  const Scalar _tmp36 = -_tmp35;
  const Scalar _tmp37 = _a[0] * _b[1] - _a[1] * _b[0] + _a[2] * _b[3] - _a[3] * _b[2];
  const Scalar _tmp38 = _a_T_b[2] * _tmp37;
  const Scalar _tmp39 = -_a[0] * _b[3] - _a[1] * _b[2] + _a[2] * _b[1] + _a[3] * _b[0];
  const Scalar _tmp40 = _a_T_b[0] * _tmp39;
  const Scalar _tmp41 = _tmp38 - _tmp40;
  const Scalar _tmp42 = _tmp36 + _tmp41;
  const Scalar _tmp43 = std::min<Scalar>(0, (((_tmp33 - _tmp42) > 0) - ((_tmp33 - _tmp42) < 0))) +
                        Scalar(1) / Scalar(2);
  const Scalar _tmp44 = _a_T_b[1] * _tmp32;
  const Scalar _tmp45 = _a_T_b[2] * _tmp39;
  const Scalar _tmp46 = _a_T_b[0] * _tmp37;
  const Scalar _tmp47 = _a_T_b[3] * _tmp34;
  const Scalar _tmp48 = _tmp46 - _tmp47;
  const Scalar _tmp49 = _tmp44 + _tmp45 + _tmp48;
  const Scalar _tmp50 = -_tmp33;
  const Scalar _tmp51 = _tmp42 + _tmp50;
  const Scalar _tmp52 = std::fabs(_tmp51);
  const Scalar _tmp53 = epsilon - 1;
  const Scalar _tmp54 = std::min<Scalar>(_tmp52, -_tmp53);
  const Scalar _tmp55 = std::acos(_tmp54);
  const Scalar _tmp56 = std::pow(_tmp54, Scalar(2)) - 1;
  const Scalar _tmp57 = -_tmp56;
  const Scalar _tmp58 = _tmp55 / std::sqrt(_tmp57);
  const Scalar _tmp59 = 4 * _tmp58;
  const Scalar _tmp60 = _tmp49 * _tmp59;
  const Scalar _tmp61 = _tmp43 * _tmp60;
  const Scalar _tmp62 = _a_T_b[0] * _tmp32;
  const Scalar _tmp63 = -_tmp62;
  const Scalar _tmp64 = _a_T_b[3] * _tmp39;
  const Scalar _tmp65 = _a_T_b[1] * _tmp37;
  const Scalar _tmp66 = _a_T_b[2] * _tmp34;
  const Scalar _tmp67 = _tmp65 + _tmp66;
  const Scalar _tmp68 = _tmp63 + _tmp64 + _tmp67;
  const Scalar _tmp69 = _tmp59 * _tmp68;
  const Scalar _tmp70 = _tmp43 * _tmp69;
  const Scalar _tmp71 = _a_T_b[1] * _tmp39;
  const Scalar _tmp72 = -_tmp71;
  const Scalar _tmp73 = _a_T_b[0] * _tmp34;
  const Scalar _tmp74 = _a_T_b[3] * _tmp37;
  const Scalar _tmp75 = _a_T_b[2] * _tmp32;
  const Scalar _tmp76 = _tmp74 + _tmp75;
  const Scalar _tmp77 = _tmp72 + _tmp73 + _tmp76;
  const Scalar _tmp78 = _tmp59 * _tmp77;
  const Scalar _tmp79 = _tmp43 * _tmp78;
  const Scalar _tmp80 = _tmp0 + _tmp20;
  const Scalar _tmp81 = _tmp22 - _tmp23;
  const Scalar _tmp82 = _a[5] * _tmp81;
  const Scalar _tmp83 = _tmp5 + _tmp6;
  const Scalar _tmp84 = _a[4] * _tmp83;
  const Scalar _tmp85 = _tmp15 * _tmp81;
  const Scalar _tmp86 = _tmp4 * _tmp83;
  const Scalar _tmp87 = _tmp85 + _tmp86;
  const Scalar _tmp88 =
      2 * _a[6] * _tmp80 - _a_T_b[6] - _tmp13 * _tmp80 - 2 * _tmp82 - 2 * _tmp84 + _tmp87;
  const Scalar _tmp89 = _tmp18 * sqrt_info(0, 3) + _tmp31 * sqrt_info(0, 4) -
                        _tmp61 * sqrt_info(0, 1) + _tmp70 * sqrt_info(0, 0) -
                        _tmp79 * sqrt_info(0, 2) + _tmp88 * sqrt_info(0, 5);
  const Scalar _tmp90 = _tmp43 * sqrt_info(1, 2);
  const Scalar _tmp91 = _tmp18 * sqrt_info(1, 3) + _tmp31 * sqrt_info(1, 4) -
                        _tmp61 * sqrt_info(1, 1) + _tmp70 * sqrt_info(1, 0) - _tmp78 * _tmp90 +
                        _tmp88 * sqrt_info(1, 5);
  const Scalar _tmp92 = _tmp43 * sqrt_info(2, 0);
  const Scalar _tmp93 = _tmp18 * sqrt_info(2, 3) + _tmp31 * sqrt_info(2, 4) -
                        _tmp61 * sqrt_info(2, 1) + _tmp69 * _tmp92 - _tmp79 * sqrt_info(2, 2) +
                        _tmp88 * sqrt_info(2, 5);
  const Scalar _tmp94 = _tmp43 * sqrt_info(3, 1);
  const Scalar _tmp95 = _tmp18 * sqrt_info(3, 3) + _tmp31 * sqrt_info(3, 4) - _tmp60 * _tmp94 +
                        _tmp70 * sqrt_info(3, 0) - _tmp79 * sqrt_info(3, 2) +
                        _tmp88 * sqrt_info(3, 5);
  const Scalar _tmp96 = _tmp43 * sqrt_info(4, 1);
  const Scalar _tmp97 = _tmp18 * sqrt_info(4, 3) + _tmp31 * sqrt_info(4, 4) - _tmp60 * _tmp96 +
                        _tmp70 * sqrt_info(4, 0) - _tmp79 * sqrt_info(4, 2) +
                        _tmp88 * sqrt_info(4, 5);
  const Scalar _tmp98 = _tmp43 * sqrt_info(5, 1);
  const Scalar _tmp99 = _tmp49 * _tmp98;
  const Scalar _tmp100 = _tmp43 * sqrt_info(5, 0);
  const Scalar _tmp101 = _tmp43 * sqrt_info(5, 2);
  const Scalar _tmp102 = _tmp100 * _tmp69 - _tmp101 * _tmp78 + _tmp18 * sqrt_info(5, 3) +
                         _tmp31 * sqrt_info(5, 4) - _tmp59 * _tmp99 + _tmp88 * sqrt_info(5, 5);
  const Scalar _tmp103 = -_tmp64;
  const Scalar _tmp104 = _tmp103 + _tmp62 + _tmp67;
  const Scalar _tmp105 =
      ((((_tmp52 + _tmp53) > 0) - ((_tmp52 + _tmp53) < 0)) - 1) * (((_tmp51) > 0) - ((_tmp51) < 0));
  const Scalar _tmp106 = _tmp105 / _tmp56;
  const Scalar _tmp107 = _tmp106 * _tmp49;
  const Scalar _tmp108 = _tmp104 * _tmp107;
  const Scalar _tmp109 = _tmp108 * _tmp43;
  const Scalar _tmp110 = _tmp106 * _tmp68;
  const Scalar _tmp111 = _tmp104 * _tmp110;
  const Scalar _tmp112 = _tmp43 * sqrt_info(0, 0);
  const Scalar _tmp113 = -_tmp44;
  const Scalar _tmp114 = -_tmp45;
  const Scalar _tmp115 = _tmp113 + _tmp114 + _tmp48;
  const Scalar _tmp116 = 2 * _tmp58;
  const Scalar _tmp117 = _tmp116 * _tmp43;
  const Scalar _tmp118 = _tmp115 * _tmp117;
  const Scalar _tmp119 = _tmp104 * _tmp49;
  const Scalar _tmp120 = _tmp105 * _tmp54 * _tmp55 / (_tmp57 * std::sqrt(_tmp57));
  const Scalar _tmp121 = _tmp120 * _tmp43;
  const Scalar _tmp122 = _tmp121 * sqrt_info(0, 1);
  const Scalar _tmp123 = _tmp104 * _tmp77;
  const Scalar _tmp124 = _tmp121 * sqrt_info(0, 2);
  const Scalar _tmp125 = _tmp38 + _tmp40;
  const Scalar _tmp126 = _tmp125 + _tmp33 + _tmp36;
  const Scalar _tmp127 = _tmp117 * _tmp126;
  const Scalar _tmp128 = _tmp106 * _tmp77;
  const Scalar _tmp129 = _tmp128 * _tmp43;
  const Scalar _tmp130 = _tmp129 * sqrt_info(0, 2);
  const Scalar _tmp131 = _tmp74 - _tmp75;
  const Scalar _tmp132 = _tmp131 + _tmp71 + _tmp73;
  const Scalar _tmp133 = _tmp117 * _tmp132;
  const Scalar _tmp134 = std::pow(_a[3], Scalar(2));
  const Scalar _tmp135 = -_tmp134;
  const Scalar _tmp136 = -_tmp0 + _tmp1;
  const Scalar _tmp137 = _tmp135 + _tmp136 + _tmp19;
  const Scalar _tmp138 = _a[5] * _tmp137;
  const Scalar _tmp139 = _b[5] * _tmp137;
  const Scalar _tmp140 = 2 * _tmp25;
  const Scalar _tmp141 = 2 * _tmp27;
  const Scalar _tmp142 = -_tmp138 + _tmp139 + _tmp140 + _tmp141 - _tmp28 - _tmp29;
  const Scalar _tmp143 = -_tmp19;
  const Scalar _tmp144 = _tmp134 + _tmp136 + _tmp143;
  const Scalar _tmp145 = _a[6] * _tmp144;
  const Scalar _tmp146 = _b[6] * _tmp144;
  const Scalar _tmp147 = 2 * _tmp82;
  const Scalar _tmp148 = 2 * _tmp84;
  const Scalar _tmp149 = -_tmp145 + _tmp146 - _tmp147 - _tmp148 + _tmp87;
  const Scalar _tmp150 = _tmp104 * _tmp68;
  const Scalar _tmp151 = _tmp120 * _tmp150;
  const Scalar _tmp152 = _tmp104 * _tmp130 + _tmp109 * sqrt_info(0, 1) - _tmp111 * _tmp112 -
                         _tmp112 * _tmp151 + _tmp118 * sqrt_info(0, 2) + _tmp119 * _tmp122 +
                         _tmp123 * _tmp124 - _tmp127 * sqrt_info(0, 0) - _tmp133 * sqrt_info(0, 1) +
                         _tmp142 * sqrt_info(0, 5) + _tmp149 * sqrt_info(0, 4);
  const Scalar _tmp153 = _tmp111 * _tmp43;
  const Scalar _tmp154 = _tmp121 * sqrt_info(1, 1);
  const Scalar _tmp155 = _tmp120 * _tmp90;
  const Scalar _tmp156 = _tmp104 * _tmp128;
  const Scalar _tmp157 = _tmp121 * sqrt_info(1, 0);
  const Scalar _tmp158 = _tmp109 * sqrt_info(1, 1) + _tmp118 * sqrt_info(1, 2) + _tmp119 * _tmp154 +
                         _tmp123 * _tmp155 - _tmp127 * sqrt_info(1, 0) - _tmp133 * sqrt_info(1, 1) +
                         _tmp142 * sqrt_info(1, 5) + _tmp149 * sqrt_info(1, 4) - _tmp150 * _tmp157 -
                         _tmp153 * sqrt_info(1, 0) + _tmp156 * _tmp90;
  const Scalar _tmp159 = _tmp117 * sqrt_info(2, 2);
  const Scalar _tmp160 = _tmp121 * sqrt_info(2, 1);
  const Scalar _tmp161 = _tmp43 * sqrt_info(2, 2);
  const Scalar _tmp162 = _tmp120 * _tmp161;
  const Scalar _tmp163 = _tmp116 * _tmp92;
  const Scalar _tmp164 = _tmp120 * _tmp92;
  const Scalar _tmp165 = _tmp109 * sqrt_info(2, 1) - _tmp111 * _tmp92 + _tmp115 * _tmp159 +
                         _tmp119 * _tmp160 + _tmp123 * _tmp162 - _tmp126 * _tmp163 -
                         _tmp133 * sqrt_info(2, 1) + _tmp142 * sqrt_info(2, 5) +
                         _tmp149 * sqrt_info(2, 4) - _tmp150 * _tmp164 + _tmp156 * _tmp161;
  const Scalar _tmp166 = _tmp120 * _tmp94;
  const Scalar _tmp167 = _tmp104 * sqrt_info(3, 2);
  const Scalar _tmp168 = _tmp116 * _tmp94;
  const Scalar _tmp169 = _tmp43 * sqrt_info(3, 0);
  const Scalar _tmp170 = _tmp108 * _tmp94 + _tmp118 * sqrt_info(3, 2) + _tmp119 * _tmp166 +
                         _tmp121 * _tmp167 * _tmp77 - _tmp127 * sqrt_info(3, 0) +
                         _tmp129 * _tmp167 - _tmp132 * _tmp168 + _tmp142 * sqrt_info(3, 5) +
                         _tmp149 * sqrt_info(3, 4) - _tmp151 * _tmp169 - _tmp153 * sqrt_info(3, 0);
  const Scalar _tmp171 = _tmp117 * sqrt_info(4, 2);
  const Scalar _tmp172 = _tmp120 * _tmp96;
  const Scalar _tmp173 = _tmp121 * sqrt_info(4, 2);
  const Scalar _tmp174 = _tmp129 * sqrt_info(4, 2);
  const Scalar _tmp175 = _tmp116 * _tmp96;
  const Scalar _tmp176 = _tmp121 * sqrt_info(4, 0);
  const Scalar _tmp177 = _tmp104 * _tmp174 + _tmp108 * _tmp96 + _tmp115 * _tmp171 +
                         _tmp119 * _tmp172 + _tmp123 * _tmp173 - _tmp127 * sqrt_info(4, 0) -
                         _tmp132 * _tmp175 + _tmp142 * sqrt_info(4, 5) + _tmp149 * sqrt_info(4, 4) -
                         _tmp150 * _tmp176 - _tmp153 * sqrt_info(4, 0);
  const Scalar _tmp178 = _tmp106 * _tmp99;
  const Scalar _tmp179 = _tmp101 * _tmp116;
  const Scalar _tmp180 = _tmp120 * _tmp99;
  const Scalar _tmp181 = _tmp101 * _tmp120;
  const Scalar _tmp182 = _tmp100 * _tmp116;
  const Scalar _tmp183 = _tmp116 * _tmp98;
  const Scalar _tmp184 = _tmp100 * _tmp120;
  const Scalar _tmp185 = -_tmp100 * _tmp111 + _tmp101 * _tmp156 + _tmp104 * _tmp178 +
                         _tmp104 * _tmp180 + _tmp115 * _tmp179 + _tmp123 * _tmp181 -
                         _tmp126 * _tmp182 - _tmp132 * _tmp183 + _tmp142 * sqrt_info(5, 5) +
                         _tmp149 * sqrt_info(5, 4) - _tmp150 * _tmp184;
  const Scalar _tmp186 = _tmp65 - _tmp66;
  const Scalar _tmp187 = _tmp186 + _tmp62 + _tmp64;
  const Scalar _tmp188 = _tmp117 * _tmp187;
  const Scalar _tmp189 = _tmp46 + _tmp47;
  const Scalar _tmp190 = _tmp113 + _tmp189 + _tmp45;
  const Scalar _tmp191 = _tmp190 * _tmp68;
  const Scalar _tmp192 = _tmp120 * _tmp191;
  const Scalar _tmp193 = _tmp107 * _tmp43;
  const Scalar _tmp194 = _tmp193 * sqrt_info(0, 1);
  const Scalar _tmp195 = _tmp33 + _tmp35 + _tmp41;
  const Scalar _tmp196 = _tmp117 * _tmp195;
  const Scalar _tmp197 = _tmp190 * _tmp49;
  const Scalar _tmp198 = _tmp129 * _tmp190;
  const Scalar _tmp199 = _tmp190 * _tmp77;
  const Scalar _tmp200 = _tmp110 * _tmp112;
  const Scalar _tmp201 = _tmp145 - _tmp146 + _tmp147 + _tmp148 - _tmp85 - _tmp86;
  const Scalar _tmp202 = _tmp135 + _tmp143 + _tmp2;
  const Scalar _tmp203 = _a[4] * _tmp202;
  const Scalar _tmp204 = _b[4] * _tmp202;
  const Scalar _tmp205 = 2 * _tmp8;
  const Scalar _tmp206 = 2 * _tmp12;
  const Scalar _tmp207 = _tmp17 + _tmp203 - _tmp204 - _tmp205 - _tmp206;
  const Scalar _tmp208 = -_tmp73;
  const Scalar _tmp209 = _tmp131 + _tmp208 + _tmp72;
  const Scalar _tmp210 = _tmp117 * _tmp209;
  const Scalar _tmp211 = _tmp112 * _tmp192 - _tmp122 * _tmp197 - _tmp124 * _tmp199 +
                         _tmp188 * sqrt_info(0, 2) - _tmp190 * _tmp194 + _tmp190 * _tmp200 -
                         _tmp196 * sqrt_info(0, 1) - _tmp198 * sqrt_info(0, 2) +
                         _tmp201 * sqrt_info(0, 3) + _tmp207 * sqrt_info(0, 5) +
                         _tmp210 * sqrt_info(0, 0);
  const Scalar _tmp212 = _tmp193 * sqrt_info(1, 1);
  const Scalar _tmp213 = _tmp128 * _tmp190;
  const Scalar _tmp214 = _tmp110 * _tmp190;
  const Scalar _tmp215 = _tmp214 * _tmp43;
  const Scalar _tmp216 = -_tmp154 * _tmp197 - _tmp155 * _tmp199 + _tmp157 * _tmp191 +
                         _tmp188 * sqrt_info(1, 2) - _tmp190 * _tmp212 - _tmp196 * sqrt_info(1, 1) +
                         _tmp201 * sqrt_info(1, 3) + _tmp207 * sqrt_info(1, 5) +
                         _tmp210 * sqrt_info(1, 0) - _tmp213 * _tmp90 + _tmp215 * sqrt_info(1, 0);
  const Scalar _tmp217 = _tmp193 * sqrt_info(2, 1);
  const Scalar _tmp218 = _tmp159 * _tmp187 - _tmp160 * _tmp197 - _tmp161 * _tmp213 -
                         _tmp162 * _tmp199 + _tmp163 * _tmp209 + _tmp164 * _tmp191 -
                         _tmp190 * _tmp217 - _tmp196 * sqrt_info(2, 1) + _tmp201 * sqrt_info(2, 3) +
                         _tmp207 * sqrt_info(2, 5) + _tmp214 * _tmp92;
  const Scalar _tmp219 = _tmp117 * sqrt_info(3, 2);
  const Scalar _tmp220 = _tmp107 * _tmp94;
  const Scalar _tmp221 = _tmp116 * _tmp195;
  const Scalar _tmp222 = _tmp121 * sqrt_info(3, 2);
  const Scalar _tmp223 = -_tmp166 * _tmp197 + _tmp169 * _tmp192 + _tmp169 * _tmp214 +
                         _tmp187 * _tmp219 - _tmp190 * _tmp220 - _tmp198 * sqrt_info(3, 2) -
                         _tmp199 * _tmp222 + _tmp201 * sqrt_info(3, 3) + _tmp207 * sqrt_info(3, 5) +
                         _tmp210 * sqrt_info(3, 0) - _tmp221 * _tmp94;
  const Scalar _tmp224 = _tmp107 * _tmp96;
  const Scalar _tmp225 = _tmp171 * _tmp187 - _tmp172 * _tmp197 - _tmp173 * _tmp199 -
                         _tmp174 * _tmp190 + _tmp176 * _tmp191 - _tmp190 * _tmp224 +
                         _tmp201 * sqrt_info(4, 3) + _tmp207 * sqrt_info(4, 5) +
                         _tmp210 * sqrt_info(4, 0) + _tmp215 * sqrt_info(4, 0) - _tmp221 * _tmp96;
  const Scalar _tmp226 = _tmp100 * _tmp214 - _tmp101 * _tmp213 - _tmp178 * _tmp190 +
                         _tmp179 * _tmp187 - _tmp180 * _tmp190 - _tmp181 * _tmp199 +
                         _tmp182 * _tmp209 + _tmp184 * _tmp191 + _tmp201 * sqrt_info(5, 3) +
                         _tmp207 * sqrt_info(5, 5) - _tmp221 * _tmp98;
  const Scalar _tmp227 = _tmp208 + _tmp71 + _tmp76;
  const Scalar _tmp228 = _tmp128 * _tmp227;
  const Scalar _tmp229 = _tmp228 * _tmp43;
  const Scalar _tmp230 = _tmp103 + _tmp186 + _tmp63;
  const Scalar _tmp231 = _tmp117 * _tmp230;
  const Scalar _tmp232 = _tmp114 + _tmp189 + _tmp44;
  const Scalar _tmp233 = _tmp117 * _tmp232;
  const Scalar _tmp234 = _tmp227 * _tmp77;
  const Scalar _tmp235 = _tmp121 * _tmp234;
  const Scalar _tmp236 = _tmp125 + _tmp35 + _tmp50;
  const Scalar _tmp237 = _tmp117 * _tmp236;
  const Scalar _tmp238 = _tmp227 * _tmp49;
  const Scalar _tmp239 = _tmp121 * _tmp238;
  const Scalar _tmp240 = _tmp138 - _tmp139 - _tmp140 - _tmp141 + _tmp30;
  const Scalar _tmp241 = -_tmp14 - _tmp16 - _tmp203 + _tmp204 + _tmp205 + _tmp206;
  const Scalar _tmp242 = _tmp227 * _tmp68;
  const Scalar _tmp243 = _tmp120 * _tmp242;
  const Scalar _tmp244 = -_tmp112 * _tmp243 + _tmp194 * _tmp227 - _tmp200 * _tmp227 +
                         _tmp229 * sqrt_info(0, 2) + _tmp231 * sqrt_info(0, 1) +
                         _tmp233 * sqrt_info(0, 0) + _tmp235 * sqrt_info(0, 2) +
                         _tmp237 * sqrt_info(0, 2) + _tmp239 * sqrt_info(0, 1) +
                         _tmp240 * sqrt_info(0, 3) + _tmp241 * sqrt_info(0, 4);
  const Scalar _tmp245 = _tmp110 * _tmp227;
  const Scalar _tmp246 = _tmp245 * _tmp43;
  const Scalar _tmp247 = _tmp120 * _tmp234;
  const Scalar _tmp248 = -_tmp157 * _tmp242 + _tmp212 * _tmp227 + _tmp228 * _tmp90 +
                         _tmp231 * sqrt_info(1, 1) + _tmp233 * sqrt_info(1, 0) +
                         _tmp237 * sqrt_info(1, 2) + _tmp239 * sqrt_info(1, 1) +
                         _tmp240 * sqrt_info(1, 3) + _tmp241 * sqrt_info(1, 4) -
                         _tmp246 * sqrt_info(1, 0) + _tmp247 * _tmp90;
  const Scalar _tmp249 = _tmp161 * _tmp228 + _tmp161 * _tmp247 + _tmp163 * _tmp232 -
                         _tmp164 * _tmp242 + _tmp217 * _tmp227 + _tmp231 * sqrt_info(2, 1) +
                         _tmp237 * sqrt_info(2, 2) + _tmp239 * sqrt_info(2, 1) +
                         _tmp240 * sqrt_info(2, 3) + _tmp241 * sqrt_info(2, 4) - _tmp245 * _tmp92;
  const Scalar _tmp250 = _tmp166 * _tmp238 + _tmp168 * _tmp230 - _tmp169 * _tmp243 -
                         _tmp169 * _tmp245 + _tmp220 * _tmp227 + _tmp229 * sqrt_info(3, 2) +
                         _tmp233 * sqrt_info(3, 0) + _tmp235 * sqrt_info(3, 2) +
                         _tmp237 * sqrt_info(3, 2) + _tmp240 * sqrt_info(3, 3) +
                         _tmp241 * sqrt_info(3, 4);
  const Scalar _tmp251 = _tmp172 * _tmp238 + _tmp173 * _tmp234 + _tmp175 * _tmp230 -
                         _tmp176 * _tmp242 + _tmp224 * _tmp227 + _tmp229 * sqrt_info(4, 2) +
                         _tmp233 * sqrt_info(4, 0) + _tmp237 * sqrt_info(4, 2) +
                         _tmp240 * sqrt_info(4, 3) + _tmp241 * sqrt_info(4, 4) -
                         _tmp246 * sqrt_info(4, 0);
  const Scalar _tmp252 = -_tmp100 * _tmp245 + _tmp101 * _tmp228 + _tmp178 * _tmp227 +
                         _tmp179 * _tmp236 + _tmp180 * _tmp227 + _tmp181 * _tmp234 +
                         _tmp182 * _tmp232 + _tmp183 * _tmp230 - _tmp184 * _tmp242 +
                         _tmp240 * sqrt_info(5, 3) + _tmp241 * sqrt_info(5, 4);
  const Scalar _tmp253 =
      -_tmp26 * sqrt_info(0, 4) + _tmp3 * sqrt_info(0, 3) - _tmp83 * sqrt_info(0, 5);
  const Scalar _tmp254 = 2 * _tmp253;
  const Scalar _tmp255 =
      -_tmp26 * sqrt_info(1, 4) + _tmp3 * sqrt_info(1, 3) - _tmp83 * sqrt_info(1, 5);
  const Scalar _tmp256 = 2 * _tmp255;
  const Scalar _tmp257 =
      -_tmp26 * sqrt_info(2, 4) + _tmp3 * sqrt_info(2, 3) - _tmp83 * sqrt_info(2, 5);
  const Scalar _tmp258 = 2 * _tmp257;
  const Scalar _tmp259 =
      -_tmp26 * sqrt_info(3, 4) + _tmp3 * sqrt_info(3, 3) - _tmp83 * sqrt_info(3, 5);
  const Scalar _tmp260 = 2 * _tmp259;
  const Scalar _tmp261 =
      -_tmp26 * sqrt_info(4, 4) + _tmp3 * sqrt_info(4, 3) - _tmp83 * sqrt_info(4, 5);
  const Scalar _tmp262 = 2 * _tmp261;
  const Scalar _tmp263 =
      -_tmp26 * sqrt_info(5, 4) + _tmp3 * sqrt_info(5, 3) - _tmp83 * sqrt_info(5, 5);
  const Scalar _tmp264 = 2 * _tmp263;
  const Scalar _tmp265 =
      _tmp11 * sqrt_info(0, 3) - _tmp21 * sqrt_info(0, 4) + _tmp81 * sqrt_info(0, 5);
  const Scalar _tmp266 = 2 * _tmp265;
  const Scalar _tmp267 =
      _tmp11 * sqrt_info(1, 3) - _tmp21 * sqrt_info(1, 4) + _tmp81 * sqrt_info(1, 5);
  const Scalar _tmp268 = 2 * _tmp267;
  const Scalar _tmp269 =
      _tmp11 * sqrt_info(2, 3) - _tmp21 * sqrt_info(2, 4) + _tmp81 * sqrt_info(2, 5);
  const Scalar _tmp270 = 2 * _tmp269;
  const Scalar _tmp271 =
      _tmp11 * sqrt_info(3, 3) - _tmp21 * sqrt_info(3, 4) + _tmp81 * sqrt_info(3, 5);
  const Scalar _tmp272 = 2 * _tmp271;
  const Scalar _tmp273 =
      _tmp11 * sqrt_info(4, 3) - _tmp21 * sqrt_info(4, 4) + _tmp81 * sqrt_info(4, 5);
  const Scalar _tmp274 = 2 * _tmp273;
  const Scalar _tmp275 =
      _tmp11 * sqrt_info(5, 3) - _tmp21 * sqrt_info(5, 4) + _tmp81 * sqrt_info(5, 5);
  const Scalar _tmp276 = 2 * _tmp275;
  const Scalar _tmp277 =
      _tmp24 * sqrt_info(0, 4) + _tmp7 * sqrt_info(0, 3) - _tmp80 * sqrt_info(0, 5);
  const Scalar _tmp278 = 2 * _tmp277;
  const Scalar _tmp279 =
      _tmp24 * sqrt_info(1, 4) + _tmp7 * sqrt_info(1, 3) - _tmp80 * sqrt_info(1, 5);
  const Scalar _tmp280 = 2 * _tmp279;
  const Scalar _tmp281 =
      _tmp24 * sqrt_info(2, 4) + _tmp7 * sqrt_info(2, 3) - _tmp80 * sqrt_info(2, 5);
  const Scalar _tmp282 = 2 * _tmp281;
  const Scalar _tmp283 =
      _tmp24 * sqrt_info(3, 4) + _tmp7 * sqrt_info(3, 3) - _tmp80 * sqrt_info(3, 5);
  const Scalar _tmp284 = 2 * _tmp283;
  const Scalar _tmp285 =
      _tmp24 * sqrt_info(4, 4) + _tmp7 * sqrt_info(4, 3) - _tmp80 * sqrt_info(4, 5);
  const Scalar _tmp286 = 2 * _tmp285;
  const Scalar _tmp287 =
      _tmp24 * sqrt_info(5, 4) + _tmp7 * sqrt_info(5, 3) - _tmp80 * sqrt_info(5, 5);
  const Scalar _tmp288 = 2 * _tmp287;
  const Scalar _tmp289 = _tmp107 * _tmp68;
  const Scalar _tmp290 = _tmp289 * _tmp43;
  const Scalar _tmp291 = std::pow(_tmp68, Scalar(2));
  const Scalar _tmp292 = _tmp120 * _tmp291;
  const Scalar _tmp293 = _tmp117 * _tmp49;
  const Scalar _tmp294 = _tmp106 * _tmp291;
  const Scalar _tmp295 = _tmp294 * _tmp43;
  const Scalar _tmp296 = _tmp49 * _tmp68;
  const Scalar _tmp297 = _tmp68 * _tmp77;
  const Scalar _tmp298 = _tmp116 * _tmp51;
  const Scalar _tmp299 = _tmp298 * _tmp43;
  const Scalar _tmp300 = _tmp117 * _tmp77;
  const Scalar _tmp301 = -_tmp112 * _tmp292 + _tmp122 * _tmp296 + _tmp124 * _tmp297 +
                         _tmp130 * _tmp68 + _tmp290 * sqrt_info(0, 1) + _tmp293 * sqrt_info(0, 2) -
                         _tmp295 * sqrt_info(0, 0) - _tmp299 * sqrt_info(0, 0) -
                         _tmp300 * sqrt_info(0, 1);
  const Scalar _tmp302 = _tmp292 * _tmp43;
  const Scalar _tmp303 = _tmp120 * _tmp297;
  const Scalar _tmp304 = _tmp128 * _tmp68;
  const Scalar _tmp305 = _tmp154 * _tmp296 + _tmp290 * sqrt_info(1, 1) + _tmp293 * sqrt_info(1, 2) -
                         _tmp295 * sqrt_info(1, 0) - _tmp299 * sqrt_info(1, 0) -
                         _tmp300 * sqrt_info(1, 1) - _tmp302 * sqrt_info(1, 0) + _tmp303 * _tmp90 +
                         _tmp304 * _tmp90;
  const Scalar _tmp306 = _tmp159 * _tmp49 + _tmp160 * _tmp296 + _tmp161 * _tmp303 +
                         _tmp161 * _tmp304 + _tmp290 * sqrt_info(2, 1) - _tmp292 * _tmp92 -
                         _tmp294 * _tmp92 - _tmp298 * _tmp92 - _tmp300 * sqrt_info(2, 1);
  const Scalar _tmp307 = _tmp120 * _tmp296;
  const Scalar _tmp308 = _tmp129 * _tmp68;
  const Scalar _tmp309 = -_tmp168 * _tmp77 - _tmp169 * _tmp292 + _tmp222 * _tmp297 +
                         _tmp289 * _tmp94 + _tmp293 * sqrt_info(3, 2) - _tmp295 * sqrt_info(3, 0) -
                         _tmp299 * sqrt_info(3, 0) + _tmp307 * _tmp94 + _tmp308 * sqrt_info(3, 2);
  const Scalar _tmp310 = _tmp171 * _tmp49 + _tmp172 * _tmp296 + _tmp173 * _tmp297 +
                         _tmp174 * _tmp68 - _tmp175 * _tmp77 + _tmp289 * _tmp96 -
                         _tmp295 * sqrt_info(4, 0) - _tmp299 * sqrt_info(4, 0) -
                         _tmp302 * sqrt_info(4, 0);
  const Scalar _tmp311 = -_tmp100 * _tmp292 - _tmp100 * _tmp298 + _tmp101 * _tmp304 +
                         _tmp110 * _tmp99 + _tmp179 * _tmp49 + _tmp180 * _tmp68 +
                         _tmp181 * _tmp297 - _tmp183 * _tmp77 - _tmp295 * sqrt_info(5, 0);
  const Scalar _tmp312 = _tmp128 * _tmp49;
  const Scalar _tmp313 = _tmp312 * _tmp43;
  const Scalar _tmp314 = _tmp117 * _tmp68;
  const Scalar _tmp315 = std::pow(_tmp49, Scalar(2));
  const Scalar _tmp316 = _tmp106 * _tmp315;
  const Scalar _tmp317 = _tmp316 * _tmp43;
  const Scalar _tmp318 = _tmp49 * _tmp77;
  const Scalar _tmp319 = _tmp120 * _tmp315;
  const Scalar _tmp320 = _tmp319 * _tmp43;
  const Scalar _tmp321 = _tmp112 * _tmp307 - _tmp124 * _tmp318 + _tmp290 * sqrt_info(0, 0) -
                         _tmp299 * sqrt_info(0, 1) + _tmp300 * sqrt_info(0, 0) -
                         _tmp313 * sqrt_info(0, 2) + _tmp314 * sqrt_info(0, 2) -
                         _tmp317 * sqrt_info(0, 1) - _tmp320 * sqrt_info(0, 1);
  const Scalar _tmp322 = -_tmp155 * _tmp318 + _tmp157 * _tmp296 + _tmp290 * sqrt_info(1, 0) -
                         _tmp299 * sqrt_info(1, 1) + _tmp300 * sqrt_info(1, 0) - _tmp312 * _tmp90 +
                         _tmp314 * sqrt_info(1, 2) - _tmp317 * sqrt_info(1, 1) -
                         _tmp320 * sqrt_info(1, 1);
  const Scalar _tmp323 = _tmp159 * _tmp68 - _tmp161 * _tmp312 - _tmp162 * _tmp318 +
                         _tmp163 * _tmp77 + _tmp164 * _tmp296 + _tmp289 * _tmp92 -
                         _tmp299 * sqrt_info(2, 1) - _tmp317 * sqrt_info(2, 1) -
                         _tmp320 * sqrt_info(2, 1);
  const Scalar _tmp324 = _tmp169 * _tmp307 + _tmp219 * _tmp68 - _tmp222 * _tmp318 +
                         _tmp290 * sqrt_info(3, 0) - _tmp298 * _tmp94 + _tmp300 * sqrt_info(3, 0) -
                         _tmp313 * sqrt_info(3, 2) - _tmp316 * _tmp94 - _tmp319 * _tmp94;
  const Scalar _tmp325 = _tmp171 * _tmp68 - _tmp173 * _tmp318 + _tmp176 * _tmp296 +
                         _tmp290 * sqrt_info(4, 0) - _tmp298 * _tmp96 + _tmp300 * sqrt_info(4, 0) -
                         _tmp313 * sqrt_info(4, 2) - _tmp316 * _tmp96 - _tmp319 * _tmp96;
  const Scalar _tmp326 = _tmp100 * _tmp289 - _tmp101 * _tmp312 + _tmp179 * _tmp68 -
                         _tmp181 * _tmp318 + _tmp182 * _tmp77 + _tmp184 * _tmp296 -
                         _tmp298 * _tmp98 - _tmp316 * _tmp98 - _tmp319 * _tmp98;
  const Scalar _tmp327 = std::pow(_tmp77, Scalar(2));
  const Scalar _tmp328 = _tmp120 * _tmp327;
  const Scalar _tmp329 = _tmp328 * _tmp43;
  const Scalar _tmp330 = _tmp106 * _tmp327;
  const Scalar _tmp331 = _tmp330 * _tmp43;
  const Scalar _tmp332 = _tmp112 * _tmp303 + _tmp112 * _tmp304 - _tmp122 * _tmp318 -
                         _tmp293 * sqrt_info(0, 0) - _tmp299 * sqrt_info(0, 2) -
                         _tmp313 * sqrt_info(0, 1) - _tmp314 * sqrt_info(0, 1) -
                         _tmp329 * sqrt_info(0, 2) - _tmp331 * sqrt_info(0, 2);
  const Scalar _tmp333 = -_tmp154 * _tmp318 + _tmp157 * _tmp297 - _tmp293 * sqrt_info(1, 0) -
                         _tmp298 * _tmp90 + _tmp308 * sqrt_info(1, 0) - _tmp313 * sqrt_info(1, 1) -
                         _tmp314 * sqrt_info(1, 1) - _tmp328 * _tmp90 - _tmp330 * _tmp90;
  const Scalar _tmp334 = -_tmp160 * _tmp318 - _tmp161 * _tmp328 - _tmp163 * _tmp49 +
                         _tmp164 * _tmp297 - _tmp299 * sqrt_info(2, 2) + _tmp304 * _tmp92 -
                         _tmp313 * sqrt_info(2, 1) - _tmp314 * sqrt_info(2, 1) -
                         _tmp331 * sqrt_info(2, 2);
  const Scalar _tmp335 = -_tmp166 * _tmp318 - _tmp168 * _tmp68 + _tmp169 * _tmp303 +
                         _tmp169 * _tmp304 - _tmp293 * sqrt_info(3, 0) - _tmp299 * sqrt_info(3, 2) -
                         _tmp312 * _tmp94 - _tmp329 * sqrt_info(3, 2) - _tmp331 * sqrt_info(3, 2);
  const Scalar _tmp336 = -_tmp172 * _tmp318 - _tmp175 * _tmp68 + _tmp176 * _tmp297 -
                         _tmp293 * sqrt_info(4, 0) - _tmp299 * sqrt_info(4, 2) +
                         _tmp308 * sqrt_info(4, 0) - _tmp312 * _tmp96 - _tmp329 * sqrt_info(4, 2) -
                         _tmp331 * sqrt_info(4, 2);
  const Scalar _tmp337 = _tmp100 * _tmp304 - _tmp101 * _tmp298 - _tmp101 * _tmp328 -
                         _tmp101 * _tmp330 - _tmp128 * _tmp99 - _tmp180 * _tmp77 -
                         _tmp182 * _tmp49 - _tmp183 * _tmp68 + _tmp184 * _tmp297;
  const Scalar _tmp338 = _tmp177 * _tmp262;
  const Scalar _tmp339 = _tmp158 * _tmp256;
  const Scalar _tmp340 = _tmp165 * _tmp258;
  const Scalar _tmp341 = _tmp185 * _tmp264;
  const Scalar _tmp342 = _tmp152 * _tmp254;
  const Scalar _tmp343 = _tmp170 * _tmp260;
  const Scalar _tmp344 = _tmp177 * _tmp274;
  const Scalar _tmp345 = _tmp170 * _tmp272;
  const Scalar _tmp346 = _tmp152 * _tmp266;
  const Scalar _tmp347 = _tmp158 * _tmp268;
  const Scalar _tmp348 = _tmp165 * _tmp270;
  const Scalar _tmp349 = _tmp185 * _tmp276;
  const Scalar _tmp350 = _tmp185 * _tmp288;
  const Scalar _tmp351 = _tmp165 * _tmp282;
  const Scalar _tmp352 = _tmp158 * _tmp280;
  const Scalar _tmp353 = _tmp152 * _tmp278;
  const Scalar _tmp354 = _tmp170 * _tmp284;
  const Scalar _tmp355 = _tmp177 * _tmp286;
  const Scalar _tmp356 = _tmp211 * _tmp254;
  const Scalar _tmp357 = _tmp218 * _tmp258;
  const Scalar _tmp358 = _tmp223 * _tmp260;
  const Scalar _tmp359 = _tmp226 * _tmp264;
  const Scalar _tmp360 = _tmp225 * _tmp262;
  const Scalar _tmp361 = _tmp216 * _tmp256;
  const Scalar _tmp362 = _tmp218 * _tmp270;
  const Scalar _tmp363 = _tmp211 * _tmp266;
  const Scalar _tmp364 = _tmp223 * _tmp272;
  const Scalar _tmp365 = _tmp216 * _tmp268;
  const Scalar _tmp366 = _tmp226 * _tmp276;
  const Scalar _tmp367 = _tmp225 * _tmp274;
  const Scalar _tmp368 = _tmp218 * _tmp282;
  const Scalar _tmp369 = _tmp216 * _tmp280;
  const Scalar _tmp370 = _tmp211 * _tmp278;
  const Scalar _tmp371 = _tmp223 * _tmp284;
  const Scalar _tmp372 = _tmp226 * _tmp288;
  const Scalar _tmp373 = _tmp225 * _tmp286;
  const Scalar _tmp374 = _tmp248 * _tmp256;
  const Scalar _tmp375 = _tmp244 * _tmp254;
  const Scalar _tmp376 = _tmp249 * _tmp258;
  const Scalar _tmp377 = _tmp250 * _tmp260;
  const Scalar _tmp378 = _tmp252 * _tmp264;
  const Scalar _tmp379 = _tmp251 * _tmp262;
  const Scalar _tmp380 = _tmp252 * _tmp276;
  const Scalar _tmp381 = _tmp251 * _tmp274;
  const Scalar _tmp382 = _tmp248 * _tmp268;
  const Scalar _tmp383 = _tmp249 * _tmp270;
  const Scalar _tmp384 = _tmp244 * _tmp266;
  const Scalar _tmp385 = _tmp250 * _tmp272;
  const Scalar _tmp386 = _tmp252 * _tmp288;
  const Scalar _tmp387 = _tmp251 * _tmp286;
  const Scalar _tmp388 = _tmp248 * _tmp280;
  const Scalar _tmp389 = _tmp244 * _tmp278;
  const Scalar _tmp390 = _tmp249 * _tmp282;
  const Scalar _tmp391 = _tmp250 * _tmp284;
  const Scalar _tmp392 = 4 * std::pow(_tmp261, Scalar(2));
  const Scalar _tmp393 = 4 * std::pow(_tmp263, Scalar(2));
  const Scalar _tmp394 = 4 * std::pow(_tmp253, Scalar(2));
  const Scalar _tmp395 = 4 * std::pow(_tmp255, Scalar(2));
  const Scalar _tmp396 = 4 * std::pow(_tmp257, Scalar(2));
  const Scalar _tmp397 = 4 * std::pow(_tmp259, Scalar(2));
  const Scalar _tmp398 = _tmp392 + _tmp393 + _tmp394 + _tmp395 + _tmp396 + _tmp397;
  const Scalar _tmp399 = 4 * _tmp263;
  const Scalar _tmp400 = _tmp275 * _tmp399;
  const Scalar _tmp401 = 4 * _tmp261;
  const Scalar _tmp402 = _tmp273 * _tmp401;
  const Scalar _tmp403 = 4 * _tmp255 * _tmp267;
  const Scalar _tmp404 = 4 * _tmp257 * _tmp269;
  const Scalar _tmp405 = 4 * _tmp253 * _tmp265;
  const Scalar _tmp406 = 4 * _tmp259;
  const Scalar _tmp407 = _tmp271 * _tmp406;
  const Scalar _tmp408 = -_tmp400 - _tmp402 - _tmp403 - _tmp404 - _tmp405 - _tmp407;
  const Scalar _tmp409 = _tmp285 * _tmp401;
  const Scalar _tmp410 = _tmp287 * _tmp399;
  const Scalar _tmp411 = _tmp283 * _tmp406;
  const Scalar _tmp412 = 4 * _tmp277;
  const Scalar _tmp413 = _tmp253 * _tmp412;
  const Scalar _tmp414 = 4 * _tmp281;
  const Scalar _tmp415 = _tmp257 * _tmp414;
  const Scalar _tmp416 = 4 * _tmp279;
  const Scalar _tmp417 = _tmp255 * _tmp416;
  const Scalar _tmp418 = -_tmp409 - _tmp410 - _tmp411 - _tmp413 - _tmp415 - _tmp417;
  const Scalar _tmp419 = _tmp264 * _tmp311;
  const Scalar _tmp420 = _tmp254 * _tmp301;
  const Scalar _tmp421 = _tmp262 * _tmp310;
  const Scalar _tmp422 = _tmp258 * _tmp306;
  const Scalar _tmp423 = _tmp260 * _tmp309;
  const Scalar _tmp424 = _tmp256 * _tmp305;
  const Scalar _tmp425 = _tmp260 * _tmp324;
  const Scalar _tmp426 = _tmp254 * _tmp321;
  const Scalar _tmp427 = _tmp264 * _tmp326;
  const Scalar _tmp428 = _tmp262 * _tmp325;
  const Scalar _tmp429 = _tmp258 * _tmp323;
  const Scalar _tmp430 = _tmp256 * _tmp322;
  const Scalar _tmp431 = _tmp262 * _tmp336;
  const Scalar _tmp432 = _tmp264 * _tmp337;
  const Scalar _tmp433 = _tmp258 * _tmp334;
  const Scalar _tmp434 = _tmp254 * _tmp332;
  const Scalar _tmp435 = _tmp256 * _tmp333;
  const Scalar _tmp436 = _tmp260 * _tmp335;
  const Scalar _tmp437 = _tmp400 + _tmp402 + _tmp403 + _tmp404 + _tmp405 + _tmp407;
  const Scalar _tmp438 = _tmp409 + _tmp410 + _tmp411 + _tmp413 + _tmp415 + _tmp417;
  const Scalar _tmp439 = 4 * std::pow(_tmp269, Scalar(2));
  const Scalar _tmp440 = 4 * std::pow(_tmp267, Scalar(2));
  const Scalar _tmp441 = 4 * std::pow(_tmp265, Scalar(2));
  const Scalar _tmp442 = 4 * std::pow(_tmp271, Scalar(2));
  const Scalar _tmp443 = 4 * std::pow(_tmp275, Scalar(2));
  const Scalar _tmp444 = 4 * std::pow(_tmp273, Scalar(2));
  const Scalar _tmp445 = _tmp439 + _tmp440 + _tmp441 + _tmp442 + _tmp443 + _tmp444;
  const Scalar _tmp446 = 4 * _tmp275 * _tmp287;
  const Scalar _tmp447 = 4 * _tmp273 * _tmp285;
  const Scalar _tmp448 = 4 * _tmp271 * _tmp283;
  const Scalar _tmp449 = _tmp267 * _tmp416;
  const Scalar _tmp450 = _tmp269 * _tmp414;
  const Scalar _tmp451 = _tmp265 * _tmp412;
  const Scalar _tmp452 = _tmp446 + _tmp447 + _tmp448 + _tmp449 + _tmp450 + _tmp451;
  const Scalar _tmp453 = _tmp276 * _tmp311;
  const Scalar _tmp454 = _tmp268 * _tmp305;
  const Scalar _tmp455 = _tmp272 * _tmp309;
  const Scalar _tmp456 = _tmp270 * _tmp306;
  const Scalar _tmp457 = _tmp266 * _tmp301;
  const Scalar _tmp458 = _tmp274 * _tmp310;
  const Scalar _tmp459 = _tmp274 * _tmp325;
  const Scalar _tmp460 = _tmp276 * _tmp326;
  const Scalar _tmp461 = _tmp268 * _tmp322;
  const Scalar _tmp462 = _tmp270 * _tmp323;
  const Scalar _tmp463 = _tmp272 * _tmp324;
  const Scalar _tmp464 = _tmp266 * _tmp321;
  const Scalar _tmp465 = _tmp272 * _tmp335;
  const Scalar _tmp466 = _tmp270 * _tmp334;
  const Scalar _tmp467 = _tmp266 * _tmp332;
  const Scalar _tmp468 = _tmp268 * _tmp333;
  const Scalar _tmp469 = _tmp276 * _tmp337;
  const Scalar _tmp470 = _tmp274 * _tmp336;
  const Scalar _tmp471 = -_tmp446 - _tmp447 - _tmp448 - _tmp449 - _tmp450 - _tmp451;
  const Scalar _tmp472 = 4 * std::pow(_tmp283, Scalar(2));
  const Scalar _tmp473 = 4 * std::pow(_tmp277, Scalar(2));
  const Scalar _tmp474 = 4 * std::pow(_tmp281, Scalar(2));
  const Scalar _tmp475 = 4 * std::pow(_tmp279, Scalar(2));
  const Scalar _tmp476 = 4 * std::pow(_tmp287, Scalar(2));
  const Scalar _tmp477 = 4 * std::pow(_tmp285, Scalar(2));
  const Scalar _tmp478 = _tmp472 + _tmp473 + _tmp474 + _tmp475 + _tmp476 + _tmp477;
  const Scalar _tmp479 = _tmp280 * _tmp305;
  const Scalar _tmp480 = _tmp282 * _tmp306;
  const Scalar _tmp481 = _tmp284 * _tmp309;
  const Scalar _tmp482 = _tmp288 * _tmp311;
  const Scalar _tmp483 = _tmp286 * _tmp310;
  const Scalar _tmp484 = _tmp278 * _tmp301;
  const Scalar _tmp485 = _tmp288 * _tmp326;
  const Scalar _tmp486 = _tmp286 * _tmp325;
  const Scalar _tmp487 = _tmp280 * _tmp322;
  const Scalar _tmp488 = _tmp282 * _tmp323;
  const Scalar _tmp489 = _tmp278 * _tmp321;
  const Scalar _tmp490 = _tmp284 * _tmp324;
  const Scalar _tmp491 = _tmp282 * _tmp334;
  const Scalar _tmp492 = _tmp278 * _tmp332;
  const Scalar _tmp493 = _tmp280 * _tmp333;
  const Scalar _tmp494 = _tmp284 * _tmp335;
  const Scalar _tmp495 = _tmp286 * _tmp336;
  const Scalar _tmp496 = _tmp288 * _tmp337;
  const Scalar _tmp497 = _tmp256 * _tmp91;
  const Scalar _tmp498 = _tmp258 * _tmp93;
  const Scalar _tmp499 = _tmp102 * _tmp264;
  const Scalar _tmp500 = _tmp262 * _tmp97;
  const Scalar _tmp501 = _tmp260 * _tmp95;
  const Scalar _tmp502 = _tmp254 * _tmp89;
  const Scalar _tmp503 = _tmp274 * _tmp97;
  const Scalar _tmp504 = _tmp102 * _tmp276;
  const Scalar _tmp505 = _tmp272 * _tmp95;
  const Scalar _tmp506 = _tmp266 * _tmp89;
  const Scalar _tmp507 = _tmp270 * _tmp93;
  const Scalar _tmp508 = _tmp268 * _tmp91;
  const Scalar _tmp509 = _tmp284 * _tmp95;
  const Scalar _tmp510 = _tmp278 * _tmp89;
  const Scalar _tmp511 = _tmp280 * _tmp91;
  const Scalar _tmp512 = _tmp282 * _tmp93;
  const Scalar _tmp513 = _tmp102 * _tmp288;
  const Scalar _tmp514 = _tmp286 * _tmp97;

  // Output terms (4)
  if (res != nullptr) {
    Eigen::Matrix<Scalar, 6, 1>& _res = (*res);

    _res(0, 0) = _tmp89;
    _res(1, 0) = _tmp91;
    _res(2, 0) = _tmp93;
    _res(3, 0) = _tmp95;
    _res(4, 0) = _tmp97;
    _res(5, 0) = _tmp102;
  }

  if (jacobian != nullptr) {
    Eigen::Matrix<Scalar, 6, 12>& _jacobian = (*jacobian);

    _jacobian(0, 0) = _tmp152;
    _jacobian(1, 0) = _tmp158;
    _jacobian(2, 0) = _tmp165;
    _jacobian(3, 0) = _tmp170;
    _jacobian(4, 0) = _tmp177;
    _jacobian(5, 0) = _tmp185;
    _jacobian(0, 1) = _tmp211;
    _jacobian(1, 1) = _tmp216;
    _jacobian(2, 1) = _tmp218;
    _jacobian(3, 1) = _tmp223;
    _jacobian(4, 1) = _tmp225;
    _jacobian(5, 1) = _tmp226;
    _jacobian(0, 2) = _tmp244;
    _jacobian(1, 2) = _tmp248;
    _jacobian(2, 2) = _tmp249;
    _jacobian(3, 2) = _tmp250;
    _jacobian(4, 2) = _tmp251;
    _jacobian(5, 2) = _tmp252;
    _jacobian(0, 3) = _tmp254;
    _jacobian(1, 3) = _tmp256;
    _jacobian(2, 3) = _tmp258;
    _jacobian(3, 3) = _tmp260;
    _jacobian(4, 3) = _tmp262;
    _jacobian(5, 3) = _tmp264;
    _jacobian(0, 4) = -_tmp266;
    _jacobian(1, 4) = -_tmp268;
    _jacobian(2, 4) = -_tmp270;
    _jacobian(3, 4) = -_tmp272;
    _jacobian(4, 4) = -_tmp274;
    _jacobian(5, 4) = -_tmp276;
    _jacobian(0, 5) = -_tmp278;
    _jacobian(1, 5) = -_tmp280;
    _jacobian(2, 5) = -_tmp282;
    _jacobian(3, 5) = -_tmp284;
    _jacobian(4, 5) = -_tmp286;
    _jacobian(5, 5) = -_tmp288;
    _jacobian(0, 6) = _tmp301;
    _jacobian(1, 6) = _tmp305;
    _jacobian(2, 6) = _tmp306;
    _jacobian(3, 6) = _tmp309;
    _jacobian(4, 6) = _tmp310;
    _jacobian(5, 6) = _tmp311;
    _jacobian(0, 7) = _tmp321;
    _jacobian(1, 7) = _tmp322;
    _jacobian(2, 7) = _tmp323;
    _jacobian(3, 7) = _tmp324;
    _jacobian(4, 7) = _tmp325;
    _jacobian(5, 7) = _tmp326;
    _jacobian(0, 8) = _tmp332;
    _jacobian(1, 8) = _tmp333;
    _jacobian(2, 8) = _tmp334;
    _jacobian(3, 8) = _tmp335;
    _jacobian(4, 8) = _tmp336;
    _jacobian(5, 8) = _tmp337;
    _jacobian(0, 9) = -_tmp254;
    _jacobian(1, 9) = -_tmp256;
    _jacobian(2, 9) = -_tmp258;
    _jacobian(3, 9) = -_tmp260;
    _jacobian(4, 9) = -_tmp262;
    _jacobian(5, 9) = -_tmp264;
    _jacobian(0, 10) = _tmp266;
    _jacobian(1, 10) = _tmp268;
    _jacobian(2, 10) = _tmp270;
    _jacobian(3, 10) = _tmp272;
    _jacobian(4, 10) = _tmp274;
    _jacobian(5, 10) = _tmp276;
    _jacobian(0, 11) = _tmp278;
    _jacobian(1, 11) = _tmp280;
    _jacobian(2, 11) = _tmp282;
    _jacobian(3, 11) = _tmp284;
    _jacobian(4, 11) = _tmp286;
    _jacobian(5, 11) = _tmp288;
  }

  if (hessian != nullptr) {
    Eigen::Matrix<Scalar, 12, 12>& _hessian = (*hessian);

    _hessian(0, 0) = std::pow(_tmp152, Scalar(2)) + std::pow(_tmp158, Scalar(2)) +
                     std::pow(_tmp165, Scalar(2)) + std::pow(_tmp170, Scalar(2)) +
                     std::pow(_tmp177, Scalar(2)) + std::pow(_tmp185, Scalar(2));
    _hessian(1, 0) = _tmp152 * _tmp211 + _tmp158 * _tmp216 + _tmp165 * _tmp218 + _tmp170 * _tmp223 +
                     _tmp177 * _tmp225 + _tmp185 * _tmp226;
    _hessian(2, 0) = _tmp152 * _tmp244 + _tmp158 * _tmp248 + _tmp165 * _tmp249 + _tmp170 * _tmp250 +
                     _tmp177 * _tmp251 + _tmp185 * _tmp252;
    _hessian(3, 0) = _tmp338 + _tmp339 + _tmp340 + _tmp341 + _tmp342 + _tmp343;
    _hessian(4, 0) = -_tmp344 - _tmp345 - _tmp346 - _tmp347 - _tmp348 - _tmp349;
    _hessian(5, 0) = -_tmp350 - _tmp351 - _tmp352 - _tmp353 - _tmp354 - _tmp355;
    _hessian(6, 0) = _tmp152 * _tmp301 + _tmp158 * _tmp305 + _tmp165 * _tmp306 + _tmp170 * _tmp309 +
                     _tmp177 * _tmp310 + _tmp185 * _tmp311;
    _hessian(7, 0) = _tmp152 * _tmp321 + _tmp158 * _tmp322 + _tmp165 * _tmp323 + _tmp170 * _tmp324 +
                     _tmp177 * _tmp325 + _tmp185 * _tmp326;
    _hessian(8, 0) = _tmp152 * _tmp332 + _tmp158 * _tmp333 + _tmp165 * _tmp334 + _tmp170 * _tmp335 +
                     _tmp177 * _tmp336 + _tmp185 * _tmp337;
    _hessian(9, 0) = -_tmp338 - _tmp339 - _tmp340 - _tmp341 - _tmp342 - _tmp343;
    _hessian(10, 0) = _tmp344 + _tmp345 + _tmp346 + _tmp347 + _tmp348 + _tmp349;
    _hessian(11, 0) = _tmp350 + _tmp351 + _tmp352 + _tmp353 + _tmp354 + _tmp355;
    _hessian(0, 1) = 0;
    _hessian(1, 1) = std::pow(_tmp211, Scalar(2)) + std::pow(_tmp216, Scalar(2)) +
                     std::pow(_tmp218, Scalar(2)) + std::pow(_tmp223, Scalar(2)) +
                     std::pow(_tmp225, Scalar(2)) + std::pow(_tmp226, Scalar(2));
    _hessian(2, 1) = _tmp211 * _tmp244 + _tmp216 * _tmp248 + _tmp218 * _tmp249 + _tmp223 * _tmp250 +
                     _tmp225 * _tmp251 + _tmp226 * _tmp252;
    _hessian(3, 1) = _tmp356 + _tmp357 + _tmp358 + _tmp359 + _tmp360 + _tmp361;
    _hessian(4, 1) = -_tmp362 - _tmp363 - _tmp364 - _tmp365 - _tmp366 - _tmp367;
    _hessian(5, 1) = -_tmp368 - _tmp369 - _tmp370 - _tmp371 - _tmp372 - _tmp373;
    _hessian(6, 1) = _tmp211 * _tmp301 + _tmp216 * _tmp305 + _tmp218 * _tmp306 + _tmp223 * _tmp309 +
                     _tmp225 * _tmp310 + _tmp226 * _tmp311;
    _hessian(7, 1) = _tmp211 * _tmp321 + _tmp216 * _tmp322 + _tmp218 * _tmp323 + _tmp223 * _tmp324 +
                     _tmp225 * _tmp325 + _tmp226 * _tmp326;
    _hessian(8, 1) = _tmp211 * _tmp332 + _tmp216 * _tmp333 + _tmp218 * _tmp334 + _tmp223 * _tmp335 +
                     _tmp225 * _tmp336 + _tmp226 * _tmp337;
    _hessian(9, 1) = -_tmp356 - _tmp357 - _tmp358 - _tmp359 - _tmp360 - _tmp361;
    _hessian(10, 1) = _tmp362 + _tmp363 + _tmp364 + _tmp365 + _tmp366 + _tmp367;
    _hessian(11, 1) = _tmp368 + _tmp369 + _tmp370 + _tmp371 + _tmp372 + _tmp373;
    _hessian(0, 2) = 0;
    _hessian(1, 2) = 0;
    _hessian(2, 2) = std::pow(_tmp244, Scalar(2)) + std::pow(_tmp248, Scalar(2)) +
                     std::pow(_tmp249, Scalar(2)) + std::pow(_tmp250, Scalar(2)) +
                     std::pow(_tmp251, Scalar(2)) + std::pow(_tmp252, Scalar(2));
    _hessian(3, 2) = _tmp374 + _tmp375 + _tmp376 + _tmp377 + _tmp378 + _tmp379;
    _hessian(4, 2) = -_tmp380 - _tmp381 - _tmp382 - _tmp383 - _tmp384 - _tmp385;
    _hessian(5, 2) = -_tmp386 - _tmp387 - _tmp388 - _tmp389 - _tmp390 - _tmp391;
    _hessian(6, 2) = _tmp244 * _tmp301 + _tmp248 * _tmp305 + _tmp249 * _tmp306 + _tmp250 * _tmp309 +
                     _tmp251 * _tmp310 + _tmp252 * _tmp311;
    _hessian(7, 2) = _tmp244 * _tmp321 + _tmp248 * _tmp322 + _tmp249 * _tmp323 + _tmp250 * _tmp324 +
                     _tmp251 * _tmp325 + _tmp252 * _tmp326;
    _hessian(8, 2) = _tmp244 * _tmp332 + _tmp248 * _tmp333 + _tmp249 * _tmp334 + _tmp250 * _tmp335 +
                     _tmp251 * _tmp336 + _tmp252 * _tmp337;
    _hessian(9, 2) = -_tmp374 - _tmp375 - _tmp376 - _tmp377 - _tmp378 - _tmp379;
    _hessian(10, 2) = _tmp380 + _tmp381 + _tmp382 + _tmp383 + _tmp384 + _tmp385;
    _hessian(11, 2) = _tmp386 + _tmp387 + _tmp388 + _tmp389 + _tmp390 + _tmp391;
    _hessian(0, 3) = 0;
    _hessian(1, 3) = 0;
    _hessian(2, 3) = 0;
    _hessian(3, 3) = _tmp398;
    _hessian(4, 3) = _tmp408;
    _hessian(5, 3) = _tmp418;
    _hessian(6, 3) = _tmp419 + _tmp420 + _tmp421 + _tmp422 + _tmp423 + _tmp424;
    _hessian(7, 3) = _tmp425 + _tmp426 + _tmp427 + _tmp428 + _tmp429 + _tmp430;
    _hessian(8, 3) = _tmp431 + _tmp432 + _tmp433 + _tmp434 + _tmp435 + _tmp436;
    _hessian(9, 3) = -_tmp392 - _tmp393 - _tmp394 - _tmp395 - _tmp396 - _tmp397;
    _hessian(10, 3) = _tmp437;
    _hessian(11, 3) = _tmp438;
    _hessian(0, 4) = 0;
    _hessian(1, 4) = 0;
    _hessian(2, 4) = 0;
    _hessian(3, 4) = 0;
    _hessian(4, 4) = _tmp445;
    _hessian(5, 4) = _tmp452;
    _hessian(6, 4) = -_tmp453 - _tmp454 - _tmp455 - _tmp456 - _tmp457 - _tmp458;
    _hessian(7, 4) = -_tmp459 - _tmp460 - _tmp461 - _tmp462 - _tmp463 - _tmp464;
    _hessian(8, 4) = -_tmp465 - _tmp466 - _tmp467 - _tmp468 - _tmp469 - _tmp470;
    _hessian(9, 4) = _tmp437;
    _hessian(10, 4) = -_tmp439 - _tmp440 - _tmp441 - _tmp442 - _tmp443 - _tmp444;
    _hessian(11, 4) = _tmp471;
    _hessian(0, 5) = 0;
    _hessian(1, 5) = 0;
    _hessian(2, 5) = 0;
    _hessian(3, 5) = 0;
    _hessian(4, 5) = 0;
    _hessian(5, 5) = _tmp478;
    _hessian(6, 5) = -_tmp479 - _tmp480 - _tmp481 - _tmp482 - _tmp483 - _tmp484;
    _hessian(7, 5) = -_tmp485 - _tmp486 - _tmp487 - _tmp488 - _tmp489 - _tmp490;
    _hessian(8, 5) = -_tmp491 - _tmp492 - _tmp493 - _tmp494 - _tmp495 - _tmp496;
    _hessian(9, 5) = _tmp438;
    _hessian(10, 5) = _tmp471;
    _hessian(11, 5) = -_tmp472 - _tmp473 - _tmp474 - _tmp475 - _tmp476 - _tmp477;
    _hessian(0, 6) = 0;
    _hessian(1, 6) = 0;
    _hessian(2, 6) = 0;
    _hessian(3, 6) = 0;
    _hessian(4, 6) = 0;
    _hessian(5, 6) = 0;
    _hessian(6, 6) = std::pow(_tmp301, Scalar(2)) + std::pow(_tmp305, Scalar(2)) +
                     std::pow(_tmp306, Scalar(2)) + std::pow(_tmp309, Scalar(2)) +
                     std::pow(_tmp310, Scalar(2)) + std::pow(_tmp311, Scalar(2));
    _hessian(7, 6) = _tmp301 * _tmp321 + _tmp305 * _tmp322 + _tmp306 * _tmp323 + _tmp309 * _tmp324 +
                     _tmp310 * _tmp325 + _tmp311 * _tmp326;
    _hessian(8, 6) = _tmp301 * _tmp332 + _tmp305 * _tmp333 + _tmp306 * _tmp334 + _tmp309 * _tmp335 +
                     _tmp310 * _tmp336 + _tmp311 * _tmp337;
    _hessian(9, 6) = -_tmp419 - _tmp420 - _tmp421 - _tmp422 - _tmp423 - _tmp424;
    _hessian(10, 6) = _tmp453 + _tmp454 + _tmp455 + _tmp456 + _tmp457 + _tmp458;
    _hessian(11, 6) = _tmp479 + _tmp480 + _tmp481 + _tmp482 + _tmp483 + _tmp484;
    _hessian(0, 7) = 0;
    _hessian(1, 7) = 0;
    _hessian(2, 7) = 0;
    _hessian(3, 7) = 0;
    _hessian(4, 7) = 0;
    _hessian(5, 7) = 0;
    _hessian(6, 7) = 0;
    _hessian(7, 7) = std::pow(_tmp321, Scalar(2)) + std::pow(_tmp322, Scalar(2)) +
                     std::pow(_tmp323, Scalar(2)) + std::pow(_tmp324, Scalar(2)) +
                     std::pow(_tmp325, Scalar(2)) + std::pow(_tmp326, Scalar(2));
    _hessian(8, 7) = _tmp321 * _tmp332 + _tmp322 * _tmp333 + _tmp323 * _tmp334 + _tmp324 * _tmp335 +
                     _tmp325 * _tmp336 + _tmp326 * _tmp337;
    _hessian(9, 7) = -_tmp425 - _tmp426 - _tmp427 - _tmp428 - _tmp429 - _tmp430;
    _hessian(10, 7) = _tmp459 + _tmp460 + _tmp461 + _tmp462 + _tmp463 + _tmp464;
    _hessian(11, 7) = _tmp485 + _tmp486 + _tmp487 + _tmp488 + _tmp489 + _tmp490;
    _hessian(0, 8) = 0;
    _hessian(1, 8) = 0;
    _hessian(2, 8) = 0;
    _hessian(3, 8) = 0;
    _hessian(4, 8) = 0;
    _hessian(5, 8) = 0;
    _hessian(6, 8) = 0;
    _hessian(7, 8) = 0;
    _hessian(8, 8) = std::pow(_tmp332, Scalar(2)) + std::pow(_tmp333, Scalar(2)) +
                     std::pow(_tmp334, Scalar(2)) + std::pow(_tmp335, Scalar(2)) +
                     std::pow(_tmp336, Scalar(2)) + std::pow(_tmp337, Scalar(2));
    _hessian(9, 8) = -_tmp431 - _tmp432 - _tmp433 - _tmp434 - _tmp435 - _tmp436;
    _hessian(10, 8) = _tmp465 + _tmp466 + _tmp467 + _tmp468 + _tmp469 + _tmp470;
    _hessian(11, 8) = _tmp491 + _tmp492 + _tmp493 + _tmp494 + _tmp495 + _tmp496;
    _hessian(0, 9) = 0;
    _hessian(1, 9) = 0;
    _hessian(2, 9) = 0;
    _hessian(3, 9) = 0;
    _hessian(4, 9) = 0;
    _hessian(5, 9) = 0;
    _hessian(6, 9) = 0;
    _hessian(7, 9) = 0;
    _hessian(8, 9) = 0;
    _hessian(9, 9) = _tmp398;
    _hessian(10, 9) = _tmp408;
    _hessian(11, 9) = _tmp418;
    _hessian(0, 10) = 0;
    _hessian(1, 10) = 0;
    _hessian(2, 10) = 0;
    _hessian(3, 10) = 0;
    _hessian(4, 10) = 0;
    _hessian(5, 10) = 0;
    _hessian(6, 10) = 0;
    _hessian(7, 10) = 0;
    _hessian(8, 10) = 0;
    _hessian(9, 10) = 0;
    _hessian(10, 10) = _tmp445;
    _hessian(11, 10) = _tmp452;
    _hessian(0, 11) = 0;
    _hessian(1, 11) = 0;
    _hessian(2, 11) = 0;
    _hessian(3, 11) = 0;
    _hessian(4, 11) = 0;
    _hessian(5, 11) = 0;
    _hessian(6, 11) = 0;
    _hessian(7, 11) = 0;
    _hessian(8, 11) = 0;
    _hessian(9, 11) = 0;
    _hessian(10, 11) = 0;
    _hessian(11, 11) = _tmp478;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 12, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp102 * _tmp185 + _tmp152 * _tmp89 + _tmp158 * _tmp91 + _tmp165 * _tmp93 +
                 _tmp170 * _tmp95 + _tmp177 * _tmp97;
    _rhs(1, 0) = _tmp102 * _tmp226 + _tmp211 * _tmp89 + _tmp216 * _tmp91 + _tmp218 * _tmp93 +
                 _tmp223 * _tmp95 + _tmp225 * _tmp97;
    _rhs(2, 0) = _tmp102 * _tmp252 + _tmp244 * _tmp89 + _tmp248 * _tmp91 + _tmp249 * _tmp93 +
                 _tmp250 * _tmp95 + _tmp251 * _tmp97;
    _rhs(3, 0) = _tmp497 + _tmp498 + _tmp499 + _tmp500 + _tmp501 + _tmp502;
    _rhs(4, 0) = -_tmp503 - _tmp504 - _tmp505 - _tmp506 - _tmp507 - _tmp508;
    _rhs(5, 0) = -_tmp509 - _tmp510 - _tmp511 - _tmp512 - _tmp513 - _tmp514;
    _rhs(6, 0) = _tmp102 * _tmp311 + _tmp301 * _tmp89 + _tmp305 * _tmp91 + _tmp306 * _tmp93 +
                 _tmp309 * _tmp95 + _tmp310 * _tmp97;
    _rhs(7, 0) = _tmp102 * _tmp326 + _tmp321 * _tmp89 + _tmp322 * _tmp91 + _tmp323 * _tmp93 +
                 _tmp324 * _tmp95 + _tmp325 * _tmp97;
    _rhs(8, 0) = _tmp102 * _tmp337 + _tmp332 * _tmp89 + _tmp333 * _tmp91 + _tmp334 * _tmp93 +
                 _tmp335 * _tmp95 + _tmp336 * _tmp97;
    _rhs(9, 0) = -_tmp497 - _tmp498 - _tmp499 - _tmp500 - _tmp501 - _tmp502;
    _rhs(10, 0) = _tmp503 + _tmp504 + _tmp505 + _tmp506 + _tmp507 + _tmp508;
    _rhs(11, 0) = _tmp509 + _tmp510 + _tmp511 + _tmp512 + _tmp513 + _tmp514;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
