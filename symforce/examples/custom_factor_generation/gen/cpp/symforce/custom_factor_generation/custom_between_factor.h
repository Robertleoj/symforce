// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>

namespace custom_factor_generation {

/**
 * Return the 6dof residual on the relative pose between the given two views. Compares
 * the relative pose between the optimized poses to the relative pose between the priors.
 *
 * This is similar to geo_factors_codegen.between_factor, but it uses a weight and diagonal
 * covariance instead of a sqrt information matrix
 *
 * Args:
 *     nav_T_src: Current pose of the src frame
 *     nav_T_target: Current pose of the target frame
 *     target_T_src_prior: Prior on the pose of src in the target frame
 *     prior_weight: The weight of the Gaussian prior
 *     prior_sigmas: The diagonal of the sqrt covariance matrix
 *     epsilon: Small positive value
 *
 * Outputs:
 *     res: The residual of the between factor
 *     jacobian: (6x12) jacobian of res wrt args nav_T_src (6), nav_T_target (6)
 *     hessian: (12x12) Gauss-Newton hessian for args nav_T_src (6), nav_T_target (6)
 *     rhs: (12x1) Gauss-Newton rhs for args nav_T_src (6), nav_T_target (6)
 */
template <typename Scalar>
void CustomBetweenFactor(const sym::Pose3<Scalar>& nav_T_src,
                         const sym::Pose3<Scalar>& nav_T_target,
                         const sym::Pose3<Scalar>& target_T_src_prior, const Scalar prior_weight,
                         const Eigen::Matrix<Scalar, 6, 1>& prior_sigmas, const Scalar epsilon,
                         Eigen::Matrix<Scalar, 6, 1>* const res = nullptr,
                         Eigen::Matrix<Scalar, 6, 12>* const jacobian = nullptr,
                         Eigen::Matrix<Scalar, 12, 12>* const hessian = nullptr,
                         Eigen::Matrix<Scalar, 12, 1>* const rhs = nullptr) {
  // Total ops: 729

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _nav_T_src = nav_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _nav_T_target = nav_T_target.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _target_T_src_prior = target_T_src_prior.Data();

  // Intermediate terms (266)
  const Scalar _tmp0 = Scalar(1.0) / (epsilon + prior_sigmas(0, 0));
  const Scalar _tmp1 = _nav_T_src[0] * _nav_T_target[2] - _nav_T_src[1] * _nav_T_target[3] -
                       _nav_T_src[2] * _nav_T_target[0] + _nav_T_src[3] * _nav_T_target[1];
  const Scalar _tmp2 = _target_T_src_prior[2] * _tmp1;
  const Scalar _tmp3 = -_tmp2;
  const Scalar _tmp4 = _nav_T_src[0] * _nav_T_target[3] + _nav_T_src[1] * _nav_T_target[2] -
                       _nav_T_src[2] * _nav_T_target[1] - _nav_T_src[3] * _nav_T_target[0];
  const Scalar _tmp5 = _target_T_src_prior[3] * _tmp4;
  const Scalar _tmp6 = -_nav_T_src[0] * _nav_T_target[1] + _nav_T_src[1] * _nav_T_target[0] -
                       _nav_T_src[2] * _nav_T_target[3] + _nav_T_src[3] * _nav_T_target[2];
  const Scalar _tmp7 = _target_T_src_prior[1] * _tmp6;
  const Scalar _tmp8 = _nav_T_src[0] * _nav_T_target[0] + _nav_T_src[1] * _nav_T_target[1] +
                       _nav_T_src[2] * _nav_T_target[2] + _nav_T_src[3] * _nav_T_target[3];
  const Scalar _tmp9 = _target_T_src_prior[0] * _tmp8;
  const Scalar _tmp10 = _tmp7 - _tmp9;
  const Scalar _tmp11 = _tmp10 + _tmp3 + _tmp5;
  const Scalar _tmp12 = std::sqrt(prior_weight);
  const Scalar _tmp13 = _target_T_src_prior[0] * _tmp4;
  const Scalar _tmp14 = -_tmp13;
  const Scalar _tmp15 = _target_T_src_prior[2] * _tmp6;
  const Scalar _tmp16 = _target_T_src_prior[1] * _tmp1;
  const Scalar _tmp17 = _tmp15 + _tmp16;
  const Scalar _tmp18 = _tmp14 + _tmp17;
  const Scalar _tmp19 = _target_T_src_prior[3] * _tmp8;
  const Scalar _tmp20 = -_tmp19;
  const Scalar _tmp21 = _tmp18 + _tmp20;
  const Scalar _tmp22 = std::fabs(_tmp21);
  const Scalar _tmp23 = epsilon - 1;
  const Scalar _tmp24 = std::min<Scalar>(_tmp22, -_tmp23);
  const Scalar _tmp25 = std::pow(_tmp24, Scalar(2)) - 1;
  const Scalar _tmp26 = -_tmp25;
  const Scalar _tmp27 = std::acos(_tmp24);
  const Scalar _tmp28 = _tmp27 / std::sqrt(_tmp26);
  const Scalar _tmp29 = 4 * _tmp12 * _tmp28 *
                        (std::min<Scalar>(0, -(((_tmp18 + _tmp20) > 0) - ((_tmp18 + _tmp20) < 0))) +
                         Scalar(1) / Scalar(2));
  const Scalar _tmp30 = _tmp0 * _tmp11 * _tmp29;
  const Scalar _tmp31 = Scalar(1.0) / (epsilon + prior_sigmas(1, 0));
  const Scalar _tmp32 = _target_T_src_prior[3] * _tmp1;
  const Scalar _tmp33 = _target_T_src_prior[1] * _tmp8;
  const Scalar _tmp34 = _target_T_src_prior[0] * _tmp6;
  const Scalar _tmp35 = _target_T_src_prior[2] * _tmp4;
  const Scalar _tmp36 = _tmp34 + _tmp35;
  const Scalar _tmp37 = _tmp32 + _tmp33 + _tmp36;
  const Scalar _tmp38 = _tmp29 * _tmp31 * _tmp37;
  const Scalar _tmp39 = _target_T_src_prior[1] * _tmp4;
  const Scalar _tmp40 = -_tmp39;
  const Scalar _tmp41 = _target_T_src_prior[2] * _tmp8;
  const Scalar _tmp42 = _target_T_src_prior[3] * _tmp6;
  const Scalar _tmp43 = _target_T_src_prior[0] * _tmp1;
  const Scalar _tmp44 = _tmp42 - _tmp43;
  const Scalar _tmp45 = _tmp40 + _tmp41 + _tmp44;
  const Scalar _tmp46 = Scalar(1.0) / (epsilon + prior_sigmas(2, 0));
  const Scalar _tmp47 = _tmp29 * _tmp45 * _tmp46;
  const Scalar _tmp48 = std::pow(_nav_T_target[2], Scalar(2));
  const Scalar _tmp49 = std::pow(_nav_T_target[1], Scalar(2));
  const Scalar _tmp50 = _tmp49 + Scalar(-1) / Scalar(2);
  const Scalar _tmp51 = _tmp48 + _tmp50;
  const Scalar _tmp52 = 2 * _nav_T_src[4];
  const Scalar _tmp53 = _nav_T_target[0] * _nav_T_target[1];
  const Scalar _tmp54 = _nav_T_target[2] * _nav_T_target[3];
  const Scalar _tmp55 = _tmp53 + _tmp54;
  const Scalar _tmp56 = _nav_T_target[5] * _tmp55;
  const Scalar _tmp57 = _nav_T_target[0] * _nav_T_target[2];
  const Scalar _tmp58 = _nav_T_target[1] * _nav_T_target[3];
  const Scalar _tmp59 = _tmp57 - _tmp58;
  const Scalar _tmp60 = _nav_T_target[6] * _tmp59;
  const Scalar _tmp61 = 2 * _nav_T_src[5];
  const Scalar _tmp62 = _tmp55 * _tmp61;
  const Scalar _tmp63 = 2 * _nav_T_src[6];
  const Scalar _tmp64 = _tmp59 * _tmp63;
  const Scalar _tmp65 = _tmp62 + _tmp64;
  const Scalar _tmp66 = 2 * _nav_T_target[4] * _tmp51 - _target_T_src_prior[4] - _tmp51 * _tmp52 -
                        2 * _tmp56 - 2 * _tmp60 + _tmp65;
  const Scalar _tmp67 = epsilon + prior_sigmas(3, 0);
  const Scalar _tmp68 = _tmp12 / _tmp67;
  const Scalar _tmp69 = std::pow(_nav_T_target[0], Scalar(2));
  const Scalar _tmp70 = _tmp48 + _tmp69 + Scalar(-1) / Scalar(2);
  const Scalar _tmp71 = _nav_T_target[1] * _nav_T_target[2];
  const Scalar _tmp72 = _nav_T_target[0] * _nav_T_target[3];
  const Scalar _tmp73 = _tmp71 + _tmp72;
  const Scalar _tmp74 = _nav_T_target[6] * _tmp73;
  const Scalar _tmp75 = _tmp53 - _tmp54;
  const Scalar _tmp76 = _nav_T_target[4] * _tmp75;
  const Scalar _tmp77 = _tmp63 * _tmp73;
  const Scalar _tmp78 = _tmp52 * _tmp75;
  const Scalar _tmp79 = _tmp77 + _tmp78;
  const Scalar _tmp80 = 2 * _nav_T_target[5] * _tmp70 - _target_T_src_prior[5] - _tmp61 * _tmp70 -
                        2 * _tmp74 - 2 * _tmp76 + _tmp79;
  const Scalar _tmp81 = epsilon + prior_sigmas(4, 0);
  const Scalar _tmp82 = _tmp12 / _tmp81;
  const Scalar _tmp83 = _tmp50 + _tmp69;
  const Scalar _tmp84 = _tmp71 - _tmp72;
  const Scalar _tmp85 = _nav_T_target[5] * _tmp84;
  const Scalar _tmp86 = _tmp57 + _tmp58;
  const Scalar _tmp87 = _nav_T_target[4] * _tmp86;
  const Scalar _tmp88 = _tmp61 * _tmp84;
  const Scalar _tmp89 = _tmp52 * _tmp86;
  const Scalar _tmp90 = _tmp88 + _tmp89;
  const Scalar _tmp91 = 2 * _nav_T_target[6] * _tmp83 - _target_T_src_prior[6] - _tmp63 * _tmp83 -
                        2 * _tmp85 - 2 * _tmp87 + _tmp90;
  const Scalar _tmp92 = epsilon + prior_sigmas(5, 0);
  const Scalar _tmp93 = _tmp12 / _tmp92;
  const Scalar _tmp94 = std::pow(_tmp11, Scalar(2));
  const Scalar _tmp95 = (((_tmp21) > 0) - ((_tmp21) < 0));
  const Scalar _tmp96 = _tmp12 * (std::min<Scalar>(0, -_tmp95) + Scalar(1) / Scalar(2));
  const Scalar _tmp97 = _tmp0 * _tmp96;
  const Scalar _tmp98 = _tmp95 * ((((_tmp22 + _tmp23) > 0) - ((_tmp22 + _tmp23) < 0)) - 1);
  const Scalar _tmp99 = _tmp98 / _tmp25;
  const Scalar _tmp100 = _tmp97 * _tmp99;
  const Scalar _tmp101 = _tmp24 * _tmp27 * _tmp98 / (_tmp26 * std::sqrt(_tmp26));
  const Scalar _tmp102 = _tmp101 * _tmp97;
  const Scalar _tmp103 = 2 * _tmp28;
  const Scalar _tmp104 = _tmp103 * _tmp97;
  const Scalar _tmp105 = -_tmp100 * _tmp94 - _tmp102 * _tmp94 - _tmp104 * _tmp21;
  const Scalar _tmp106 = _tmp31 * _tmp96;
  const Scalar _tmp107 = _tmp106 * _tmp99;
  const Scalar _tmp108 = _tmp107 * _tmp37;
  const Scalar _tmp109 = _tmp103 * _tmp106;
  const Scalar _tmp110 = _tmp101 * _tmp106;
  const Scalar _tmp111 = _tmp110 * _tmp37;
  const Scalar _tmp112 = _tmp108 * _tmp11 - _tmp109 * _tmp45 + _tmp11 * _tmp111;
  const Scalar _tmp113 = _tmp46 * _tmp96;
  const Scalar _tmp114 = _tmp101 * _tmp113;
  const Scalar _tmp115 = _tmp114 * _tmp45;
  const Scalar _tmp116 = _tmp103 * _tmp113;
  const Scalar _tmp117 = _tmp113 * _tmp99;
  const Scalar _tmp118 = _tmp117 * _tmp45;
  const Scalar _tmp119 = _tmp11 * _tmp115 + _tmp11 * _tmp118 + _tmp116 * _tmp37;
  const Scalar _tmp120 = _tmp100 * _tmp11;
  const Scalar _tmp121 = _tmp102 * _tmp11;
  const Scalar _tmp122 = _tmp104 * _tmp45 + _tmp120 * _tmp37 + _tmp121 * _tmp37;
  const Scalar _tmp123 = std::pow(_tmp37, Scalar(2));
  const Scalar _tmp124 = -_tmp107 * _tmp123 - _tmp109 * _tmp21 - _tmp110 * _tmp123;
  const Scalar _tmp125 = _tmp11 * _tmp116 - _tmp115 * _tmp37 - _tmp118 * _tmp37;
  const Scalar _tmp126 = -_tmp104 * _tmp37 + _tmp120 * _tmp45 + _tmp121 * _tmp45;
  const Scalar _tmp127 = -_tmp108 * _tmp45 - _tmp109 * _tmp11 - _tmp111 * _tmp45;
  const Scalar _tmp128 = std::pow(_tmp45, Scalar(2));
  const Scalar _tmp129 = -_tmp114 * _tmp128 - _tmp116 * _tmp21 - _tmp117 * _tmp128;
  const Scalar _tmp130 = 2 * _tmp68;
  const Scalar _tmp131 = _tmp130 * _tmp51;
  const Scalar _tmp132 = 2 * _tmp82;
  const Scalar _tmp133 = _tmp132 * _tmp75;
  const Scalar _tmp134 = 2 * _tmp93;
  const Scalar _tmp135 = _tmp134 * _tmp86;
  const Scalar _tmp136 = _tmp130 * _tmp55;
  const Scalar _tmp137 = _tmp132 * _tmp70;
  const Scalar _tmp138 = _tmp134 * _tmp84;
  const Scalar _tmp139 = _tmp130 * _tmp59;
  const Scalar _tmp140 = _tmp132 * _tmp73;
  const Scalar _tmp141 = _tmp134 * _tmp83;
  const Scalar _tmp142 = -_tmp5;
  const Scalar _tmp143 = _tmp7 + _tmp9;
  const Scalar _tmp144 = _tmp142 + _tmp143 + _tmp3;
  const Scalar _tmp145 =
      -_tmp104 * (_tmp13 + _tmp17 + _tmp19) - _tmp120 * _tmp144 - _tmp121 * _tmp144;
  const Scalar _tmp146 = -_tmp41;
  const Scalar _tmp147 =
      _tmp108 * _tmp144 - _tmp109 * (_tmp146 + _tmp39 + _tmp44) + _tmp111 * _tmp144;
  const Scalar _tmp148 = -_tmp33;
  const Scalar _tmp149 = _tmp34 - _tmp35;
  const Scalar _tmp150 =
      _tmp115 * _tmp144 + _tmp116 * (_tmp148 + _tmp149 + _tmp32) + _tmp118 * _tmp144;
  const Scalar _tmp151 = -_tmp49;
  const Scalar _tmp152 = std::pow(_nav_T_target[3], Scalar(2));
  const Scalar _tmp153 = _tmp152 - _tmp69;
  const Scalar _tmp154 = _tmp151 + _tmp153 + _tmp48;
  const Scalar _tmp155 = _nav_T_target[6] * _tmp154;
  const Scalar _tmp156 = 2 * _tmp85;
  const Scalar _tmp157 = 2 * _tmp87;
  const Scalar _tmp158 = _nav_T_src[6] * _tmp154;
  const Scalar _tmp159 = -_tmp155 - _tmp156 - _tmp157 + _tmp158 + _tmp90;
  const Scalar _tmp160 = -_tmp48;
  const Scalar _tmp161 = _tmp153 + _tmp160 + _tmp49;
  const Scalar _tmp162 = _nav_T_target[5] * _tmp161;
  const Scalar _tmp163 = 2 * _tmp74;
  const Scalar _tmp164 = 2 * _tmp76;
  const Scalar _tmp165 = _nav_T_src[5] * _tmp161;
  const Scalar _tmp166 = _tmp162 + _tmp163 + _tmp164 - _tmp165 - _tmp77 - _tmp78;
  const Scalar _tmp167 = -_tmp32;
  const Scalar _tmp168 = _tmp148 + _tmp167 + _tmp36;
  const Scalar _tmp169 = _tmp42 + _tmp43;
  const Scalar _tmp170 =
      _tmp104 * (_tmp146 + _tmp169 + _tmp40) + _tmp120 * _tmp168 + _tmp121 * _tmp168;
  const Scalar _tmp171 = _tmp15 - _tmp16;
  const Scalar _tmp172 =
      -_tmp108 * _tmp168 - _tmp109 * (_tmp14 + _tmp171 + _tmp19) - _tmp111 * _tmp168;
  const Scalar _tmp173 =
      -_tmp115 * _tmp168 + _tmp116 * (_tmp143 + _tmp2 + _tmp5) - _tmp118 * _tmp168;
  const Scalar _tmp174 = _tmp155 + _tmp156 + _tmp157 - _tmp158 - _tmp88 - _tmp89;
  const Scalar _tmp175 = _tmp151 + _tmp152 + _tmp160 + _tmp69;
  const Scalar _tmp176 = _nav_T_target[4] * _tmp175;
  const Scalar _tmp177 = 2 * _tmp56;
  const Scalar _tmp178 = 2 * _tmp60;
  const Scalar _tmp179 = _nav_T_src[4] * _tmp175;
  const Scalar _tmp180 = -_tmp176 - _tmp177 - _tmp178 + _tmp179 + _tmp65;
  const Scalar _tmp181 = _tmp169 + _tmp39 + _tmp41;
  const Scalar _tmp182 =
      _tmp104 * (_tmp149 + _tmp167 + _tmp33) - _tmp120 * _tmp181 - _tmp121 * _tmp181;
  const Scalar _tmp183 =
      _tmp108 * _tmp181 + _tmp109 * (_tmp10 + _tmp142 + _tmp2) + _tmp111 * _tmp181;
  const Scalar _tmp184 =
      _tmp115 * _tmp181 + _tmp116 * (_tmp13 + _tmp171 + _tmp20) + _tmp118 * _tmp181;
  const Scalar _tmp185 = -_tmp162 - _tmp163 - _tmp164 + _tmp165 + _tmp79;
  const Scalar _tmp186 = _tmp176 + _tmp177 + _tmp178 - _tmp179 - _tmp62 - _tmp64;
  const Scalar _tmp187 = prior_weight / std::pow(_tmp92, Scalar(2));
  const Scalar _tmp188 = 4 * _tmp187;
  const Scalar _tmp189 = _tmp188 * std::pow(_tmp86, Scalar(2));
  const Scalar _tmp190 = prior_weight / std::pow(_tmp81, Scalar(2));
  const Scalar _tmp191 = 4 * _tmp190;
  const Scalar _tmp192 = _tmp191 * std::pow(_tmp75, Scalar(2));
  const Scalar _tmp193 = prior_weight / std::pow(_tmp67, Scalar(2));
  const Scalar _tmp194 = 4 * _tmp193;
  const Scalar _tmp195 = _tmp194 * std::pow(_tmp51, Scalar(2));
  const Scalar _tmp196 = _tmp189 + _tmp192 + _tmp195;
  const Scalar _tmp197 = _tmp191 * _tmp70;
  const Scalar _tmp198 = _tmp197 * _tmp75;
  const Scalar _tmp199 = _tmp194 * _tmp51 * _tmp55;
  const Scalar _tmp200 = _tmp188 * _tmp84 * _tmp86;
  const Scalar _tmp201 = -_tmp198 - _tmp199 + _tmp200;
  const Scalar _tmp202 = _tmp188 * _tmp83;
  const Scalar _tmp203 = _tmp202 * _tmp86;
  const Scalar _tmp204 = _tmp194 * _tmp59;
  const Scalar _tmp205 = _tmp204 * _tmp51;
  const Scalar _tmp206 = _tmp191 * _tmp73 * _tmp75;
  const Scalar _tmp207 = -_tmp203 - _tmp205 + _tmp206;
  const Scalar _tmp208 = _tmp159 * _tmp190;
  const Scalar _tmp209 = 2 * _tmp208;
  const Scalar _tmp210 = _tmp209 * _tmp75;
  const Scalar _tmp211 = 2 * _tmp166 * _tmp187;
  const Scalar _tmp212 = _tmp211 * _tmp86;
  const Scalar _tmp213 = _tmp174 * _tmp193;
  const Scalar _tmp214 = 2 * _tmp51;
  const Scalar _tmp215 = _tmp213 * _tmp214;
  const Scalar _tmp216 = _tmp180 * _tmp187;
  const Scalar _tmp217 = 2 * _tmp216;
  const Scalar _tmp218 = _tmp217 * _tmp86;
  const Scalar _tmp219 = _tmp185 * _tmp193;
  const Scalar _tmp220 = _tmp214 * _tmp219;
  const Scalar _tmp221 = _tmp186 * _tmp190;
  const Scalar _tmp222 = 2 * _tmp221;
  const Scalar _tmp223 = _tmp222 * _tmp75;
  const Scalar _tmp224 = _tmp198 + _tmp199 - _tmp200;
  const Scalar _tmp225 = _tmp203 + _tmp205 - _tmp206;
  const Scalar _tmp226 = _tmp194 * std::pow(_tmp55, Scalar(2));
  const Scalar _tmp227 = _tmp191 * std::pow(_tmp70, Scalar(2));
  const Scalar _tmp228 = _tmp188 * std::pow(_tmp84, Scalar(2));
  const Scalar _tmp229 = _tmp226 + _tmp227 + _tmp228;
  const Scalar _tmp230 = _tmp202 * _tmp84;
  const Scalar _tmp231 = _tmp197 * _tmp73;
  const Scalar _tmp232 = _tmp204 * _tmp55;
  const Scalar _tmp233 = -_tmp230 - _tmp231 + _tmp232;
  const Scalar _tmp234 = _tmp211 * _tmp84;
  const Scalar _tmp235 = _tmp209 * _tmp70;
  const Scalar _tmp236 = 2 * _tmp55;
  const Scalar _tmp237 = _tmp213 * _tmp236;
  const Scalar _tmp238 = _tmp217 * _tmp84;
  const Scalar _tmp239 = _tmp219 * _tmp236;
  const Scalar _tmp240 = _tmp222 * _tmp70;
  const Scalar _tmp241 = _tmp230 + _tmp231 - _tmp232;
  const Scalar _tmp242 = _tmp194 * std::pow(_tmp59, Scalar(2));
  const Scalar _tmp243 = _tmp188 * std::pow(_tmp83, Scalar(2));
  const Scalar _tmp244 = _tmp191 * std::pow(_tmp73, Scalar(2));
  const Scalar _tmp245 = _tmp242 + _tmp243 + _tmp244;
  const Scalar _tmp246 = _tmp211 * _tmp83;
  const Scalar _tmp247 = _tmp209 * _tmp73;
  const Scalar _tmp248 = 2 * _tmp59;
  const Scalar _tmp249 = _tmp213 * _tmp248;
  const Scalar _tmp250 = _tmp217 * _tmp83;
  const Scalar _tmp251 = _tmp222 * _tmp73;
  const Scalar _tmp252 = _tmp219 * _tmp248;
  const Scalar _tmp253 = _tmp193 * _tmp66;
  const Scalar _tmp254 = _tmp214 * _tmp253;
  const Scalar _tmp255 = 2 * _tmp190 * _tmp80;
  const Scalar _tmp256 = _tmp255 * _tmp75;
  const Scalar _tmp257 = _tmp187 * _tmp91;
  const Scalar _tmp258 = 2 * _tmp257;
  const Scalar _tmp259 = _tmp258 * _tmp86;
  const Scalar _tmp260 = _tmp255 * _tmp70;
  const Scalar _tmp261 = _tmp258 * _tmp84;
  const Scalar _tmp262 = _tmp236 * _tmp253;
  const Scalar _tmp263 = _tmp255 * _tmp73;
  const Scalar _tmp264 = _tmp248 * _tmp253;
  const Scalar _tmp265 = _tmp258 * _tmp83;

  // Output terms (4)
  if (res != nullptr) {
    Eigen::Matrix<Scalar, 6, 1>& _res = (*res);

    _res(0, 0) = _tmp30;
    _res(1, 0) = -_tmp38;
    _res(2, 0) = -_tmp47;
    _res(3, 0) = _tmp66 * _tmp68;
    _res(4, 0) = _tmp80 * _tmp82;
    _res(5, 0) = _tmp91 * _tmp93;
  }

  if (jacobian != nullptr) {
    Eigen::Matrix<Scalar, 6, 12>& _jacobian = (*jacobian);

    _jacobian(0, 0) = _tmp105;
    _jacobian(1, 0) = _tmp112;
    _jacobian(2, 0) = _tmp119;
    _jacobian(3, 0) = 0;
    _jacobian(4, 0) = 0;
    _jacobian(5, 0) = 0;
    _jacobian(0, 1) = _tmp122;
    _jacobian(1, 1) = _tmp124;
    _jacobian(2, 1) = _tmp125;
    _jacobian(3, 1) = 0;
    _jacobian(4, 1) = 0;
    _jacobian(5, 1) = 0;
    _jacobian(0, 2) = _tmp126;
    _jacobian(1, 2) = _tmp127;
    _jacobian(2, 2) = _tmp129;
    _jacobian(3, 2) = 0;
    _jacobian(4, 2) = 0;
    _jacobian(5, 2) = 0;
    _jacobian(0, 3) = 0;
    _jacobian(1, 3) = 0;
    _jacobian(2, 3) = 0;
    _jacobian(3, 3) = -_tmp131;
    _jacobian(4, 3) = _tmp133;
    _jacobian(5, 3) = _tmp135;
    _jacobian(0, 4) = 0;
    _jacobian(1, 4) = 0;
    _jacobian(2, 4) = 0;
    _jacobian(3, 4) = _tmp136;
    _jacobian(4, 4) = -_tmp137;
    _jacobian(5, 4) = _tmp138;
    _jacobian(0, 5) = 0;
    _jacobian(1, 5) = 0;
    _jacobian(2, 5) = 0;
    _jacobian(3, 5) = _tmp139;
    _jacobian(4, 5) = _tmp140;
    _jacobian(5, 5) = -_tmp141;
    _jacobian(0, 6) = _tmp145;
    _jacobian(1, 6) = _tmp147;
    _jacobian(2, 6) = _tmp150;
    _jacobian(3, 6) = 0;
    _jacobian(4, 6) = _tmp159 * _tmp82;
    _jacobian(5, 6) = _tmp166 * _tmp93;
    _jacobian(0, 7) = _tmp170;
    _jacobian(1, 7) = _tmp172;
    _jacobian(2, 7) = _tmp173;
    _jacobian(3, 7) = _tmp174 * _tmp68;
    _jacobian(4, 7) = 0;
    _jacobian(5, 7) = _tmp180 * _tmp93;
    _jacobian(0, 8) = _tmp182;
    _jacobian(1, 8) = _tmp183;
    _jacobian(2, 8) = _tmp184;
    _jacobian(3, 8) = _tmp185 * _tmp68;
    _jacobian(4, 8) = _tmp186 * _tmp82;
    _jacobian(5, 8) = 0;
    _jacobian(0, 9) = 0;
    _jacobian(1, 9) = 0;
    _jacobian(2, 9) = 0;
    _jacobian(3, 9) = _tmp131;
    _jacobian(4, 9) = -_tmp133;
    _jacobian(5, 9) = -_tmp135;
    _jacobian(0, 10) = 0;
    _jacobian(1, 10) = 0;
    _jacobian(2, 10) = 0;
    _jacobian(3, 10) = -_tmp136;
    _jacobian(4, 10) = _tmp137;
    _jacobian(5, 10) = -_tmp138;
    _jacobian(0, 11) = 0;
    _jacobian(1, 11) = 0;
    _jacobian(2, 11) = 0;
    _jacobian(3, 11) = -_tmp139;
    _jacobian(4, 11) = -_tmp140;
    _jacobian(5, 11) = _tmp141;
  }

  if (hessian != nullptr) {
    Eigen::Matrix<Scalar, 12, 12>& _hessian = (*hessian);

    _hessian.setZero();

    _hessian(0, 0) =
        std::pow(_tmp105, Scalar(2)) + std::pow(_tmp112, Scalar(2)) + std::pow(_tmp119, Scalar(2));
    _hessian(1, 0) = _tmp105 * _tmp122 + _tmp112 * _tmp124 + _tmp119 * _tmp125;
    _hessian(2, 0) = _tmp105 * _tmp126 + _tmp112 * _tmp127 + _tmp119 * _tmp129;
    _hessian(6, 0) = _tmp105 * _tmp145 + _tmp112 * _tmp147 + _tmp119 * _tmp150;
    _hessian(7, 0) = _tmp105 * _tmp170 + _tmp112 * _tmp172 + _tmp119 * _tmp173;
    _hessian(8, 0) = _tmp105 * _tmp182 + _tmp112 * _tmp183 + _tmp119 * _tmp184;
    _hessian(1, 1) =
        std::pow(_tmp122, Scalar(2)) + std::pow(_tmp124, Scalar(2)) + std::pow(_tmp125, Scalar(2));
    _hessian(2, 1) = _tmp122 * _tmp126 + _tmp124 * _tmp127 + _tmp125 * _tmp129;
    _hessian(6, 1) = _tmp122 * _tmp145 + _tmp124 * _tmp147 + _tmp125 * _tmp150;
    _hessian(7, 1) = _tmp122 * _tmp170 + _tmp124 * _tmp172 + _tmp125 * _tmp173;
    _hessian(8, 1) = _tmp122 * _tmp182 + _tmp124 * _tmp183 + _tmp125 * _tmp184;
    _hessian(2, 2) =
        std::pow(_tmp126, Scalar(2)) + std::pow(_tmp127, Scalar(2)) + std::pow(_tmp129, Scalar(2));
    _hessian(6, 2) = _tmp126 * _tmp145 + _tmp127 * _tmp147 + _tmp129 * _tmp150;
    _hessian(7, 2) = _tmp126 * _tmp170 + _tmp127 * _tmp172 + _tmp129 * _tmp173;
    _hessian(8, 2) = _tmp126 * _tmp182 + _tmp127 * _tmp183 + _tmp129 * _tmp184;
    _hessian(3, 3) = _tmp196;
    _hessian(4, 3) = _tmp201;
    _hessian(5, 3) = _tmp207;
    _hessian(6, 3) = _tmp210 + _tmp212;
    _hessian(7, 3) = -_tmp215 + _tmp218;
    _hessian(8, 3) = -_tmp220 + _tmp223;
    _hessian(9, 3) = -_tmp189 - _tmp192 - _tmp195;
    _hessian(10, 3) = _tmp224;
    _hessian(11, 3) = _tmp225;
    _hessian(4, 4) = _tmp229;
    _hessian(5, 4) = _tmp233;
    _hessian(6, 4) = _tmp234 - _tmp235;
    _hessian(7, 4) = _tmp237 + _tmp238;
    _hessian(8, 4) = _tmp239 - _tmp240;
    _hessian(9, 4) = _tmp224;
    _hessian(10, 4) = -_tmp226 - _tmp227 - _tmp228;
    _hessian(11, 4) = _tmp241;
    _hessian(5, 5) = _tmp245;
    _hessian(6, 5) = -_tmp246 + _tmp247;
    _hessian(7, 5) = _tmp249 - _tmp250;
    _hessian(8, 5) = _tmp251 + _tmp252;
    _hessian(9, 5) = _tmp225;
    _hessian(10, 5) = _tmp241;
    _hessian(11, 5) = -_tmp242 - _tmp243 - _tmp244;
    _hessian(6, 6) = std::pow(_tmp145, Scalar(2)) + std::pow(_tmp147, Scalar(2)) +
                     std::pow(_tmp150, Scalar(2)) + std::pow(_tmp159, Scalar(2)) * _tmp190 +
                     std::pow(_tmp166, Scalar(2)) * _tmp187;
    _hessian(7, 6) = _tmp145 * _tmp170 + _tmp147 * _tmp172 + _tmp150 * _tmp173 + _tmp166 * _tmp216;
    _hessian(8, 6) = _tmp145 * _tmp182 + _tmp147 * _tmp183 + _tmp150 * _tmp184 + _tmp186 * _tmp208;
    _hessian(9, 6) = -_tmp210 - _tmp212;
    _hessian(10, 6) = -_tmp234 + _tmp235;
    _hessian(11, 6) = _tmp246 - _tmp247;
    _hessian(7, 7) = std::pow(_tmp170, Scalar(2)) + std::pow(_tmp172, Scalar(2)) +
                     std::pow(_tmp173, Scalar(2)) + std::pow(_tmp174, Scalar(2)) * _tmp193 +
                     std::pow(_tmp180, Scalar(2)) * _tmp187;
    _hessian(8, 7) = _tmp170 * _tmp182 + _tmp172 * _tmp183 + _tmp173 * _tmp184 + _tmp185 * _tmp213;
    _hessian(9, 7) = _tmp215 - _tmp218;
    _hessian(10, 7) = -_tmp237 - _tmp238;
    _hessian(11, 7) = -_tmp249 + _tmp250;
    _hessian(8, 8) = std::pow(_tmp182, Scalar(2)) + std::pow(_tmp183, Scalar(2)) +
                     std::pow(_tmp184, Scalar(2)) + std::pow(_tmp185, Scalar(2)) * _tmp193 +
                     std::pow(_tmp186, Scalar(2)) * _tmp190;
    _hessian(9, 8) = _tmp220 - _tmp223;
    _hessian(10, 8) = -_tmp239 + _tmp240;
    _hessian(11, 8) = -_tmp251 - _tmp252;
    _hessian(9, 9) = _tmp196;
    _hessian(10, 9) = _tmp201;
    _hessian(11, 9) = _tmp207;
    _hessian(10, 10) = _tmp229;
    _hessian(11, 10) = _tmp233;
    _hessian(11, 11) = _tmp245;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 12, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp105 * _tmp30 - _tmp112 * _tmp38 - _tmp119 * _tmp47;
    _rhs(1, 0) = _tmp122 * _tmp30 - _tmp124 * _tmp38 - _tmp125 * _tmp47;
    _rhs(2, 0) = _tmp126 * _tmp30 - _tmp127 * _tmp38 - _tmp129 * _tmp47;
    _rhs(3, 0) = -_tmp254 + _tmp256 + _tmp259;
    _rhs(4, 0) = -_tmp260 + _tmp261 + _tmp262;
    _rhs(5, 0) = _tmp263 + _tmp264 - _tmp265;
    _rhs(6, 0) = _tmp145 * _tmp30 - _tmp147 * _tmp38 - _tmp150 * _tmp47 + _tmp166 * _tmp257 +
                 _tmp208 * _tmp80;
    _rhs(7, 0) = _tmp170 * _tmp30 - _tmp172 * _tmp38 - _tmp173 * _tmp47 + _tmp213 * _tmp66 +
                 _tmp216 * _tmp91;
    _rhs(8, 0) = _tmp182 * _tmp30 - _tmp183 * _tmp38 - _tmp184 * _tmp47 + _tmp219 * _tmp66 +
                 _tmp221 * _tmp80;
    _rhs(9, 0) = _tmp254 - _tmp256 - _tmp259;
    _rhs(10, 0) = _tmp260 - _tmp261 - _tmp262;
    _rhs(11, 0) = -_tmp263 - _tmp264 + _tmp265;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace custom_factor_generation
