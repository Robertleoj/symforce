// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>

namespace sym {

/**
 * Residual on the relative pose between two timesteps of the robot.
 *
 * Args:
 *     world_T_a: First pose in the world frame
 *     world_T_b: Second pose in the world frame
 *     a_T_b: Relative pose measurement between the poses
 *     diagonal_sigmas: Diagonal standard deviation of the tangent-space error
 *     epsilon: Small number for singularity handling
 *     jacobian: (6x12) jacobian of res wrt args world_T_a (6), world_T_b (6)
 *     hessian: (12x12) Gauss-Newton hessian for args world_T_a (6), world_T_b (6)
 *     rhs: (12x1) Gauss-Newton rhs for args world_T_a (6), world_T_b (6)
 */
template <typename Scalar>
void OdometryFactor(const sym::Pose3<Scalar>& world_T_a, const sym::Pose3<Scalar>& world_T_b,
                    const sym::Pose3<Scalar>& a_T_b,
                    const Eigen::Matrix<Scalar, 6, 1>& diagonal_sigmas, const Scalar epsilon,
                    Eigen::Matrix<Scalar, 6, 1>* const res = nullptr,
                    Eigen::Matrix<Scalar, 6, 12>* const jacobian = nullptr,
                    Eigen::Matrix<Scalar, 12, 12>* const hessian = nullptr,
                    Eigen::Matrix<Scalar, 12, 1>* const rhs = nullptr) {
  // Total ops: 731

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _world_T_a = world_T_a.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _world_T_b = world_T_b.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _a_T_b = a_T_b.Data();

  // Intermediate terms (263)
  const Scalar _tmp0 = -_world_T_a[0] * _world_T_b[3] - _world_T_a[1] * _world_T_b[2] +
                       _world_T_a[2] * _world_T_b[1] + _world_T_a[3] * _world_T_b[0];
  const Scalar _tmp1 = _a_T_b[3] * _tmp0;
  const Scalar _tmp2 = -_tmp1;
  const Scalar _tmp3 = _world_T_a[0] * _world_T_b[0] + _world_T_a[1] * _world_T_b[1] +
                       _world_T_a[2] * _world_T_b[2] + _world_T_a[3] * _world_T_b[3];
  const Scalar _tmp4 = _a_T_b[0] * _tmp3;
  const Scalar _tmp5 = -_world_T_a[0] * _world_T_b[1] + _world_T_a[1] * _world_T_b[0] -
                       _world_T_a[2] * _world_T_b[3] + _world_T_a[3] * _world_T_b[2];
  const Scalar _tmp6 = _a_T_b[1] * _tmp5;
  const Scalar _tmp7 = _world_T_a[0] * _world_T_b[2] - _world_T_a[1] * _world_T_b[3] -
                       _world_T_a[2] * _world_T_b[0] + _world_T_a[3] * _world_T_b[1];
  const Scalar _tmp8 = _a_T_b[2] * _tmp7;
  const Scalar _tmp9 = _tmp6 - _tmp8;
  const Scalar _tmp10 = _tmp2 + _tmp4 + _tmp9;
  const Scalar _tmp11 = _a_T_b[3] * _tmp3;
  const Scalar _tmp12 = _a_T_b[1] * _tmp7;
  const Scalar _tmp13 = _a_T_b[2] * _tmp5;
  const Scalar _tmp14 = _a_T_b[0] * _tmp0;
  const Scalar _tmp15 = _tmp13 + _tmp14;
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp11 + _tmp16;
  const Scalar _tmp18 = (((_tmp17) > 0) - ((_tmp17) < 0));
  const Scalar _tmp19 = std::min<Scalar>(0, _tmp18) + Scalar(1) / Scalar(2);
  const Scalar _tmp20 = _tmp19 / diagonal_sigmas(0, 0);
  const Scalar _tmp21 = epsilon - 1;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = std::min<Scalar>(_tmp22, std::fabs(_tmp11 + _tmp16));
  const Scalar _tmp24 = 4 * std::acos(_tmp23) / std::sqrt(Scalar(1 - std::pow(_tmp23, Scalar(2))));
  const Scalar _tmp25 = _tmp10 * _tmp20 * _tmp24;
  const Scalar _tmp26 = _a_T_b[1] * _tmp3;
  const Scalar _tmp27 = -_tmp26;
  const Scalar _tmp28 = _a_T_b[3] * _tmp7;
  const Scalar _tmp29 = _a_T_b[0] * _tmp5;
  const Scalar _tmp30 = _a_T_b[2] * _tmp0;
  const Scalar _tmp31 = _tmp29 - _tmp30;
  const Scalar _tmp32 = _tmp27 + _tmp28 + _tmp31;
  const Scalar _tmp33 = _tmp19 / diagonal_sigmas(1, 0);
  const Scalar _tmp34 = _tmp32 * _tmp33;
  const Scalar _tmp35 = _tmp24 * _tmp34;
  const Scalar _tmp36 = _a_T_b[2] * _tmp3;
  const Scalar _tmp37 = -_tmp36;
  const Scalar _tmp38 = _a_T_b[0] * _tmp7;
  const Scalar _tmp39 = -_tmp38;
  const Scalar _tmp40 = _a_T_b[3] * _tmp5;
  const Scalar _tmp41 = _a_T_b[1] * _tmp0;
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = _tmp37 + _tmp39 + _tmp42;
  const Scalar _tmp44 = _tmp19 / diagonal_sigmas(2, 0);
  const Scalar _tmp45 = _tmp43 * _tmp44;
  const Scalar _tmp46 = _tmp24 * _tmp45;
  const Scalar _tmp47 = Scalar(1.0) / (diagonal_sigmas(3, 0));
  const Scalar _tmp48 = _world_T_a[0] * _world_T_a[1];
  const Scalar _tmp49 = _world_T_a[2] * _world_T_a[3];
  const Scalar _tmp50 = _tmp48 + _tmp49;
  const Scalar _tmp51 = _tmp50 * _world_T_b[5];
  const Scalar _tmp52 = _world_T_a[1] * _world_T_a[3];
  const Scalar _tmp53 = _world_T_a[0] * _world_T_a[2];
  const Scalar _tmp54 = _tmp52 - _tmp53;
  const Scalar _tmp55 = _tmp54 * _world_T_b[6];
  const Scalar _tmp56 = std::pow(_world_T_a[1], Scalar(2));
  const Scalar _tmp57 = std::pow(_world_T_a[2], Scalar(2));
  const Scalar _tmp58 = _tmp57 + Scalar(-1) / Scalar(2);
  const Scalar _tmp59 = _tmp56 + _tmp58;
  const Scalar _tmp60 = _tmp50 * _world_T_a[5];
  const Scalar _tmp61 = _tmp54 * _world_T_a[6];
  const Scalar _tmp62 = _a_T_b[4] - 2 * _tmp51 + 2 * _tmp55 - 2 * _tmp59 * _world_T_a[4] +
                        2 * _tmp59 * _world_T_b[4] + 2 * _tmp60 - 2 * _tmp61;
  const Scalar _tmp63 = _tmp48 - _tmp49;
  const Scalar _tmp64 = _tmp63 * _world_T_a[4];
  const Scalar _tmp65 = _world_T_a[0] * _world_T_a[3];
  const Scalar _tmp66 = _world_T_a[1] * _world_T_a[2];
  const Scalar _tmp67 = _tmp65 + _tmp66;
  const Scalar _tmp68 = _tmp67 * _world_T_a[6];
  const Scalar _tmp69 = std::pow(_world_T_a[0], Scalar(2));
  const Scalar _tmp70 = _tmp58 + _tmp69;
  const Scalar _tmp71 = _tmp63 * _world_T_b[4];
  const Scalar _tmp72 = _tmp67 * _world_T_b[6];
  const Scalar _tmp73 = _a_T_b[5] + 2 * _tmp64 + 2 * _tmp68 - 2 * _tmp70 * _world_T_a[5] +
                        2 * _tmp70 * _world_T_b[5] - 2 * _tmp71 - 2 * _tmp72;
  const Scalar _tmp74 = Scalar(1.0) / (diagonal_sigmas(4, 0));
  const Scalar _tmp75 = _tmp52 + _tmp53;
  const Scalar _tmp76 = _tmp75 * _world_T_a[4];
  const Scalar _tmp77 = _tmp65 - _tmp66;
  const Scalar _tmp78 = _tmp77 * _world_T_a[5];
  const Scalar _tmp79 = _tmp56 + _tmp69 + Scalar(-1) / Scalar(2);
  const Scalar _tmp80 = _tmp75 * _world_T_b[4];
  const Scalar _tmp81 = _tmp77 * _world_T_b[5];
  const Scalar _tmp82 = _a_T_b[6] + 2 * _tmp76 - 2 * _tmp78 - 2 * _tmp79 * _world_T_a[6] +
                        2 * _tmp79 * _world_T_b[6] - 2 * _tmp80 + 2 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (diagonal_sigmas(5, 0));
  const Scalar _tmp84 = -_tmp11;
  const Scalar _tmp85 = _tmp13 - _tmp14;
  const Scalar _tmp86 = std::fabs(_tmp17);
  const Scalar _tmp87 = std::min<Scalar>(_tmp22, _tmp86);
  const Scalar _tmp88 = std::acos(_tmp87);
  const Scalar _tmp89 = _tmp20 * _tmp88;
  const Scalar _tmp90 = std::pow(_tmp87, Scalar(2)) - 1;
  const Scalar _tmp91 = -_tmp90;
  const Scalar _tmp92 = 2 / std::sqrt(_tmp91);
  const Scalar _tmp93 = _tmp89 * _tmp92;
  const Scalar _tmp94 = -_tmp4;
  const Scalar _tmp95 = _tmp1 + _tmp9 + _tmp94;
  const Scalar _tmp96 = _tmp18 * ((((_tmp21 + _tmp86) > 0) - ((_tmp21 + _tmp86) < 0)) - 1);
  const Scalar _tmp97 = _tmp96 / _tmp90;
  const Scalar _tmp98 = _tmp20 * _tmp97;
  const Scalar _tmp99 = _tmp10 * _tmp98;
  const Scalar _tmp100 = _tmp87 * _tmp96 / (_tmp91 * std::sqrt(_tmp91));
  const Scalar _tmp101 = _tmp100 * _tmp89;
  const Scalar _tmp102 = _tmp10 * _tmp101;
  const Scalar _tmp103 = -_tmp102 * _tmp95 - _tmp93 * (_tmp12 + _tmp84 + _tmp85) - _tmp95 * _tmp99;
  const Scalar _tmp104 = _tmp100 * _tmp88;
  const Scalar _tmp105 = _tmp104 * _tmp34;
  const Scalar _tmp106 = _tmp40 - _tmp41;
  const Scalar _tmp107 = _tmp88 * _tmp92;
  const Scalar _tmp108 = _tmp107 * _tmp33;
  const Scalar _tmp109 = _tmp34 * _tmp97;
  const Scalar _tmp110 =
      _tmp105 * _tmp95 - _tmp108 * (_tmp106 + _tmp36 + _tmp39) + _tmp109 * _tmp95;
  const Scalar _tmp111 = _tmp45 * _tmp97;
  const Scalar _tmp112 = _tmp104 * _tmp45;
  const Scalar _tmp113 = _tmp29 + _tmp30;
  const Scalar _tmp114 = _tmp107 * _tmp44;
  const Scalar _tmp115 =
      _tmp111 * _tmp95 + _tmp112 * _tmp95 + _tmp114 * (_tmp113 + _tmp26 + _tmp28);
  const Scalar _tmp116 = 2 * _tmp80;
  const Scalar _tmp117 = 2 * _tmp76;
  const Scalar _tmp118 = 2 * _tmp78;
  const Scalar _tmp119 = 2 * _tmp81;
  const Scalar _tmp120 = -_tmp56;
  const Scalar _tmp121 = std::pow(_world_T_a[3], Scalar(2));
  const Scalar _tmp122 = _tmp121 - _tmp69;
  const Scalar _tmp123 = _tmp120 + _tmp122 + _tmp57;
  const Scalar _tmp124 = _tmp123 * _world_T_b[6];
  const Scalar _tmp125 = _tmp123 * _world_T_a[6];
  const Scalar _tmp126 = -_tmp116 + _tmp117 - _tmp118 + _tmp119 - _tmp124 + _tmp125;
  const Scalar _tmp127 = 2 * _tmp64;
  const Scalar _tmp128 = 2 * _tmp71;
  const Scalar _tmp129 = 2 * _tmp68;
  const Scalar _tmp130 = 2 * _tmp72;
  const Scalar _tmp131 = -_tmp57;
  const Scalar _tmp132 = _tmp122 + _tmp131 + _tmp56;
  const Scalar _tmp133 = _tmp132 * _world_T_b[5];
  const Scalar _tmp134 = _tmp132 * _world_T_a[5];
  const Scalar _tmp135 = -_tmp127 + _tmp128 - _tmp129 + _tmp130 + _tmp133 - _tmp134;
  const Scalar _tmp136 = -_tmp28;
  const Scalar _tmp137 = _tmp136 + _tmp26 + _tmp31;
  const Scalar _tmp138 = _tmp102 * _tmp137 + _tmp137 * _tmp99 + _tmp93 * (_tmp36 + _tmp38 + _tmp42);
  const Scalar _tmp139 = -_tmp12;
  const Scalar _tmp140 =
      -_tmp105 * _tmp137 - _tmp108 * (_tmp139 + _tmp15 + _tmp84) - _tmp109 * _tmp137;
  const Scalar _tmp141 = _tmp6 + _tmp8;
  const Scalar _tmp142 =
      -_tmp111 * _tmp137 - _tmp112 * _tmp137 + _tmp114 * (_tmp141 + _tmp2 + _tmp94);
  const Scalar _tmp143 = _tmp116 - _tmp117 + _tmp118 - _tmp119 + _tmp124 - _tmp125;
  const Scalar _tmp144 = 2 * _tmp51;
  const Scalar _tmp145 = 2 * _tmp60;
  const Scalar _tmp146 = 2 * _tmp55;
  const Scalar _tmp147 = 2 * _tmp61;
  const Scalar _tmp148 = _tmp120 + _tmp121 + _tmp131 + _tmp69;
  const Scalar _tmp149 = _tmp148 * _world_T_b[4];
  const Scalar _tmp150 = _tmp148 * _world_T_a[4];
  const Scalar _tmp151 = -_tmp144 + _tmp145 + _tmp146 - _tmp147 - _tmp149 + _tmp150;
  const Scalar _tmp152 = _tmp106 + _tmp37 + _tmp38;
  const Scalar _tmp153 =
      -_tmp102 * _tmp152 - _tmp152 * _tmp99 + _tmp93 * (_tmp113 + _tmp136 + _tmp27);
  const Scalar _tmp154 =
      _tmp105 * _tmp152 + _tmp108 * (_tmp1 + _tmp141 + _tmp4) + _tmp109 * _tmp152;
  const Scalar _tmp155 =
      _tmp111 * _tmp152 + _tmp112 * _tmp152 + _tmp114 * (_tmp11 + _tmp139 + _tmp85);
  const Scalar _tmp156 = _tmp127 - _tmp128 + _tmp129 - _tmp130 - _tmp133 + _tmp134;
  const Scalar _tmp157 = _tmp144 - _tmp145 - _tmp146 + _tmp147 + _tmp149 - _tmp150;
  const Scalar _tmp158 = 2 * _tmp47;
  const Scalar _tmp159 = _tmp158 * _tmp59;
  const Scalar _tmp160 = 2 * _tmp74;
  const Scalar _tmp161 = _tmp160 * _tmp63;
  const Scalar _tmp162 = 2 * _tmp83;
  const Scalar _tmp163 = _tmp162 * _tmp75;
  const Scalar _tmp164 = _tmp158 * _tmp50;
  const Scalar _tmp165 = _tmp160 * _tmp70;
  const Scalar _tmp166 = _tmp162 * _tmp77;
  const Scalar _tmp167 = _tmp158 * _tmp54;
  const Scalar _tmp168 = _tmp160 * _tmp67;
  const Scalar _tmp169 = _tmp162 * _tmp79;
  const Scalar _tmp170 = std::pow(_tmp10, Scalar(2));
  const Scalar _tmp171 = -_tmp101 * _tmp170 - _tmp17 * _tmp93 - _tmp170 * _tmp98;
  const Scalar _tmp172 = _tmp10 * _tmp105 + _tmp10 * _tmp109 - _tmp108 * _tmp43;
  const Scalar _tmp173 = _tmp10 * _tmp111 + _tmp10 * _tmp112 + _tmp114 * _tmp32;
  const Scalar _tmp174 = _tmp102 * _tmp32 + _tmp32 * _tmp99 + _tmp43 * _tmp93;
  const Scalar _tmp175 = std::pow(_tmp32, Scalar(2)) * _tmp33;
  const Scalar _tmp176 = -_tmp104 * _tmp175 - _tmp108 * _tmp17 - _tmp175 * _tmp97;
  const Scalar _tmp177 = _tmp10 * _tmp114 - _tmp111 * _tmp32 - _tmp112 * _tmp32;
  const Scalar _tmp178 = _tmp102 * _tmp43 - _tmp32 * _tmp93 + _tmp43 * _tmp99;
  const Scalar _tmp179 = -_tmp10 * _tmp108 - _tmp105 * _tmp43 - _tmp109 * _tmp43;
  const Scalar _tmp180 = std::pow(_tmp43, Scalar(2)) * _tmp44;
  const Scalar _tmp181 = -_tmp104 * _tmp180 - _tmp114 * _tmp17 - _tmp180 * _tmp97;
  const Scalar _tmp182 = std::pow(diagonal_sigmas(5, 0), Scalar(-2));
  const Scalar _tmp183 = std::pow(diagonal_sigmas(4, 0), Scalar(-2));
  const Scalar _tmp184 = _tmp151 * _tmp182;
  const Scalar _tmp185 = _tmp157 * _tmp183;
  const Scalar _tmp186 = _tmp126 * _tmp183;
  const Scalar _tmp187 = 2 * _tmp63;
  const Scalar _tmp188 = _tmp186 * _tmp187;
  const Scalar _tmp189 = 2 * _tmp135 * _tmp182;
  const Scalar _tmp190 = _tmp189 * _tmp75;
  const Scalar _tmp191 = _tmp189 * _tmp77;
  const Scalar _tmp192 = 2 * _tmp70;
  const Scalar _tmp193 = _tmp186 * _tmp192;
  const Scalar _tmp194 = 2 * _tmp67;
  const Scalar _tmp195 = _tmp186 * _tmp194;
  const Scalar _tmp196 = _tmp189 * _tmp79;
  const Scalar _tmp197 = std::pow(diagonal_sigmas(3, 0), Scalar(-2));
  const Scalar _tmp198 = _tmp143 * _tmp197;
  const Scalar _tmp199 = 2 * _tmp184;
  const Scalar _tmp200 = _tmp199 * _tmp75;
  const Scalar _tmp201 = 2 * _tmp59;
  const Scalar _tmp202 = _tmp198 * _tmp201;
  const Scalar _tmp203 = 2 * _tmp198;
  const Scalar _tmp204 = _tmp203 * _tmp50;
  const Scalar _tmp205 = _tmp199 * _tmp77;
  const Scalar _tmp206 = _tmp203 * _tmp54;
  const Scalar _tmp207 = _tmp199 * _tmp79;
  const Scalar _tmp208 = _tmp185 * _tmp187;
  const Scalar _tmp209 = _tmp156 * _tmp197;
  const Scalar _tmp210 = _tmp201 * _tmp209;
  const Scalar _tmp211 = 2 * _tmp209;
  const Scalar _tmp212 = _tmp211 * _tmp50;
  const Scalar _tmp213 = _tmp185 * _tmp192;
  const Scalar _tmp214 = _tmp185 * _tmp194;
  const Scalar _tmp215 = _tmp211 * _tmp54;
  const Scalar _tmp216 = 4 * _tmp197;
  const Scalar _tmp217 = _tmp216 * std::pow(_tmp59, Scalar(2));
  const Scalar _tmp218 = 4 * _tmp182;
  const Scalar _tmp219 = _tmp218 * std::pow(_tmp75, Scalar(2));
  const Scalar _tmp220 = 4 * _tmp183;
  const Scalar _tmp221 = _tmp220 * std::pow(_tmp63, Scalar(2));
  const Scalar _tmp222 = _tmp217 + _tmp219 + _tmp221;
  const Scalar _tmp223 = _tmp218 * _tmp77;
  const Scalar _tmp224 = _tmp223 * _tmp75;
  const Scalar _tmp225 = _tmp216 * _tmp50;
  const Scalar _tmp226 = _tmp225 * _tmp59;
  const Scalar _tmp227 = _tmp220 * _tmp63 * _tmp70;
  const Scalar _tmp228 = -_tmp224 - _tmp226 - _tmp227;
  const Scalar _tmp229 = _tmp216 * _tmp54 * _tmp59;
  const Scalar _tmp230 = _tmp218 * _tmp75 * _tmp79;
  const Scalar _tmp231 = _tmp220 * _tmp67;
  const Scalar _tmp232 = _tmp231 * _tmp63;
  const Scalar _tmp233 = _tmp229 - _tmp230 + _tmp232;
  const Scalar _tmp234 = _tmp224 + _tmp226 + _tmp227;
  const Scalar _tmp235 = -_tmp229 + _tmp230 - _tmp232;
  const Scalar _tmp236 = _tmp220 * std::pow(_tmp70, Scalar(2));
  const Scalar _tmp237 = _tmp218 * std::pow(_tmp77, Scalar(2));
  const Scalar _tmp238 = _tmp216 * std::pow(_tmp50, Scalar(2));
  const Scalar _tmp239 = _tmp236 + _tmp237 + _tmp238;
  const Scalar _tmp240 = _tmp225 * _tmp54;
  const Scalar _tmp241 = _tmp231 * _tmp70;
  const Scalar _tmp242 = _tmp223 * _tmp79;
  const Scalar _tmp243 = -_tmp240 - _tmp241 + _tmp242;
  const Scalar _tmp244 = _tmp240 + _tmp241 - _tmp242;
  const Scalar _tmp245 = _tmp218 * std::pow(_tmp79, Scalar(2));
  const Scalar _tmp246 = _tmp220 * std::pow(_tmp67, Scalar(2));
  const Scalar _tmp247 = _tmp216 * std::pow(_tmp54, Scalar(2));
  const Scalar _tmp248 = _tmp245 + _tmp246 + _tmp247;
  const Scalar _tmp249 = _tmp182 * _tmp82;
  const Scalar _tmp250 = _tmp183 * _tmp73;
  const Scalar _tmp251 = _tmp197 * _tmp62;
  const Scalar _tmp252 = _tmp187 * _tmp250;
  const Scalar _tmp253 = 2 * _tmp251;
  const Scalar _tmp254 = _tmp253 * _tmp59;
  const Scalar _tmp255 = 2 * _tmp249;
  const Scalar _tmp256 = _tmp255 * _tmp75;
  const Scalar _tmp257 = _tmp192 * _tmp250;
  const Scalar _tmp258 = _tmp255 * _tmp77;
  const Scalar _tmp259 = _tmp253 * _tmp50;
  const Scalar _tmp260 = _tmp194 * _tmp250;
  const Scalar _tmp261 = _tmp255 * _tmp79;
  const Scalar _tmp262 = _tmp253 * _tmp54;

  // Output terms (4)
  if (res != nullptr) {
    Eigen::Matrix<Scalar, 6, 1>& _res = (*res);

    _res(0, 0) = _tmp25;
    _res(1, 0) = -_tmp35;
    _res(2, 0) = -_tmp46;
    _res(3, 0) = _tmp47 * _tmp62;
    _res(4, 0) = _tmp73 * _tmp74;
    _res(5, 0) = _tmp82 * _tmp83;
  }

  if (jacobian != nullptr) {
    Eigen::Matrix<Scalar, 6, 12>& _jacobian = (*jacobian);

    _jacobian(0, 0) = _tmp103;
    _jacobian(1, 0) = _tmp110;
    _jacobian(2, 0) = _tmp115;
    _jacobian(3, 0) = 0;
    _jacobian(4, 0) = _tmp126 * _tmp74;
    _jacobian(5, 0) = _tmp135 * _tmp83;
    _jacobian(0, 1) = _tmp138;
    _jacobian(1, 1) = _tmp140;
    _jacobian(2, 1) = _tmp142;
    _jacobian(3, 1) = _tmp143 * _tmp47;
    _jacobian(4, 1) = 0;
    _jacobian(5, 1) = _tmp151 * _tmp83;
    _jacobian(0, 2) = _tmp153;
    _jacobian(1, 2) = _tmp154;
    _jacobian(2, 2) = _tmp155;
    _jacobian(3, 2) = _tmp156 * _tmp47;
    _jacobian(4, 2) = _tmp157 * _tmp74;
    _jacobian(5, 2) = 0;
    _jacobian(0, 3) = 0;
    _jacobian(1, 3) = 0;
    _jacobian(2, 3) = 0;
    _jacobian(3, 3) = -_tmp159;
    _jacobian(4, 3) = _tmp161;
    _jacobian(5, 3) = _tmp163;
    _jacobian(0, 4) = 0;
    _jacobian(1, 4) = 0;
    _jacobian(2, 4) = 0;
    _jacobian(3, 4) = _tmp164;
    _jacobian(4, 4) = -_tmp165;
    _jacobian(5, 4) = -_tmp166;
    _jacobian(0, 5) = 0;
    _jacobian(1, 5) = 0;
    _jacobian(2, 5) = 0;
    _jacobian(3, 5) = -_tmp167;
    _jacobian(4, 5) = _tmp168;
    _jacobian(5, 5) = -_tmp169;
    _jacobian(0, 6) = _tmp171;
    _jacobian(1, 6) = _tmp172;
    _jacobian(2, 6) = _tmp173;
    _jacobian(3, 6) = 0;
    _jacobian(4, 6) = 0;
    _jacobian(5, 6) = 0;
    _jacobian(0, 7) = _tmp174;
    _jacobian(1, 7) = _tmp176;
    _jacobian(2, 7) = _tmp177;
    _jacobian(3, 7) = 0;
    _jacobian(4, 7) = 0;
    _jacobian(5, 7) = 0;
    _jacobian(0, 8) = _tmp178;
    _jacobian(1, 8) = _tmp179;
    _jacobian(2, 8) = _tmp181;
    _jacobian(3, 8) = 0;
    _jacobian(4, 8) = 0;
    _jacobian(5, 8) = 0;
    _jacobian(0, 9) = 0;
    _jacobian(1, 9) = 0;
    _jacobian(2, 9) = 0;
    _jacobian(3, 9) = _tmp159;
    _jacobian(4, 9) = -_tmp161;
    _jacobian(5, 9) = -_tmp163;
    _jacobian(0, 10) = 0;
    _jacobian(1, 10) = 0;
    _jacobian(2, 10) = 0;
    _jacobian(3, 10) = -_tmp164;
    _jacobian(4, 10) = _tmp165;
    _jacobian(5, 10) = _tmp166;
    _jacobian(0, 11) = 0;
    _jacobian(1, 11) = 0;
    _jacobian(2, 11) = 0;
    _jacobian(3, 11) = _tmp167;
    _jacobian(4, 11) = -_tmp168;
    _jacobian(5, 11) = _tmp169;
  }

  if (hessian != nullptr) {
    Eigen::Matrix<Scalar, 12, 12>& _hessian = (*hessian);

    _hessian.setZero();

    _hessian(0, 0) = std::pow(_tmp103, Scalar(2)) + std::pow(_tmp110, Scalar(2)) +
                     std::pow(_tmp115, Scalar(2)) + std::pow(_tmp126, Scalar(2)) * _tmp183 +
                     std::pow(_tmp135, Scalar(2)) * _tmp182;
    _hessian(1, 0) = _tmp103 * _tmp138 + _tmp110 * _tmp140 + _tmp115 * _tmp142 + _tmp135 * _tmp184;
    _hessian(2, 0) = _tmp103 * _tmp153 + _tmp110 * _tmp154 + _tmp115 * _tmp155 + _tmp126 * _tmp185;
    _hessian(3, 0) = _tmp188 + _tmp190;
    _hessian(4, 0) = -_tmp191 - _tmp193;
    _hessian(5, 0) = _tmp195 - _tmp196;
    _hessian(6, 0) = _tmp103 * _tmp171 + _tmp110 * _tmp172 + _tmp115 * _tmp173;
    _hessian(7, 0) = _tmp103 * _tmp174 + _tmp110 * _tmp176 + _tmp115 * _tmp177;
    _hessian(8, 0) = _tmp103 * _tmp178 + _tmp110 * _tmp179 + _tmp115 * _tmp181;
    _hessian(9, 0) = -_tmp188 - _tmp190;
    _hessian(10, 0) = _tmp191 + _tmp193;
    _hessian(11, 0) = -_tmp195 + _tmp196;
    _hessian(1, 1) = std::pow(_tmp138, Scalar(2)) + std::pow(_tmp140, Scalar(2)) +
                     std::pow(_tmp142, Scalar(2)) + std::pow(_tmp143, Scalar(2)) * _tmp197 +
                     std::pow(_tmp151, Scalar(2)) * _tmp182;
    _hessian(2, 1) = _tmp138 * _tmp153 + _tmp140 * _tmp154 + _tmp142 * _tmp155 + _tmp156 * _tmp198;
    _hessian(3, 1) = _tmp200 - _tmp202;
    _hessian(4, 1) = _tmp204 - _tmp205;
    _hessian(5, 1) = -_tmp206 - _tmp207;
    _hessian(6, 1) = _tmp138 * _tmp171 + _tmp140 * _tmp172 + _tmp142 * _tmp173;
    _hessian(7, 1) = _tmp138 * _tmp174 + _tmp140 * _tmp176 + _tmp142 * _tmp177;
    _hessian(8, 1) = _tmp138 * _tmp178 + _tmp140 * _tmp179 + _tmp142 * _tmp181;
    _hessian(9, 1) = -_tmp200 + _tmp202;
    _hessian(10, 1) = -_tmp204 + _tmp205;
    _hessian(11, 1) = _tmp206 + _tmp207;
    _hessian(2, 2) = std::pow(_tmp153, Scalar(2)) + std::pow(_tmp154, Scalar(2)) +
                     std::pow(_tmp155, Scalar(2)) + std::pow(_tmp156, Scalar(2)) * _tmp197 +
                     std::pow(_tmp157, Scalar(2)) * _tmp183;
    _hessian(3, 2) = _tmp208 - _tmp210;
    _hessian(4, 2) = _tmp212 - _tmp213;
    _hessian(5, 2) = _tmp214 - _tmp215;
    _hessian(6, 2) = _tmp153 * _tmp171 + _tmp154 * _tmp172 + _tmp155 * _tmp173;
    _hessian(7, 2) = _tmp153 * _tmp174 + _tmp154 * _tmp176 + _tmp155 * _tmp177;
    _hessian(8, 2) = _tmp153 * _tmp178 + _tmp154 * _tmp179 + _tmp155 * _tmp181;
    _hessian(9, 2) = -_tmp208 + _tmp210;
    _hessian(10, 2) = -_tmp212 + _tmp213;
    _hessian(11, 2) = -_tmp214 + _tmp215;
    _hessian(3, 3) = _tmp222;
    _hessian(4, 3) = _tmp228;
    _hessian(5, 3) = _tmp233;
    _hessian(9, 3) = -_tmp217 - _tmp219 - _tmp221;
    _hessian(10, 3) = _tmp234;
    _hessian(11, 3) = _tmp235;
    _hessian(4, 4) = _tmp239;
    _hessian(5, 4) = _tmp243;
    _hessian(9, 4) = _tmp234;
    _hessian(10, 4) = -_tmp236 - _tmp237 - _tmp238;
    _hessian(11, 4) = _tmp244;
    _hessian(5, 5) = _tmp248;
    _hessian(9, 5) = _tmp235;
    _hessian(10, 5) = _tmp244;
    _hessian(11, 5) = -_tmp245 - _tmp246 - _tmp247;
    _hessian(6, 6) =
        std::pow(_tmp171, Scalar(2)) + std::pow(_tmp172, Scalar(2)) + std::pow(_tmp173, Scalar(2));
    _hessian(7, 6) = _tmp171 * _tmp174 + _tmp172 * _tmp176 + _tmp173 * _tmp177;
    _hessian(8, 6) = _tmp171 * _tmp178 + _tmp172 * _tmp179 + _tmp173 * _tmp181;
    _hessian(7, 7) =
        std::pow(_tmp174, Scalar(2)) + std::pow(_tmp176, Scalar(2)) + std::pow(_tmp177, Scalar(2));
    _hessian(8, 7) = _tmp174 * _tmp178 + _tmp176 * _tmp179 + _tmp177 * _tmp181;
    _hessian(8, 8) =
        std::pow(_tmp178, Scalar(2)) + std::pow(_tmp179, Scalar(2)) + std::pow(_tmp181, Scalar(2));
    _hessian(9, 9) = _tmp222;
    _hessian(10, 9) = _tmp228;
    _hessian(11, 9) = _tmp233;
    _hessian(10, 10) = _tmp239;
    _hessian(11, 10) = _tmp243;
    _hessian(11, 11) = _tmp248;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 12, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp103 * _tmp25 - _tmp110 * _tmp35 - _tmp115 * _tmp46 + _tmp126 * _tmp250 +
                 _tmp135 * _tmp249;
    _rhs(1, 0) = _tmp138 * _tmp25 - _tmp140 * _tmp35 - _tmp142 * _tmp46 + _tmp184 * _tmp82 +
                 _tmp198 * _tmp62;
    _rhs(2, 0) = _tmp153 * _tmp25 - _tmp154 * _tmp35 - _tmp155 * _tmp46 + _tmp156 * _tmp251 +
                 _tmp157 * _tmp250;
    _rhs(3, 0) = _tmp252 - _tmp254 + _tmp256;
    _rhs(4, 0) = -_tmp257 - _tmp258 + _tmp259;
    _rhs(5, 0) = _tmp260 - _tmp261 - _tmp262;
    _rhs(6, 0) = _tmp171 * _tmp25 - _tmp172 * _tmp35 - _tmp173 * _tmp46;
    _rhs(7, 0) = _tmp174 * _tmp25 - _tmp176 * _tmp35 - _tmp177 * _tmp46;
    _rhs(8, 0) = _tmp178 * _tmp25 - _tmp179 * _tmp35 - _tmp181 * _tmp46;
    _rhs(9, 0) = -_tmp252 + _tmp254 - _tmp256;
    _rhs(10, 0) = _tmp257 + _tmp258 - _tmp259;
    _rhs(11, 0) = -_tmp260 + _tmp261 + _tmp262;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
