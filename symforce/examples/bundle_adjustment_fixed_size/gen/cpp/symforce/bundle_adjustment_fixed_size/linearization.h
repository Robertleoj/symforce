// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>
#include <Eigen/SparseCore>

#include <sym/linear_camera_cal.h>
#include <sym/pose3.h>

namespace bundle_adjustment_fixed_size {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Computes the linearization of the residual around the given state,
 * and returns the relevant information about the resulting linear system.
 *
 * Input args: The state to linearize around
 *
 * Output args:
 *     residual (Eigen::Matrix*): The residual vector
 *     jacobian: (72x26) jacobian of residual wrt args views_1_pose (6), landmarks_0_ (1),
 *               landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1),
 *               landmarks_5_ (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1),
 *               landmarks_9_ (1), landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1),
 *               landmarks_13_ (1), landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1),
 *               landmarks_17_ (1), landmarks_18_ (1), landmarks_19_ (1)
 *     hessian: (26x26) Gauss-Newton hessian for args views_1_pose (6), landmarks_0_ (1),
 *              landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_
 *              (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1),
 *              landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1),
 *              landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1),
 *              landmarks_18_ (1), landmarks_19_ (1)
 *     rhs: (26x1) Gauss-Newton rhs for args views_1_pose (6), landmarks_0_ (1), landmarks_1_ (1),
 *          landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_ (1), landmarks_6_
 *          (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1), landmarks_10_ (1),
 *          landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1), landmarks_14_ (1),
 *          landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1), landmarks_18_ (1),
 *          landmarks_19_ (1)
 */
template <typename Scalar>
void Linearization(
    const sym::LinearCameraCal<Scalar>& views_0_calibration, const sym::Pose3<Scalar>& views_0_pose,
    const sym::LinearCameraCal<Scalar>& views_1_calibration, const sym::Pose3<Scalar>& views_1_pose,
    const sym::Pose3<Scalar>& priors_0_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_0_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_1_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_1_sqrt_info,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_target_coords, const Scalar matches_0_0_weight,
    const Scalar matches_0_0_inverse_range_prior,
    const Scalar matches_0_0_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_target_coords, const Scalar matches_0_1_weight,
    const Scalar matches_0_1_inverse_range_prior,
    const Scalar matches_0_1_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_target_coords, const Scalar matches_0_2_weight,
    const Scalar matches_0_2_inverse_range_prior,
    const Scalar matches_0_2_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_target_coords, const Scalar matches_0_3_weight,
    const Scalar matches_0_3_inverse_range_prior,
    const Scalar matches_0_3_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_target_coords, const Scalar matches_0_4_weight,
    const Scalar matches_0_4_inverse_range_prior,
    const Scalar matches_0_4_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_target_coords, const Scalar matches_0_5_weight,
    const Scalar matches_0_5_inverse_range_prior,
    const Scalar matches_0_5_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_target_coords, const Scalar matches_0_6_weight,
    const Scalar matches_0_6_inverse_range_prior,
    const Scalar matches_0_6_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_target_coords, const Scalar matches_0_7_weight,
    const Scalar matches_0_7_inverse_range_prior,
    const Scalar matches_0_7_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_target_coords, const Scalar matches_0_8_weight,
    const Scalar matches_0_8_inverse_range_prior,
    const Scalar matches_0_8_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_target_coords, const Scalar matches_0_9_weight,
    const Scalar matches_0_9_inverse_range_prior,
    const Scalar matches_0_9_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_target_coords, const Scalar matches_0_10_weight,
    const Scalar matches_0_10_inverse_range_prior,
    const Scalar matches_0_10_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_target_coords, const Scalar matches_0_11_weight,
    const Scalar matches_0_11_inverse_range_prior,
    const Scalar matches_0_11_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_target_coords, const Scalar matches_0_12_weight,
    const Scalar matches_0_12_inverse_range_prior,
    const Scalar matches_0_12_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_target_coords, const Scalar matches_0_13_weight,
    const Scalar matches_0_13_inverse_range_prior,
    const Scalar matches_0_13_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_target_coords, const Scalar matches_0_14_weight,
    const Scalar matches_0_14_inverse_range_prior,
    const Scalar matches_0_14_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_target_coords, const Scalar matches_0_15_weight,
    const Scalar matches_0_15_inverse_range_prior,
    const Scalar matches_0_15_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_target_coords, const Scalar matches_0_16_weight,
    const Scalar matches_0_16_inverse_range_prior,
    const Scalar matches_0_16_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_target_coords, const Scalar matches_0_17_weight,
    const Scalar matches_0_17_inverse_range_prior,
    const Scalar matches_0_17_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_target_coords, const Scalar matches_0_18_weight,
    const Scalar matches_0_18_inverse_range_prior,
    const Scalar matches_0_18_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_target_coords, const Scalar matches_0_19_weight,
    const Scalar matches_0_19_inverse_range_prior,
    const Scalar matches_0_19_inverse_range_prior_sigma, const Scalar landmarks_0_,
    const Scalar landmarks_1_, const Scalar landmarks_2_, const Scalar landmarks_3_,
    const Scalar landmarks_4_, const Scalar landmarks_5_, const Scalar landmarks_6_,
    const Scalar landmarks_7_, const Scalar landmarks_8_, const Scalar landmarks_9_,
    const Scalar landmarks_10_, const Scalar landmarks_11_, const Scalar landmarks_12_,
    const Scalar landmarks_13_, const Scalar landmarks_14_, const Scalar landmarks_15_,
    const Scalar landmarks_16_, const Scalar landmarks_17_, const Scalar landmarks_18_,
    const Scalar landmarks_19_, const Scalar costs_reprojection_error_gnc_scale,
    const Scalar costs_reprojection_error_gnc_mu, const Scalar epsilon,
    Eigen::Matrix<Scalar, 72, 1>* const residual = nullptr,
    Eigen::SparseMatrix<Scalar>* const jacobian = nullptr,
    Eigen::SparseMatrix<Scalar>* const hessian = nullptr,
    Eigen::Matrix<Scalar, 26, 1>* const rhs = nullptr) {
  // Total ops: 10326

  // Unused inputs
  (void)priors_0_0_target_T_src;
  (void)priors_0_0_sqrt_info;
  (void)priors_1_1_target_T_src;
  (void)priors_1_1_sqrt_info;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _views_0_calibration = views_0_calibration.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_0_pose = views_0_pose.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _views_1_calibration = views_1_calibration.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_1_pose = views_1_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_1_target_T_src = priors_0_1_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_0_target_T_src = priors_1_0_target_T_src.Data();

  // Intermediate terms (2290)
  const Scalar _tmp0 = 2 * _views_0_pose[3];
  const Scalar _tmp1 = _tmp0 * _views_0_pose[2];
  const Scalar _tmp2 = 2 * _views_0_pose[0];
  const Scalar _tmp3 = _tmp2 * _views_0_pose[1];
  const Scalar _tmp4 = _tmp1 + _tmp3;
  const Scalar _tmp5 = -2 * std::pow(_views_0_pose[2], Scalar(2));
  const Scalar _tmp6 = -2 * std::pow(_views_0_pose[1], Scalar(2));
  const Scalar _tmp7 = _tmp5 + _tmp6 + 1;
  const Scalar _tmp8 = _tmp2 * _views_0_pose[2];
  const Scalar _tmp9 = _tmp0 * _views_0_pose[1];
  const Scalar _tmp10 = _tmp8 - _tmp9;
  const Scalar _tmp11 = -_priors_0_1_target_T_src[4] - _tmp10 * _views_0_pose[6] +
                        _tmp10 * _views_1_pose[6] - _tmp4 * _views_0_pose[5] +
                        _tmp4 * _views_1_pose[5] - _tmp7 * _views_0_pose[4] +
                        _tmp7 * _views_1_pose[4];
  const Scalar _tmp12 = -_tmp1 + _tmp3;
  const Scalar _tmp13 = 1 - 2 * std::pow(_views_0_pose[0], Scalar(2));
  const Scalar _tmp14 = _tmp13 + _tmp5;
  const Scalar _tmp15 = 2 * _views_0_pose[1] * _views_0_pose[2];
  const Scalar _tmp16 = _tmp0 * _views_0_pose[0];
  const Scalar _tmp17 = _tmp15 + _tmp16;
  const Scalar _tmp18 = -_priors_0_1_target_T_src[5] - _tmp12 * _views_0_pose[4] +
                        _tmp12 * _views_1_pose[4] - _tmp14 * _views_0_pose[5] +
                        _tmp14 * _views_1_pose[5] - _tmp17 * _views_0_pose[6] +
                        _tmp17 * _views_1_pose[6];
  const Scalar _tmp19 = _views_0_pose[0] * _views_1_pose[0];
  const Scalar _tmp20 = _views_0_pose[2] * _views_1_pose[2];
  const Scalar _tmp21 = _views_0_pose[1] * _views_1_pose[1];
  const Scalar _tmp22 = _views_0_pose[3] * _views_1_pose[3];
  const Scalar _tmp23 = _tmp19 + _tmp20 + _tmp21 + _tmp22;
  const Scalar _tmp24 = _views_0_pose[0] * _views_1_pose[3];
  const Scalar _tmp25 = _views_0_pose[3] * _views_1_pose[0];
  const Scalar _tmp26 = _views_0_pose[1] * _views_1_pose[2];
  const Scalar _tmp27 = _views_0_pose[2] * _views_1_pose[1];
  const Scalar _tmp28 = -_tmp24 + _tmp25 - _tmp26 + _tmp27;
  const Scalar _tmp29 = _views_0_pose[1] * _views_1_pose[3];
  const Scalar _tmp30 = _views_0_pose[2] * _views_1_pose[0];
  const Scalar _tmp31 = _views_0_pose[0] * _views_1_pose[2];
  const Scalar _tmp32 = _views_0_pose[3] * _views_1_pose[1];
  const Scalar _tmp33 = -_tmp29 - _tmp30 + _tmp31 + _tmp32;
  const Scalar _tmp34 = _views_0_pose[2] * _views_1_pose[3];
  const Scalar _tmp35 = _views_0_pose[1] * _views_1_pose[0];
  const Scalar _tmp36 = _views_0_pose[3] * _views_1_pose[2];
  const Scalar _tmp37 = _views_0_pose[0] * _views_1_pose[1];
  const Scalar _tmp38 = -_tmp34 + _tmp35 + _tmp36 - _tmp37;
  const Scalar _tmp39 = _priors_0_1_target_T_src[0] * _tmp38 -
                        _priors_0_1_target_T_src[1] * _tmp23 -
                        _priors_0_1_target_T_src[2] * _tmp28 + _priors_0_1_target_T_src[3] * _tmp33;
  const Scalar _tmp40 = _priors_0_1_target_T_src[0] * _tmp28 +
                        _priors_0_1_target_T_src[1] * _tmp33 +
                        _priors_0_1_target_T_src[2] * _tmp38 + _priors_0_1_target_T_src[3] * _tmp23;
  const Scalar _tmp41 = (((_tmp40) > 0) - ((_tmp40) < 0));
  const Scalar _tmp42 = 2 * std::min<Scalar>(0, _tmp41) + 1;
  const Scalar _tmp43 = std::fabs(_tmp40);
  const Scalar _tmp44 = -epsilon;
  const Scalar _tmp45 = _tmp44 + 1;
  const Scalar _tmp46 = std::min<Scalar>(_tmp43, _tmp45);
  const Scalar _tmp47 = 1 - std::pow(_tmp46, Scalar(2));
  const Scalar _tmp48 = std::acos(_tmp46);
  const Scalar _tmp49 = 2 * _tmp48 / std::sqrt(_tmp47);
  const Scalar _tmp50 = _tmp42 * _tmp49;
  const Scalar _tmp51 = _tmp39 * _tmp50;
  const Scalar _tmp52 = -_priors_0_1_target_T_src[0] * _tmp23 -
                        _priors_0_1_target_T_src[1] * _tmp38 +
                        _priors_0_1_target_T_src[2] * _tmp33 + _priors_0_1_target_T_src[3] * _tmp28;
  const Scalar _tmp53 = _tmp50 * _tmp52;
  const Scalar _tmp54 = _tmp13 + _tmp6;
  const Scalar _tmp55 = _tmp8 + _tmp9;
  const Scalar _tmp56 = _tmp15 - _tmp16;
  const Scalar _tmp57 = -_priors_0_1_target_T_src[6] - _tmp54 * _views_0_pose[6] +
                        _tmp54 * _views_1_pose[6] - _tmp55 * _views_0_pose[4] +
                        _tmp55 * _views_1_pose[4] - _tmp56 * _views_0_pose[5] +
                        _tmp56 * _views_1_pose[5];
  const Scalar _tmp58 =
      _tmp42 * (-_priors_0_1_target_T_src[0] * _tmp33 + _priors_0_1_target_T_src[1] * _tmp28 -
                _priors_0_1_target_T_src[2] * _tmp23 + _priors_0_1_target_T_src[3] * _tmp38);
  const Scalar _tmp59 = _tmp49 * _tmp58;
  const Scalar _tmp60 = _tmp11 * priors_0_1_sqrt_info(0, 3) + _tmp18 * priors_0_1_sqrt_info(0, 4) +
                        _tmp51 * priors_0_1_sqrt_info(0, 1) + _tmp53 * priors_0_1_sqrt_info(0, 0) +
                        _tmp57 * priors_0_1_sqrt_info(0, 5) + _tmp59 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp61 = _tmp11 * priors_0_1_sqrt_info(1, 3) + _tmp18 * priors_0_1_sqrt_info(1, 4) +
                        _tmp51 * priors_0_1_sqrt_info(1, 1) + _tmp53 * priors_0_1_sqrt_info(1, 0) +
                        _tmp57 * priors_0_1_sqrt_info(1, 5) + _tmp59 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp62 = _tmp11 * priors_0_1_sqrt_info(2, 3) + _tmp18 * priors_0_1_sqrt_info(2, 4) +
                        _tmp51 * priors_0_1_sqrt_info(2, 1) + _tmp53 * priors_0_1_sqrt_info(2, 0) +
                        _tmp57 * priors_0_1_sqrt_info(2, 5) + _tmp59 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp63 = _tmp11 * priors_0_1_sqrt_info(3, 3) + _tmp18 * priors_0_1_sqrt_info(3, 4) +
                        _tmp51 * priors_0_1_sqrt_info(3, 1) + _tmp53 * priors_0_1_sqrt_info(3, 0) +
                        _tmp57 * priors_0_1_sqrt_info(3, 5) + _tmp59 * priors_0_1_sqrt_info(3, 2);
  const Scalar _tmp64 = _tmp50 * priors_0_1_sqrt_info(4, 1);
  const Scalar _tmp65 = _tmp11 * priors_0_1_sqrt_info(4, 3) + _tmp18 * priors_0_1_sqrt_info(4, 4) +
                        _tmp39 * _tmp64 + _tmp53 * priors_0_1_sqrt_info(4, 0) +
                        _tmp57 * priors_0_1_sqrt_info(4, 5) + _tmp59 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp66 = _tmp50 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp67 = _tmp58 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp68 = _tmp11 * priors_0_1_sqrt_info(5, 3) + _tmp18 * priors_0_1_sqrt_info(5, 4) +
                        _tmp39 * _tmp66 + _tmp49 * _tmp67 + _tmp53 * priors_0_1_sqrt_info(5, 0) +
                        _tmp57 * priors_0_1_sqrt_info(5, 5);
  const Scalar _tmp69 = 2 * _views_1_pose[3];
  const Scalar _tmp70 = _tmp69 * _views_1_pose[0];
  const Scalar _tmp71 = 2 * _views_1_pose[1];
  const Scalar _tmp72 = _tmp71 * _views_1_pose[2];
  const Scalar _tmp73 = _tmp70 + _tmp72;
  const Scalar _tmp74 = _tmp73 * _views_1_pose[6];
  const Scalar _tmp75 = std::pow(_views_1_pose[0], Scalar(2));
  const Scalar _tmp76 = 2 * _tmp75;
  const Scalar _tmp77 = -_tmp76;
  const Scalar _tmp78 = std::pow(_views_1_pose[2], Scalar(2));
  const Scalar _tmp79 = 2 * _tmp78;
  const Scalar _tmp80 = 1 - _tmp79;
  const Scalar _tmp81 = _tmp77 + _tmp80;
  const Scalar _tmp82 = _tmp71 * _views_1_pose[0];
  const Scalar _tmp83 = _tmp69 * _views_1_pose[2];
  const Scalar _tmp84 = -_tmp83;
  const Scalar _tmp85 = _tmp82 + _tmp84;
  const Scalar _tmp86 = _tmp85 * _views_1_pose[4];
  const Scalar _tmp87 = _tmp73 * _views_0_pose[6] + _tmp85 * _views_0_pose[4];
  const Scalar _tmp88 = -_priors_1_0_target_T_src[5] - _tmp74 + _tmp81 * _views_0_pose[5] -
                        _tmp81 * _views_1_pose[5] - _tmp86 + _tmp87;
  const Scalar _tmp89 = std::pow(_views_1_pose[1], Scalar(2));
  const Scalar _tmp90 = 2 * _tmp89;
  const Scalar _tmp91 = -_tmp90;
  const Scalar _tmp92 = _tmp80 + _tmp91;
  const Scalar _tmp93 = 2 * _views_1_pose[0] * _views_1_pose[2];
  const Scalar _tmp94 = _tmp69 * _views_1_pose[1];
  const Scalar _tmp95 = -_tmp94;
  const Scalar _tmp96 = _tmp93 + _tmp95;
  const Scalar _tmp97 = _tmp96 * _views_1_pose[6];
  const Scalar _tmp98 = _tmp82 + _tmp83;
  const Scalar _tmp99 = _tmp98 * _views_1_pose[5];
  const Scalar _tmp100 = _tmp96 * _views_0_pose[6] + _tmp98 * _views_0_pose[5];
  const Scalar _tmp101 = -_priors_1_0_target_T_src[4] + _tmp100 + _tmp92 * _views_0_pose[4] -
                         _tmp92 * _views_1_pose[4] - _tmp97 - _tmp99;
  const Scalar _tmp102 = -_tmp70;
  const Scalar _tmp103 = _tmp102 + _tmp72;
  const Scalar _tmp104 = _tmp103 * _views_1_pose[5];
  const Scalar _tmp105 = _tmp77 + _tmp91 + 1;
  const Scalar _tmp106 = _tmp93 + _tmp94;
  const Scalar _tmp107 = _tmp106 * _views_1_pose[4];
  const Scalar _tmp108 = _tmp103 * _views_0_pose[5] + _tmp106 * _views_0_pose[4];
  const Scalar _tmp109 = -_priors_1_0_target_T_src[6] - _tmp104 + _tmp105 * _views_0_pose[6] -
                         _tmp105 * _views_1_pose[6] - _tmp107 + _tmp108;
  const Scalar _tmp110 = _priors_1_0_target_T_src[3] * _tmp23;
  const Scalar _tmp111 = _tmp34 - _tmp35 - _tmp36 + _tmp37;
  const Scalar _tmp112 = _priors_1_0_target_T_src[2] * _tmp111;
  const Scalar _tmp113 = _tmp29 + _tmp30 - _tmp31 - _tmp32;
  const Scalar _tmp114 = _priors_1_0_target_T_src[1] * _tmp113;
  const Scalar _tmp115 = _tmp24 - _tmp25 + _tmp26 - _tmp27;
  const Scalar _tmp116 = _priors_1_0_target_T_src[0] * _tmp115;
  const Scalar _tmp117 = _tmp110 + _tmp112 + _tmp114 + _tmp116;
  const Scalar _tmp118 = 2 * std::min<Scalar>(0, (((_tmp117) > 0) - ((_tmp117) < 0))) + 1;
  const Scalar _tmp119 = 2 * _tmp118;
  const Scalar _tmp120 =
      _priors_1_0_target_T_src[0] * _tmp111 - _priors_1_0_target_T_src[1] * _tmp23 -
      _priors_1_0_target_T_src[2] * _tmp115 + _priors_1_0_target_T_src[3] * _tmp113;
  const Scalar _tmp121 = std::min<Scalar>(_tmp45, std::fabs(_tmp117));
  const Scalar _tmp122 = std::acos(_tmp121) / std::sqrt(Scalar(1 - std::pow(_tmp121, Scalar(2))));
  const Scalar _tmp123 = _tmp120 * _tmp122;
  const Scalar _tmp124 = _tmp119 * _tmp123;
  const Scalar _tmp125 =
      -_priors_1_0_target_T_src[0] * _tmp23 - _priors_1_0_target_T_src[1] * _tmp111 +
      _priors_1_0_target_T_src[2] * _tmp113 + _priors_1_0_target_T_src[3] * _tmp115;
  const Scalar _tmp126 = _tmp119 * _tmp122;
  const Scalar _tmp127 = _tmp125 * _tmp126;
  const Scalar _tmp128 =
      -_priors_1_0_target_T_src[0] * _tmp113 + _priors_1_0_target_T_src[1] * _tmp115 -
      _priors_1_0_target_T_src[2] * _tmp23 + _priors_1_0_target_T_src[3] * _tmp111;
  const Scalar _tmp129 = _tmp122 * _tmp128;
  const Scalar _tmp130 = _tmp119 * _tmp129;
  const Scalar _tmp131 =
      _tmp101 * priors_1_0_sqrt_info(0, 3) + _tmp109 * priors_1_0_sqrt_info(0, 5) +
      _tmp124 * priors_1_0_sqrt_info(0, 1) + _tmp127 * priors_1_0_sqrt_info(0, 0) +
      _tmp130 * priors_1_0_sqrt_info(0, 2) + _tmp88 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp132 =
      _tmp101 * priors_1_0_sqrt_info(1, 3) + _tmp109 * priors_1_0_sqrt_info(1, 5) +
      _tmp124 * priors_1_0_sqrt_info(1, 1) + _tmp127 * priors_1_0_sqrt_info(1, 0) +
      _tmp130 * priors_1_0_sqrt_info(1, 2) + _tmp88 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp133 = _tmp125 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp134 = _tmp119 * priors_1_0_sqrt_info(2, 1);
  const Scalar _tmp135 = _tmp101 * priors_1_0_sqrt_info(2, 3) +
                         _tmp109 * priors_1_0_sqrt_info(2, 5) + _tmp123 * _tmp134 +
                         _tmp126 * _tmp133 + _tmp130 * priors_1_0_sqrt_info(2, 2) +
                         _tmp88 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp136 = _tmp119 * priors_1_0_sqrt_info(3, 1);
  const Scalar _tmp137 = _tmp101 * priors_1_0_sqrt_info(3, 3) +
                         _tmp109 * priors_1_0_sqrt_info(3, 5) + _tmp123 * _tmp136 +
                         _tmp127 * priors_1_0_sqrt_info(3, 0) +
                         _tmp130 * priors_1_0_sqrt_info(3, 2) + _tmp88 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp138 = _tmp119 * priors_1_0_sqrt_info(4, 1);
  const Scalar _tmp139 = _tmp119 * priors_1_0_sqrt_info(4, 2);
  const Scalar _tmp140 = _tmp101 * priors_1_0_sqrt_info(4, 3) +
                         _tmp109 * priors_1_0_sqrt_info(4, 5) + _tmp123 * _tmp138 +
                         _tmp127 * priors_1_0_sqrt_info(4, 0) + _tmp129 * _tmp139 +
                         _tmp88 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp141 = _tmp119 * priors_1_0_sqrt_info(5, 1);
  const Scalar _tmp142 = _tmp101 * priors_1_0_sqrt_info(5, 3) +
                         _tmp109 * priors_1_0_sqrt_info(5, 5) + _tmp123 * _tmp141 +
                         _tmp127 * priors_1_0_sqrt_info(5, 0) +
                         _tmp130 * priors_1_0_sqrt_info(5, 2) + _tmp88 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp143 = Scalar(1.0) / (_views_0_calibration[0]);
  const Scalar _tmp144 = _tmp143 * _tmp7;
  const Scalar _tmp145 = -_views_0_calibration[3];
  const Scalar _tmp146 = _tmp145 + matches_0_0_source_coords(1, 0);
  const Scalar _tmp147 = std::pow(_views_0_calibration[1], Scalar(-2));
  const Scalar _tmp148 = -_views_0_calibration[2];
  const Scalar _tmp149 = _tmp148 + matches_0_0_source_coords(0, 0);
  const Scalar _tmp150 = std::pow(_views_0_calibration[0], Scalar(-2));
  const Scalar _tmp151 = epsilon + 1;
  const Scalar _tmp152 = std::pow(Scalar(std::pow(_tmp146, Scalar(2)) * _tmp147 +
                                         std::pow(_tmp149, Scalar(2)) * _tmp150 + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp153 = _tmp149 * _tmp152;
  const Scalar _tmp154 = _tmp146 * _tmp152;
  const Scalar _tmp155 = Scalar(1.0) / (_views_0_calibration[1]);
  const Scalar _tmp156 = _tmp12 * _tmp155;
  const Scalar _tmp157 = _views_0_pose[4] - _views_1_pose[4];
  const Scalar _tmp158 =
      _tmp144 * _tmp153 + _tmp152 * _tmp55 + _tmp154 * _tmp156 + _tmp157 * landmarks_0_;
  const Scalar _tmp159 = _tmp155 * _tmp17;
  const Scalar _tmp160 = _tmp10 * _tmp143;
  const Scalar _tmp161 = _views_0_pose[6] - _views_1_pose[6];
  const Scalar _tmp162 =
      _tmp152 * _tmp54 + _tmp153 * _tmp160 + _tmp154 * _tmp159 + _tmp161 * landmarks_0_;
  const Scalar _tmp163 = _tmp143 * _tmp4;
  const Scalar _tmp164 = _tmp14 * _tmp155;
  const Scalar _tmp165 = _views_0_pose[5] - _views_1_pose[5];
  const Scalar _tmp166 =
      _tmp152 * _tmp56 + _tmp153 * _tmp163 + _tmp154 * _tmp164 + _tmp165 * landmarks_0_;
  const Scalar _tmp167 = _tmp162 * _tmp96 + _tmp166 * _tmp98;
  const Scalar _tmp168 = _tmp158 * _tmp92 + _tmp167;
  const Scalar _tmp169 = _tmp103 * _tmp166 + _tmp106 * _tmp158;
  const Scalar _tmp170 = _tmp105 * _tmp162 + _tmp169;
  const Scalar _tmp171 = std::max<Scalar>(_tmp170, epsilon);
  const Scalar _tmp172 = Scalar(1.0) / (_tmp171);
  const Scalar _tmp173 = _tmp172 * _views_1_calibration[0];
  const Scalar _tmp174 =
      _tmp168 * _tmp173 + _views_1_calibration[2] - matches_0_0_target_coords(0, 0);
  const Scalar _tmp175 = _tmp158 * _tmp85 + _tmp162 * _tmp73;
  const Scalar _tmp176 = _tmp166 * _tmp81 + _tmp175;
  const Scalar _tmp177 = _tmp172 * _views_1_calibration[1];
  const Scalar _tmp178 =
      _tmp176 * _tmp177 + _views_1_calibration[3] - matches_0_0_target_coords(1, 0);
  const Scalar _tmp179 = std::pow(_tmp174, Scalar(2)) + std::pow(_tmp178, Scalar(2)) + epsilon;
  const Scalar _tmp180 = std::pow(_tmp179, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp181 = std::max<Scalar>(0, (((_tmp170) > 0) - ((_tmp170) < 0)));
  const Scalar _tmp182 = std::pow(costs_reprojection_error_gnc_scale, Scalar(-2));
  const Scalar _tmp183 = Scalar(1.0) / (_tmp151 - costs_reprojection_error_gnc_mu);
  const Scalar _tmp184 = epsilon + std::fabs(_tmp183);
  const Scalar _tmp185 = _tmp182 / _tmp184;
  const Scalar _tmp186 = _tmp179 * _tmp185 + 1;
  const Scalar _tmp187 = 2 - _tmp183;
  const Scalar _tmp188 =
      _tmp187 + epsilon * (2 * std::min<Scalar>(0, (((_tmp187) > 0) - ((_tmp187) < 0))) + 1);
  const Scalar _tmp189 = (Scalar(1) / Scalar(2)) * _tmp188;
  const Scalar _tmp190 = 2 * _tmp184 / _tmp188;
  const Scalar _tmp191 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp186, _tmp189) - 1)));
  const Scalar _tmp192 = std::sqrt(matches_0_0_weight);
  const Scalar _tmp193 = _tmp181 * _tmp191 * _tmp192;
  const Scalar _tmp194 = _tmp180 * _tmp193;
  const Scalar _tmp195 = _tmp174 * _tmp194;
  const Scalar _tmp196 = _tmp178 * _tmp194;
  const Scalar _tmp197 = _tmp148 + matches_0_1_source_coords(0, 0);
  const Scalar _tmp198 = _tmp145 + matches_0_1_source_coords(1, 0);
  const Scalar _tmp199 = std::pow(Scalar(_tmp147 * std::pow(_tmp198, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp197, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp200 = _tmp197 * _tmp199;
  const Scalar _tmp201 = _tmp198 * _tmp199;
  const Scalar _tmp202 =
      _tmp144 * _tmp200 + _tmp156 * _tmp201 + _tmp157 * landmarks_1_ + _tmp199 * _tmp55;
  const Scalar _tmp203 =
      _tmp159 * _tmp201 + _tmp160 * _tmp200 + _tmp161 * landmarks_1_ + _tmp199 * _tmp54;
  const Scalar _tmp204 =
      _tmp163 * _tmp200 + _tmp164 * _tmp201 + _tmp165 * landmarks_1_ + _tmp199 * _tmp56;
  const Scalar _tmp205 = _tmp203 * _tmp96 + _tmp204 * _tmp98;
  const Scalar _tmp206 = _tmp202 * _tmp92 + _tmp205;
  const Scalar _tmp207 = _tmp103 * _tmp204 + _tmp106 * _tmp202;
  const Scalar _tmp208 = _tmp105 * _tmp203 + _tmp207;
  const Scalar _tmp209 = std::max<Scalar>(_tmp208, epsilon);
  const Scalar _tmp210 = Scalar(1.0) / (_tmp209);
  const Scalar _tmp211 = _tmp210 * _views_1_calibration[0];
  const Scalar _tmp212 =
      _tmp206 * _tmp211 + _views_1_calibration[2] - matches_0_1_target_coords(0, 0);
  const Scalar _tmp213 = _tmp202 * _tmp85 + _tmp203 * _tmp73;
  const Scalar _tmp214 = _tmp204 * _tmp81 + _tmp213;
  const Scalar _tmp215 = _tmp210 * _views_1_calibration[1];
  const Scalar _tmp216 =
      _tmp214 * _tmp215 + _views_1_calibration[3] - matches_0_1_target_coords(1, 0);
  const Scalar _tmp217 = std::pow(_tmp212, Scalar(2)) + std::pow(_tmp216, Scalar(2)) + epsilon;
  const Scalar _tmp218 = std::pow(_tmp217, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp219 = std::sqrt(matches_0_1_weight);
  const Scalar _tmp220 = _tmp185 * _tmp217 + 1;
  const Scalar _tmp221 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp220, _tmp189) - 1)));
  const Scalar _tmp222 = std::max<Scalar>(0, (((_tmp208) > 0) - ((_tmp208) < 0)));
  const Scalar _tmp223 = _tmp219 * _tmp221 * _tmp222;
  const Scalar _tmp224 = _tmp218 * _tmp223;
  const Scalar _tmp225 = _tmp212 * _tmp224;
  const Scalar _tmp226 = _tmp216 * _tmp224;
  const Scalar _tmp227 = _tmp145 + matches_0_2_source_coords(1, 0);
  const Scalar _tmp228 = _tmp148 + matches_0_2_source_coords(0, 0);
  const Scalar _tmp229 = std::pow(Scalar(_tmp147 * std::pow(_tmp227, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp228, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp230 = _tmp228 * _tmp229;
  const Scalar _tmp231 = _tmp227 * _tmp229;
  const Scalar _tmp232 =
      _tmp144 * _tmp230 + _tmp156 * _tmp231 + _tmp157 * landmarks_2_ + _tmp229 * _tmp55;
  const Scalar _tmp233 =
      _tmp159 * _tmp231 + _tmp160 * _tmp230 + _tmp161 * landmarks_2_ + _tmp229 * _tmp54;
  const Scalar _tmp234 =
      _tmp163 * _tmp230 + _tmp164 * _tmp231 + _tmp165 * landmarks_2_ + _tmp229 * _tmp56;
  const Scalar _tmp235 = _tmp233 * _tmp96 + _tmp234 * _tmp98;
  const Scalar _tmp236 = _tmp232 * _tmp92 + _tmp235;
  const Scalar _tmp237 = _tmp103 * _tmp234 + _tmp106 * _tmp232;
  const Scalar _tmp238 = _tmp105 * _tmp233 + _tmp237;
  const Scalar _tmp239 = std::max<Scalar>(_tmp238, epsilon);
  const Scalar _tmp240 = Scalar(1.0) / (_tmp239);
  const Scalar _tmp241 = _tmp240 * _views_1_calibration[0];
  const Scalar _tmp242 =
      _tmp236 * _tmp241 + _views_1_calibration[2] - matches_0_2_target_coords(0, 0);
  const Scalar _tmp243 = _tmp232 * _tmp85 + _tmp233 * _tmp73;
  const Scalar _tmp244 = _tmp234 * _tmp81 + _tmp243;
  const Scalar _tmp245 = _tmp240 * _views_1_calibration[1];
  const Scalar _tmp246 =
      _tmp244 * _tmp245 + _views_1_calibration[3] - matches_0_2_target_coords(1, 0);
  const Scalar _tmp247 = std::pow(_tmp242, Scalar(2)) + std::pow(_tmp246, Scalar(2)) + epsilon;
  const Scalar _tmp248 = std::pow(_tmp247, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp249 = std::max<Scalar>(0, (((_tmp238) > 0) - ((_tmp238) < 0)));
  const Scalar _tmp250 = std::sqrt(matches_0_2_weight);
  const Scalar _tmp251 = _tmp185 * _tmp247 + 1;
  const Scalar _tmp252 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp251, _tmp189) - 1)));
  const Scalar _tmp253 = _tmp249 * _tmp250 * _tmp252;
  const Scalar _tmp254 = _tmp248 * _tmp253;
  const Scalar _tmp255 = _tmp242 * _tmp254;
  const Scalar _tmp256 = _tmp246 * _tmp254;
  const Scalar _tmp257 = _tmp148 + matches_0_3_source_coords(0, 0);
  const Scalar _tmp258 = _tmp145 + matches_0_3_source_coords(1, 0);
  const Scalar _tmp259 = std::pow(Scalar(_tmp147 * std::pow(_tmp258, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp257, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp260 = _tmp258 * _tmp259;
  const Scalar _tmp261 = _tmp257 * _tmp259;
  const Scalar _tmp262 =
      _tmp144 * _tmp261 + _tmp156 * _tmp260 + _tmp157 * landmarks_3_ + _tmp259 * _tmp55;
  const Scalar _tmp263 =
      _tmp163 * _tmp261 + _tmp164 * _tmp260 + _tmp165 * landmarks_3_ + _tmp259 * _tmp56;
  const Scalar _tmp264 =
      _tmp159 * _tmp260 + _tmp160 * _tmp261 + _tmp161 * landmarks_3_ + _tmp259 * _tmp54;
  const Scalar _tmp265 = _tmp263 * _tmp98 + _tmp264 * _tmp96;
  const Scalar _tmp266 = _tmp262 * _tmp92 + _tmp265;
  const Scalar _tmp267 = _tmp103 * _tmp263 + _tmp106 * _tmp262;
  const Scalar _tmp268 = _tmp105 * _tmp264 + _tmp267;
  const Scalar _tmp269 = std::max<Scalar>(_tmp268, epsilon);
  const Scalar _tmp270 = Scalar(1.0) / (_tmp269);
  const Scalar _tmp271 = _tmp270 * _views_1_calibration[0];
  const Scalar _tmp272 =
      _tmp266 * _tmp271 + _views_1_calibration[2] - matches_0_3_target_coords(0, 0);
  const Scalar _tmp273 = _tmp262 * _tmp85 + _tmp264 * _tmp73;
  const Scalar _tmp274 = _tmp263 * _tmp81 + _tmp273;
  const Scalar _tmp275 = _tmp270 * _views_1_calibration[1];
  const Scalar _tmp276 =
      _tmp274 * _tmp275 + _views_1_calibration[3] - matches_0_3_target_coords(1, 0);
  const Scalar _tmp277 = std::pow(_tmp272, Scalar(2)) + std::pow(_tmp276, Scalar(2)) + epsilon;
  const Scalar _tmp278 = std::pow(_tmp277, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp279 = std::max<Scalar>(0, (((_tmp268) > 0) - ((_tmp268) < 0)));
  const Scalar _tmp280 = _tmp185 * _tmp277 + 1;
  const Scalar _tmp281 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp280, _tmp189) - 1)));
  const Scalar _tmp282 = std::sqrt(matches_0_3_weight);
  const Scalar _tmp283 = _tmp279 * _tmp281 * _tmp282;
  const Scalar _tmp284 = _tmp278 * _tmp283;
  const Scalar _tmp285 = _tmp272 * _tmp284;
  const Scalar _tmp286 = _tmp276 * _tmp284;
  const Scalar _tmp287 = _tmp148 + matches_0_4_source_coords(0, 0);
  const Scalar _tmp288 = _tmp145 + matches_0_4_source_coords(1, 0);
  const Scalar _tmp289 = std::pow(Scalar(_tmp147 * std::pow(_tmp288, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp287, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp290 = _tmp288 * _tmp289;
  const Scalar _tmp291 = _tmp287 * _tmp289;
  const Scalar _tmp292 =
      _tmp144 * _tmp291 + _tmp156 * _tmp290 + _tmp157 * landmarks_4_ + _tmp289 * _tmp55;
  const Scalar _tmp293 =
      _tmp159 * _tmp290 + _tmp160 * _tmp291 + _tmp161 * landmarks_4_ + _tmp289 * _tmp54;
  const Scalar _tmp294 =
      _tmp163 * _tmp291 + _tmp164 * _tmp290 + _tmp165 * landmarks_4_ + _tmp289 * _tmp56;
  const Scalar _tmp295 = _tmp293 * _tmp96 + _tmp294 * _tmp98;
  const Scalar _tmp296 = _tmp292 * _tmp92 + _tmp295;
  const Scalar _tmp297 = _tmp103 * _tmp294 + _tmp106 * _tmp292;
  const Scalar _tmp298 = _tmp105 * _tmp293 + _tmp297;
  const Scalar _tmp299 = std::max<Scalar>(_tmp298, epsilon);
  const Scalar _tmp300 = Scalar(1.0) / (_tmp299);
  const Scalar _tmp301 = _tmp300 * _views_1_calibration[0];
  const Scalar _tmp302 =
      _tmp296 * _tmp301 + _views_1_calibration[2] - matches_0_4_target_coords(0, 0);
  const Scalar _tmp303 = _tmp292 * _tmp85 + _tmp293 * _tmp73;
  const Scalar _tmp304 = _tmp294 * _tmp81 + _tmp303;
  const Scalar _tmp305 = _tmp300 * _views_1_calibration[1];
  const Scalar _tmp306 =
      _tmp304 * _tmp305 + _views_1_calibration[3] - matches_0_4_target_coords(1, 0);
  const Scalar _tmp307 = std::pow(_tmp302, Scalar(2)) + std::pow(_tmp306, Scalar(2)) + epsilon;
  const Scalar _tmp308 = std::pow(_tmp307, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp309 = _tmp185 * _tmp307 + 1;
  const Scalar _tmp310 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp309, _tmp189) - 1)));
  const Scalar _tmp311 = std::sqrt(matches_0_4_weight);
  const Scalar _tmp312 = std::max<Scalar>(0, (((_tmp298) > 0) - ((_tmp298) < 0)));
  const Scalar _tmp313 = _tmp310 * _tmp311 * _tmp312;
  const Scalar _tmp314 = _tmp308 * _tmp313;
  const Scalar _tmp315 = _tmp302 * _tmp314;
  const Scalar _tmp316 = _tmp306 * _tmp314;
  const Scalar _tmp317 = _tmp145 + matches_0_5_source_coords(1, 0);
  const Scalar _tmp318 = _tmp148 + matches_0_5_source_coords(0, 0);
  const Scalar _tmp319 = std::pow(Scalar(_tmp147 * std::pow(_tmp317, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp318, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp320 = _tmp318 * _tmp319;
  const Scalar _tmp321 = _tmp317 * _tmp319;
  const Scalar _tmp322 =
      _tmp144 * _tmp320 + _tmp156 * _tmp321 + _tmp157 * landmarks_5_ + _tmp319 * _tmp55;
  const Scalar _tmp323 =
      _tmp163 * _tmp320 + _tmp164 * _tmp321 + _tmp165 * landmarks_5_ + _tmp319 * _tmp56;
  const Scalar _tmp324 =
      _tmp159 * _tmp321 + _tmp160 * _tmp320 + _tmp161 * landmarks_5_ + _tmp319 * _tmp54;
  const Scalar _tmp325 = _tmp323 * _tmp98 + _tmp324 * _tmp96;
  const Scalar _tmp326 = _tmp322 * _tmp92 + _tmp325;
  const Scalar _tmp327 = _tmp103 * _tmp323 + _tmp106 * _tmp322;
  const Scalar _tmp328 = _tmp105 * _tmp324 + _tmp327;
  const Scalar _tmp329 = std::max<Scalar>(_tmp328, epsilon);
  const Scalar _tmp330 = Scalar(1.0) / (_tmp329);
  const Scalar _tmp331 = _tmp330 * _views_1_calibration[0];
  const Scalar _tmp332 =
      _tmp326 * _tmp331 + _views_1_calibration[2] - matches_0_5_target_coords(0, 0);
  const Scalar _tmp333 = _tmp322 * _tmp85 + _tmp324 * _tmp73;
  const Scalar _tmp334 = _tmp323 * _tmp81 + _tmp333;
  const Scalar _tmp335 = _tmp330 * _views_1_calibration[1];
  const Scalar _tmp336 =
      _tmp334 * _tmp335 + _views_1_calibration[3] - matches_0_5_target_coords(1, 0);
  const Scalar _tmp337 = std::pow(_tmp332, Scalar(2)) + std::pow(_tmp336, Scalar(2)) + epsilon;
  const Scalar _tmp338 = std::pow(_tmp337, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp339 = std::max<Scalar>(0, (((_tmp328) > 0) - ((_tmp328) < 0)));
  const Scalar _tmp340 = std::sqrt(matches_0_5_weight);
  const Scalar _tmp341 = _tmp185 * _tmp337 + 1;
  const Scalar _tmp342 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp341, _tmp189) - 1)));
  const Scalar _tmp343 = _tmp339 * _tmp340 * _tmp342;
  const Scalar _tmp344 = _tmp338 * _tmp343;
  const Scalar _tmp345 = _tmp332 * _tmp344;
  const Scalar _tmp346 = _tmp336 * _tmp344;
  const Scalar _tmp347 = _tmp148 + matches_0_6_source_coords(0, 0);
  const Scalar _tmp348 = _tmp145 + matches_0_6_source_coords(1, 0);
  const Scalar _tmp349 = std::pow(Scalar(_tmp147 * std::pow(_tmp348, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp347, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp350 = _tmp348 * _tmp349;
  const Scalar _tmp351 = _tmp347 * _tmp349;
  const Scalar _tmp352 =
      _tmp144 * _tmp351 + _tmp156 * _tmp350 + _tmp157 * landmarks_6_ + _tmp349 * _tmp55;
  const Scalar _tmp353 =
      _tmp159 * _tmp350 + _tmp160 * _tmp351 + _tmp161 * landmarks_6_ + _tmp349 * _tmp54;
  const Scalar _tmp354 =
      _tmp163 * _tmp351 + _tmp164 * _tmp350 + _tmp165 * landmarks_6_ + _tmp349 * _tmp56;
  const Scalar _tmp355 = _tmp353 * _tmp96 + _tmp354 * _tmp98;
  const Scalar _tmp356 = _tmp352 * _tmp92 + _tmp355;
  const Scalar _tmp357 = _tmp103 * _tmp354 + _tmp106 * _tmp352;
  const Scalar _tmp358 = _tmp105 * _tmp353 + _tmp357;
  const Scalar _tmp359 = std::max<Scalar>(_tmp358, epsilon);
  const Scalar _tmp360 = Scalar(1.0) / (_tmp359);
  const Scalar _tmp361 = _tmp360 * _views_1_calibration[0];
  const Scalar _tmp362 =
      _tmp356 * _tmp361 + _views_1_calibration[2] - matches_0_6_target_coords(0, 0);
  const Scalar _tmp363 = _tmp352 * _tmp85 + _tmp353 * _tmp73;
  const Scalar _tmp364 = _tmp354 * _tmp81 + _tmp363;
  const Scalar _tmp365 = _tmp360 * _views_1_calibration[1];
  const Scalar _tmp366 =
      _tmp364 * _tmp365 + _views_1_calibration[3] - matches_0_6_target_coords(1, 0);
  const Scalar _tmp367 = std::pow(_tmp362, Scalar(2)) + std::pow(_tmp366, Scalar(2)) + epsilon;
  const Scalar _tmp368 = std::pow(_tmp367, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp369 = _tmp185 * _tmp367 + 1;
  const Scalar _tmp370 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp369, _tmp189) - 1)));
  const Scalar _tmp371 = std::sqrt(matches_0_6_weight);
  const Scalar _tmp372 = std::max<Scalar>(0, (((_tmp358) > 0) - ((_tmp358) < 0)));
  const Scalar _tmp373 = _tmp370 * _tmp371 * _tmp372;
  const Scalar _tmp374 = _tmp368 * _tmp373;
  const Scalar _tmp375 = _tmp362 * _tmp374;
  const Scalar _tmp376 = _tmp366 * _tmp374;
  const Scalar _tmp377 = _tmp148 + matches_0_7_source_coords(0, 0);
  const Scalar _tmp378 = _tmp145 + matches_0_7_source_coords(1, 0);
  const Scalar _tmp379 = std::pow(Scalar(_tmp147 * std::pow(_tmp378, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp377, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp380 = _tmp377 * _tmp379;
  const Scalar _tmp381 = _tmp378 * _tmp379;
  const Scalar _tmp382 =
      _tmp144 * _tmp380 + _tmp156 * _tmp381 + _tmp157 * landmarks_7_ + _tmp379 * _tmp55;
  const Scalar _tmp383 =
      _tmp163 * _tmp380 + _tmp164 * _tmp381 + _tmp165 * landmarks_7_ + _tmp379 * _tmp56;
  const Scalar _tmp384 =
      _tmp159 * _tmp381 + _tmp160 * _tmp380 + _tmp161 * landmarks_7_ + _tmp379 * _tmp54;
  const Scalar _tmp385 = _tmp383 * _tmp98 + _tmp384 * _tmp96;
  const Scalar _tmp386 = _tmp382 * _tmp92 + _tmp385;
  const Scalar _tmp387 = _tmp103 * _tmp383 + _tmp106 * _tmp382;
  const Scalar _tmp388 = _tmp105 * _tmp384 + _tmp387;
  const Scalar _tmp389 = std::max<Scalar>(_tmp388, epsilon);
  const Scalar _tmp390 = Scalar(1.0) / (_tmp389);
  const Scalar _tmp391 = _tmp390 * _views_1_calibration[0];
  const Scalar _tmp392 =
      _tmp386 * _tmp391 + _views_1_calibration[2] - matches_0_7_target_coords(0, 0);
  const Scalar _tmp393 = _tmp382 * _tmp85 + _tmp384 * _tmp73;
  const Scalar _tmp394 = _tmp383 * _tmp81 + _tmp393;
  const Scalar _tmp395 = _tmp390 * _views_1_calibration[1];
  const Scalar _tmp396 =
      _tmp394 * _tmp395 + _views_1_calibration[3] - matches_0_7_target_coords(1, 0);
  const Scalar _tmp397 = std::pow(_tmp392, Scalar(2)) + std::pow(_tmp396, Scalar(2)) + epsilon;
  const Scalar _tmp398 = std::pow(_tmp397, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp399 = std::sqrt(matches_0_7_weight);
  const Scalar _tmp400 = std::max<Scalar>(0, (((_tmp388) > 0) - ((_tmp388) < 0)));
  const Scalar _tmp401 = _tmp185 * _tmp397 + 1;
  const Scalar _tmp402 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp401, _tmp189) - 1)));
  const Scalar _tmp403 = _tmp399 * _tmp400 * _tmp402;
  const Scalar _tmp404 = _tmp398 * _tmp403;
  const Scalar _tmp405 = _tmp392 * _tmp404;
  const Scalar _tmp406 = _tmp396 * _tmp404;
  const Scalar _tmp407 = _tmp148 + matches_0_8_source_coords(0, 0);
  const Scalar _tmp408 = _tmp145 + matches_0_8_source_coords(1, 0);
  const Scalar _tmp409 = std::pow(Scalar(_tmp147 * std::pow(_tmp408, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp407, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp410 = _tmp407 * _tmp409;
  const Scalar _tmp411 = _tmp408 * _tmp409;
  const Scalar _tmp412 =
      _tmp144 * _tmp410 + _tmp156 * _tmp411 + _tmp157 * landmarks_8_ + _tmp409 * _tmp55;
  const Scalar _tmp413 =
      _tmp159 * _tmp411 + _tmp160 * _tmp410 + _tmp161 * landmarks_8_ + _tmp409 * _tmp54;
  const Scalar _tmp414 =
      _tmp163 * _tmp410 + _tmp164 * _tmp411 + _tmp165 * landmarks_8_ + _tmp409 * _tmp56;
  const Scalar _tmp415 = _tmp413 * _tmp96 + _tmp414 * _tmp98;
  const Scalar _tmp416 = _tmp412 * _tmp92 + _tmp415;
  const Scalar _tmp417 = _tmp103 * _tmp414 + _tmp106 * _tmp412;
  const Scalar _tmp418 = _tmp105 * _tmp413 + _tmp417;
  const Scalar _tmp419 = std::max<Scalar>(_tmp418, epsilon);
  const Scalar _tmp420 = Scalar(1.0) / (_tmp419);
  const Scalar _tmp421 = _tmp420 * _views_1_calibration[0];
  const Scalar _tmp422 =
      _tmp416 * _tmp421 + _views_1_calibration[2] - matches_0_8_target_coords(0, 0);
  const Scalar _tmp423 = _tmp412 * _tmp85 + _tmp413 * _tmp73;
  const Scalar _tmp424 = _tmp414 * _tmp81 + _tmp423;
  const Scalar _tmp425 = _tmp420 * _views_1_calibration[1];
  const Scalar _tmp426 =
      _tmp424 * _tmp425 + _views_1_calibration[3] - matches_0_8_target_coords(1, 0);
  const Scalar _tmp427 = std::pow(_tmp422, Scalar(2)) + std::pow(_tmp426, Scalar(2)) + epsilon;
  const Scalar _tmp428 = std::pow(_tmp427, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp429 = std::sqrt(matches_0_8_weight);
  const Scalar _tmp430 = std::max<Scalar>(0, (((_tmp418) > 0) - ((_tmp418) < 0)));
  const Scalar _tmp431 = _tmp185 * _tmp427 + 1;
  const Scalar _tmp432 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp431, _tmp189) - 1)));
  const Scalar _tmp433 = _tmp429 * _tmp430 * _tmp432;
  const Scalar _tmp434 = _tmp428 * _tmp433;
  const Scalar _tmp435 = _tmp422 * _tmp434;
  const Scalar _tmp436 = _tmp426 * _tmp434;
  const Scalar _tmp437 = _tmp148 + matches_0_9_source_coords(0, 0);
  const Scalar _tmp438 = _tmp145 + matches_0_9_source_coords(1, 0);
  const Scalar _tmp439 = std::pow(Scalar(_tmp147 * std::pow(_tmp438, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp437, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp440 = _tmp437 * _tmp439;
  const Scalar _tmp441 = _tmp438 * _tmp439;
  const Scalar _tmp442 =
      _tmp144 * _tmp440 + _tmp156 * _tmp441 + _tmp157 * landmarks_9_ + _tmp439 * _tmp55;
  const Scalar _tmp443 =
      _tmp163 * _tmp440 + _tmp164 * _tmp441 + _tmp165 * landmarks_9_ + _tmp439 * _tmp56;
  const Scalar _tmp444 =
      _tmp159 * _tmp441 + _tmp160 * _tmp440 + _tmp161 * landmarks_9_ + _tmp439 * _tmp54;
  const Scalar _tmp445 = _tmp443 * _tmp98 + _tmp444 * _tmp96;
  const Scalar _tmp446 = _tmp442 * _tmp92 + _tmp445;
  const Scalar _tmp447 = _tmp103 * _tmp443 + _tmp106 * _tmp442;
  const Scalar _tmp448 = _tmp105 * _tmp444 + _tmp447;
  const Scalar _tmp449 = std::max<Scalar>(_tmp448, epsilon);
  const Scalar _tmp450 = Scalar(1.0) / (_tmp449);
  const Scalar _tmp451 = _tmp450 * _views_1_calibration[0];
  const Scalar _tmp452 =
      _tmp446 * _tmp451 + _views_1_calibration[2] - matches_0_9_target_coords(0, 0);
  const Scalar _tmp453 = _tmp442 * _tmp85 + _tmp444 * _tmp73;
  const Scalar _tmp454 = _tmp443 * _tmp81 + _tmp453;
  const Scalar _tmp455 = _tmp450 * _views_1_calibration[1];
  const Scalar _tmp456 =
      _tmp454 * _tmp455 + _views_1_calibration[3] - matches_0_9_target_coords(1, 0);
  const Scalar _tmp457 = std::pow(_tmp452, Scalar(2)) + std::pow(_tmp456, Scalar(2)) + epsilon;
  const Scalar _tmp458 = std::pow(_tmp457, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp459 = _tmp185 * _tmp457 + 1;
  const Scalar _tmp460 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp459, _tmp189) - 1)));
  const Scalar _tmp461 = std::sqrt(matches_0_9_weight);
  const Scalar _tmp462 = std::max<Scalar>(0, (((_tmp448) > 0) - ((_tmp448) < 0)));
  const Scalar _tmp463 = _tmp460 * _tmp461 * _tmp462;
  const Scalar _tmp464 = _tmp458 * _tmp463;
  const Scalar _tmp465 = _tmp452 * _tmp464;
  const Scalar _tmp466 = _tmp456 * _tmp464;
  const Scalar _tmp467 = _tmp148 + matches_0_10_source_coords(0, 0);
  const Scalar _tmp468 = _tmp145 + matches_0_10_source_coords(1, 0);
  const Scalar _tmp469 = std::pow(Scalar(_tmp147 * std::pow(_tmp468, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp467, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp470 = _tmp468 * _tmp469;
  const Scalar _tmp471 = _tmp467 * _tmp469;
  const Scalar _tmp472 =
      _tmp144 * _tmp471 + _tmp156 * _tmp470 + _tmp157 * landmarks_10_ + _tmp469 * _tmp55;
  const Scalar _tmp473 =
      _tmp159 * _tmp470 + _tmp160 * _tmp471 + _tmp161 * landmarks_10_ + _tmp469 * _tmp54;
  const Scalar _tmp474 =
      _tmp163 * _tmp471 + _tmp164 * _tmp470 + _tmp165 * landmarks_10_ + _tmp469 * _tmp56;
  const Scalar _tmp475 = _tmp473 * _tmp96 + _tmp474 * _tmp98;
  const Scalar _tmp476 = _tmp472 * _tmp92 + _tmp475;
  const Scalar _tmp477 = _tmp103 * _tmp474 + _tmp106 * _tmp472;
  const Scalar _tmp478 = _tmp105 * _tmp473 + _tmp477;
  const Scalar _tmp479 = std::max<Scalar>(_tmp478, epsilon);
  const Scalar _tmp480 = Scalar(1.0) / (_tmp479);
  const Scalar _tmp481 = _tmp480 * _views_1_calibration[0];
  const Scalar _tmp482 =
      _tmp476 * _tmp481 + _views_1_calibration[2] - matches_0_10_target_coords(0, 0);
  const Scalar _tmp483 = _tmp472 * _tmp85 + _tmp473 * _tmp73;
  const Scalar _tmp484 = _tmp474 * _tmp81 + _tmp483;
  const Scalar _tmp485 = _tmp480 * _views_1_calibration[1];
  const Scalar _tmp486 =
      _tmp484 * _tmp485 + _views_1_calibration[3] - matches_0_10_target_coords(1, 0);
  const Scalar _tmp487 = std::pow(_tmp482, Scalar(2)) + std::pow(_tmp486, Scalar(2)) + epsilon;
  const Scalar _tmp488 = std::pow(_tmp487, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp489 = _tmp185 * _tmp487 + 1;
  const Scalar _tmp490 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp489, _tmp189) - 1)));
  const Scalar _tmp491 = std::sqrt(matches_0_10_weight);
  const Scalar _tmp492 = std::max<Scalar>(0, (((_tmp478) > 0) - ((_tmp478) < 0)));
  const Scalar _tmp493 = _tmp490 * _tmp491 * _tmp492;
  const Scalar _tmp494 = _tmp488 * _tmp493;
  const Scalar _tmp495 = _tmp482 * _tmp494;
  const Scalar _tmp496 = _tmp486 * _tmp494;
  const Scalar _tmp497 = _tmp148 + matches_0_11_source_coords(0, 0);
  const Scalar _tmp498 = _tmp145 + matches_0_11_source_coords(1, 0);
  const Scalar _tmp499 = std::pow(Scalar(_tmp147 * std::pow(_tmp498, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp497, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp500 = _tmp498 * _tmp499;
  const Scalar _tmp501 = _tmp497 * _tmp499;
  const Scalar _tmp502 =
      _tmp144 * _tmp501 + _tmp156 * _tmp500 + _tmp157 * landmarks_11_ + _tmp499 * _tmp55;
  const Scalar _tmp503 =
      _tmp159 * _tmp500 + _tmp160 * _tmp501 + _tmp161 * landmarks_11_ + _tmp499 * _tmp54;
  const Scalar _tmp504 =
      _tmp163 * _tmp501 + _tmp164 * _tmp500 + _tmp165 * landmarks_11_ + _tmp499 * _tmp56;
  const Scalar _tmp505 = _tmp503 * _tmp96 + _tmp504 * _tmp98;
  const Scalar _tmp506 = _tmp502 * _tmp92 + _tmp505;
  const Scalar _tmp507 = _tmp103 * _tmp504 + _tmp106 * _tmp502;
  const Scalar _tmp508 = _tmp105 * _tmp503 + _tmp507;
  const Scalar _tmp509 = std::max<Scalar>(_tmp508, epsilon);
  const Scalar _tmp510 = Scalar(1.0) / (_tmp509);
  const Scalar _tmp511 = _tmp510 * _views_1_calibration[0];
  const Scalar _tmp512 =
      _tmp506 * _tmp511 + _views_1_calibration[2] - matches_0_11_target_coords(0, 0);
  const Scalar _tmp513 = _tmp502 * _tmp85 + _tmp503 * _tmp73;
  const Scalar _tmp514 = _tmp504 * _tmp81 + _tmp513;
  const Scalar _tmp515 = _tmp510 * _views_1_calibration[1];
  const Scalar _tmp516 =
      _tmp514 * _tmp515 + _views_1_calibration[3] - matches_0_11_target_coords(1, 0);
  const Scalar _tmp517 = std::pow(_tmp512, Scalar(2)) + std::pow(_tmp516, Scalar(2)) + epsilon;
  const Scalar _tmp518 = std::pow(_tmp517, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp519 = std::sqrt(matches_0_11_weight);
  const Scalar _tmp520 = _tmp185 * _tmp517 + 1;
  const Scalar _tmp521 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp520, _tmp189) - 1)));
  const Scalar _tmp522 = std::max<Scalar>(0, (((_tmp508) > 0) - ((_tmp508) < 0)));
  const Scalar _tmp523 = _tmp519 * _tmp521 * _tmp522;
  const Scalar _tmp524 = _tmp518 * _tmp523;
  const Scalar _tmp525 = _tmp512 * _tmp524;
  const Scalar _tmp526 = _tmp516 * _tmp524;
  const Scalar _tmp527 = _tmp145 + matches_0_12_source_coords(1, 0);
  const Scalar _tmp528 = _tmp148 + matches_0_12_source_coords(0, 0);
  const Scalar _tmp529 = std::pow(Scalar(_tmp147 * std::pow(_tmp527, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp528, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp530 = _tmp527 * _tmp529;
  const Scalar _tmp531 = _tmp528 * _tmp529;
  const Scalar _tmp532 =
      _tmp144 * _tmp531 + _tmp156 * _tmp530 + _tmp157 * landmarks_12_ + _tmp529 * _tmp55;
  const Scalar _tmp533 =
      _tmp163 * _tmp531 + _tmp164 * _tmp530 + _tmp165 * landmarks_12_ + _tmp529 * _tmp56;
  const Scalar _tmp534 =
      _tmp159 * _tmp530 + _tmp160 * _tmp531 + _tmp161 * landmarks_12_ + _tmp529 * _tmp54;
  const Scalar _tmp535 = _tmp533 * _tmp98 + _tmp534 * _tmp96;
  const Scalar _tmp536 = _tmp532 * _tmp92 + _tmp535;
  const Scalar _tmp537 = _tmp103 * _tmp533 + _tmp106 * _tmp532;
  const Scalar _tmp538 = _tmp105 * _tmp534 + _tmp537;
  const Scalar _tmp539 = std::max<Scalar>(_tmp538, epsilon);
  const Scalar _tmp540 = Scalar(1.0) / (_tmp539);
  const Scalar _tmp541 = _tmp540 * _views_1_calibration[0];
  const Scalar _tmp542 =
      _tmp536 * _tmp541 + _views_1_calibration[2] - matches_0_12_target_coords(0, 0);
  const Scalar _tmp543 = _tmp532 * _tmp85 + _tmp534 * _tmp73;
  const Scalar _tmp544 = _tmp533 * _tmp81 + _tmp543;
  const Scalar _tmp545 = _tmp540 * _views_1_calibration[1];
  const Scalar _tmp546 =
      _tmp544 * _tmp545 + _views_1_calibration[3] - matches_0_12_target_coords(1, 0);
  const Scalar _tmp547 = std::pow(_tmp542, Scalar(2)) + std::pow(_tmp546, Scalar(2)) + epsilon;
  const Scalar _tmp548 = std::pow(_tmp547, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp549 = std::sqrt(matches_0_12_weight);
  const Scalar _tmp550 = _tmp185 * _tmp547 + 1;
  const Scalar _tmp551 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp550, _tmp189) - 1)));
  const Scalar _tmp552 = std::max<Scalar>(0, (((_tmp538) > 0) - ((_tmp538) < 0)));
  const Scalar _tmp553 = _tmp549 * _tmp551 * _tmp552;
  const Scalar _tmp554 = _tmp548 * _tmp553;
  const Scalar _tmp555 = _tmp542 * _tmp554;
  const Scalar _tmp556 = _tmp546 * _tmp554;
  const Scalar _tmp557 = _tmp148 + matches_0_13_source_coords(0, 0);
  const Scalar _tmp558 = _tmp145 + matches_0_13_source_coords(1, 0);
  const Scalar _tmp559 = std::pow(Scalar(_tmp147 * std::pow(_tmp558, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp557, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp560 = _tmp558 * _tmp559;
  const Scalar _tmp561 = _tmp557 * _tmp559;
  const Scalar _tmp562 =
      _tmp144 * _tmp561 + _tmp156 * _tmp560 + _tmp157 * landmarks_13_ + _tmp55 * _tmp559;
  const Scalar _tmp563 =
      _tmp163 * _tmp561 + _tmp164 * _tmp560 + _tmp165 * landmarks_13_ + _tmp559 * _tmp56;
  const Scalar _tmp564 =
      _tmp159 * _tmp560 + _tmp160 * _tmp561 + _tmp161 * landmarks_13_ + _tmp54 * _tmp559;
  const Scalar _tmp565 = _tmp563 * _tmp98 + _tmp564 * _tmp96;
  const Scalar _tmp566 = _tmp562 * _tmp92 + _tmp565;
  const Scalar _tmp567 = _tmp103 * _tmp563 + _tmp106 * _tmp562;
  const Scalar _tmp568 = _tmp105 * _tmp564 + _tmp567;
  const Scalar _tmp569 = std::max<Scalar>(_tmp568, epsilon);
  const Scalar _tmp570 = Scalar(1.0) / (_tmp569);
  const Scalar _tmp571 = _tmp570 * _views_1_calibration[0];
  const Scalar _tmp572 =
      _tmp566 * _tmp571 + _views_1_calibration[2] - matches_0_13_target_coords(0, 0);
  const Scalar _tmp573 = _tmp562 * _tmp85 + _tmp564 * _tmp73;
  const Scalar _tmp574 = _tmp563 * _tmp81 + _tmp573;
  const Scalar _tmp575 = _tmp570 * _views_1_calibration[1];
  const Scalar _tmp576 =
      _tmp574 * _tmp575 + _views_1_calibration[3] - matches_0_13_target_coords(1, 0);
  const Scalar _tmp577 = std::pow(_tmp572, Scalar(2)) + std::pow(_tmp576, Scalar(2)) + epsilon;
  const Scalar _tmp578 = std::pow(_tmp577, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp579 = std::max<Scalar>(0, (((_tmp568) > 0) - ((_tmp568) < 0)));
  const Scalar _tmp580 = std::sqrt(matches_0_13_weight);
  const Scalar _tmp581 = _tmp185 * _tmp577 + 1;
  const Scalar _tmp582 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp581, _tmp189) - 1)));
  const Scalar _tmp583 = _tmp579 * _tmp580 * _tmp582;
  const Scalar _tmp584 = _tmp578 * _tmp583;
  const Scalar _tmp585 = _tmp572 * _tmp584;
  const Scalar _tmp586 = _tmp576 * _tmp584;
  const Scalar _tmp587 = _tmp148 + matches_0_14_source_coords(0, 0);
  const Scalar _tmp588 = _tmp145 + matches_0_14_source_coords(1, 0);
  const Scalar _tmp589 = std::pow(Scalar(_tmp147 * std::pow(_tmp588, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp587, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp590 = _tmp588 * _tmp589;
  const Scalar _tmp591 = _tmp587 * _tmp589;
  const Scalar _tmp592 =
      _tmp144 * _tmp591 + _tmp156 * _tmp590 + _tmp157 * landmarks_14_ + _tmp55 * _tmp589;
  const Scalar _tmp593 =
      _tmp163 * _tmp591 + _tmp164 * _tmp590 + _tmp165 * landmarks_14_ + _tmp56 * _tmp589;
  const Scalar _tmp594 =
      _tmp159 * _tmp590 + _tmp160 * _tmp591 + _tmp161 * landmarks_14_ + _tmp54 * _tmp589;
  const Scalar _tmp595 = _tmp593 * _tmp98 + _tmp594 * _tmp96;
  const Scalar _tmp596 = _tmp592 * _tmp92 + _tmp595;
  const Scalar _tmp597 = _tmp103 * _tmp593 + _tmp106 * _tmp592;
  const Scalar _tmp598 = _tmp105 * _tmp594 + _tmp597;
  const Scalar _tmp599 = std::max<Scalar>(_tmp598, epsilon);
  const Scalar _tmp600 = Scalar(1.0) / (_tmp599);
  const Scalar _tmp601 = _tmp600 * _views_1_calibration[0];
  const Scalar _tmp602 =
      _tmp596 * _tmp601 + _views_1_calibration[2] - matches_0_14_target_coords(0, 0);
  const Scalar _tmp603 = _tmp592 * _tmp85 + _tmp594 * _tmp73;
  const Scalar _tmp604 = _tmp593 * _tmp81 + _tmp603;
  const Scalar _tmp605 = _tmp600 * _views_1_calibration[1];
  const Scalar _tmp606 =
      _tmp604 * _tmp605 + _views_1_calibration[3] - matches_0_14_target_coords(1, 0);
  const Scalar _tmp607 = std::pow(_tmp602, Scalar(2)) + std::pow(_tmp606, Scalar(2)) + epsilon;
  const Scalar _tmp608 = std::pow(_tmp607, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp609 = std::max<Scalar>(0, (((_tmp598) > 0) - ((_tmp598) < 0)));
  const Scalar _tmp610 = std::sqrt(matches_0_14_weight);
  const Scalar _tmp611 = _tmp185 * _tmp607 + 1;
  const Scalar _tmp612 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp611, _tmp189) - 1)));
  const Scalar _tmp613 = _tmp609 * _tmp610 * _tmp612;
  const Scalar _tmp614 = _tmp608 * _tmp613;
  const Scalar _tmp615 = _tmp602 * _tmp614;
  const Scalar _tmp616 = _tmp606 * _tmp614;
  const Scalar _tmp617 = _tmp145 + matches_0_15_source_coords(1, 0);
  const Scalar _tmp618 = _tmp148 + matches_0_15_source_coords(0, 0);
  const Scalar _tmp619 = std::pow(Scalar(_tmp147 * std::pow(_tmp617, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp618, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp620 = _tmp617 * _tmp619;
  const Scalar _tmp621 = _tmp618 * _tmp619;
  const Scalar _tmp622 =
      _tmp144 * _tmp621 + _tmp156 * _tmp620 + _tmp157 * landmarks_15_ + _tmp55 * _tmp619;
  const Scalar _tmp623 =
      _tmp163 * _tmp621 + _tmp164 * _tmp620 + _tmp165 * landmarks_15_ + _tmp56 * _tmp619;
  const Scalar _tmp624 =
      _tmp159 * _tmp620 + _tmp160 * _tmp621 + _tmp161 * landmarks_15_ + _tmp54 * _tmp619;
  const Scalar _tmp625 = _tmp623 * _tmp98 + _tmp624 * _tmp96;
  const Scalar _tmp626 = _tmp622 * _tmp92 + _tmp625;
  const Scalar _tmp627 = _tmp103 * _tmp623 + _tmp106 * _tmp622;
  const Scalar _tmp628 = _tmp105 * _tmp624 + _tmp627;
  const Scalar _tmp629 = std::max<Scalar>(_tmp628, epsilon);
  const Scalar _tmp630 = Scalar(1.0) / (_tmp629);
  const Scalar _tmp631 = _tmp630 * _views_1_calibration[0];
  const Scalar _tmp632 =
      _tmp626 * _tmp631 + _views_1_calibration[2] - matches_0_15_target_coords(0, 0);
  const Scalar _tmp633 = _tmp622 * _tmp85 + _tmp624 * _tmp73;
  const Scalar _tmp634 = _tmp623 * _tmp81 + _tmp633;
  const Scalar _tmp635 = _tmp630 * _views_1_calibration[1];
  const Scalar _tmp636 =
      _tmp634 * _tmp635 + _views_1_calibration[3] - matches_0_15_target_coords(1, 0);
  const Scalar _tmp637 = std::pow(_tmp632, Scalar(2)) + std::pow(_tmp636, Scalar(2)) + epsilon;
  const Scalar _tmp638 = std::pow(_tmp637, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp639 = _tmp185 * _tmp637 + 1;
  const Scalar _tmp640 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp639, _tmp189) - 1)));
  const Scalar _tmp641 = std::sqrt(matches_0_15_weight);
  const Scalar _tmp642 = std::max<Scalar>(0, (((_tmp628) > 0) - ((_tmp628) < 0)));
  const Scalar _tmp643 = _tmp640 * _tmp641 * _tmp642;
  const Scalar _tmp644 = _tmp638 * _tmp643;
  const Scalar _tmp645 = _tmp632 * _tmp644;
  const Scalar _tmp646 = _tmp636 * _tmp644;
  const Scalar _tmp647 = _tmp148 + matches_0_16_source_coords(0, 0);
  const Scalar _tmp648 = _tmp145 + matches_0_16_source_coords(1, 0);
  const Scalar _tmp649 = std::pow(Scalar(_tmp147 * std::pow(_tmp648, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp647, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp650 = _tmp648 * _tmp649;
  const Scalar _tmp651 = _tmp647 * _tmp649;
  const Scalar _tmp652 =
      _tmp144 * _tmp651 + _tmp156 * _tmp650 + _tmp157 * landmarks_16_ + _tmp55 * _tmp649;
  const Scalar _tmp653 =
      _tmp163 * _tmp651 + _tmp164 * _tmp650 + _tmp165 * landmarks_16_ + _tmp56 * _tmp649;
  const Scalar _tmp654 =
      _tmp159 * _tmp650 + _tmp160 * _tmp651 + _tmp161 * landmarks_16_ + _tmp54 * _tmp649;
  const Scalar _tmp655 = _tmp653 * _tmp98 + _tmp654 * _tmp96;
  const Scalar _tmp656 = _tmp652 * _tmp92 + _tmp655;
  const Scalar _tmp657 = _tmp103 * _tmp653 + _tmp106 * _tmp652;
  const Scalar _tmp658 = _tmp105 * _tmp654 + _tmp657;
  const Scalar _tmp659 = std::max<Scalar>(_tmp658, epsilon);
  const Scalar _tmp660 = Scalar(1.0) / (_tmp659);
  const Scalar _tmp661 = _tmp660 * _views_1_calibration[0];
  const Scalar _tmp662 =
      _tmp656 * _tmp661 + _views_1_calibration[2] - matches_0_16_target_coords(0, 0);
  const Scalar _tmp663 = _tmp652 * _tmp85 + _tmp654 * _tmp73;
  const Scalar _tmp664 = _tmp653 * _tmp81 + _tmp663;
  const Scalar _tmp665 = _tmp660 * _views_1_calibration[1];
  const Scalar _tmp666 =
      _tmp664 * _tmp665 + _views_1_calibration[3] - matches_0_16_target_coords(1, 0);
  const Scalar _tmp667 = std::pow(_tmp662, Scalar(2)) + std::pow(_tmp666, Scalar(2)) + epsilon;
  const Scalar _tmp668 = std::pow(_tmp667, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp669 = std::max<Scalar>(0, (((_tmp658) > 0) - ((_tmp658) < 0)));
  const Scalar _tmp670 = std::sqrt(matches_0_16_weight);
  const Scalar _tmp671 = _tmp185 * _tmp667 + 1;
  const Scalar _tmp672 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp671, _tmp189) - 1)));
  const Scalar _tmp673 = _tmp669 * _tmp670 * _tmp672;
  const Scalar _tmp674 = _tmp668 * _tmp673;
  const Scalar _tmp675 = _tmp662 * _tmp674;
  const Scalar _tmp676 = _tmp666 * _tmp674;
  const Scalar _tmp677 = _tmp148 + matches_0_17_source_coords(0, 0);
  const Scalar _tmp678 = _tmp145 + matches_0_17_source_coords(1, 0);
  const Scalar _tmp679 = std::pow(Scalar(_tmp147 * std::pow(_tmp678, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp677, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp680 = _tmp678 * _tmp679;
  const Scalar _tmp681 = _tmp677 * _tmp679;
  const Scalar _tmp682 =
      _tmp144 * _tmp681 + _tmp156 * _tmp680 + _tmp157 * landmarks_17_ + _tmp55 * _tmp679;
  const Scalar _tmp683 =
      _tmp163 * _tmp681 + _tmp164 * _tmp680 + _tmp165 * landmarks_17_ + _tmp56 * _tmp679;
  const Scalar _tmp684 =
      _tmp159 * _tmp680 + _tmp160 * _tmp681 + _tmp161 * landmarks_17_ + _tmp54 * _tmp679;
  const Scalar _tmp685 = _tmp683 * _tmp98 + _tmp684 * _tmp96;
  const Scalar _tmp686 = _tmp682 * _tmp92 + _tmp685;
  const Scalar _tmp687 = _tmp103 * _tmp683 + _tmp106 * _tmp682;
  const Scalar _tmp688 = _tmp105 * _tmp684 + _tmp687;
  const Scalar _tmp689 = std::max<Scalar>(_tmp688, epsilon);
  const Scalar _tmp690 = Scalar(1.0) / (_tmp689);
  const Scalar _tmp691 = _tmp690 * _views_1_calibration[0];
  const Scalar _tmp692 =
      _tmp686 * _tmp691 + _views_1_calibration[2] - matches_0_17_target_coords(0, 0);
  const Scalar _tmp693 = _tmp682 * _tmp85 + _tmp684 * _tmp73;
  const Scalar _tmp694 = _tmp683 * _tmp81 + _tmp693;
  const Scalar _tmp695 = _tmp690 * _views_1_calibration[1];
  const Scalar _tmp696 =
      _tmp694 * _tmp695 + _views_1_calibration[3] - matches_0_17_target_coords(1, 0);
  const Scalar _tmp697 = std::pow(_tmp692, Scalar(2)) + std::pow(_tmp696, Scalar(2)) + epsilon;
  const Scalar _tmp698 = std::pow(_tmp697, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp699 = std::max<Scalar>(0, (((_tmp688) > 0) - ((_tmp688) < 0)));
  const Scalar _tmp700 = std::sqrt(matches_0_17_weight);
  const Scalar _tmp701 = _tmp185 * _tmp697 + 1;
  const Scalar _tmp702 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp701, _tmp189) - 1)));
  const Scalar _tmp703 = _tmp699 * _tmp700 * _tmp702;
  const Scalar _tmp704 = _tmp698 * _tmp703;
  const Scalar _tmp705 = _tmp692 * _tmp704;
  const Scalar _tmp706 = _tmp696 * _tmp704;
  const Scalar _tmp707 = _tmp145 + matches_0_18_source_coords(1, 0);
  const Scalar _tmp708 = _tmp148 + matches_0_18_source_coords(0, 0);
  const Scalar _tmp709 = std::pow(Scalar(_tmp147 * std::pow(_tmp707, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp708, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp710 = _tmp707 * _tmp709;
  const Scalar _tmp711 = _tmp708 * _tmp709;
  const Scalar _tmp712 =
      _tmp144 * _tmp711 + _tmp156 * _tmp710 + _tmp157 * landmarks_18_ + _tmp55 * _tmp709;
  const Scalar _tmp713 =
      _tmp159 * _tmp710 + _tmp160 * _tmp711 + _tmp161 * landmarks_18_ + _tmp54 * _tmp709;
  const Scalar _tmp714 =
      _tmp163 * _tmp711 + _tmp164 * _tmp710 + _tmp165 * landmarks_18_ + _tmp56 * _tmp709;
  const Scalar _tmp715 = _tmp713 * _tmp96 + _tmp714 * _tmp98;
  const Scalar _tmp716 = _tmp712 * _tmp92 + _tmp715;
  const Scalar _tmp717 = _tmp103 * _tmp714 + _tmp106 * _tmp712;
  const Scalar _tmp718 = _tmp105 * _tmp713 + _tmp717;
  const Scalar _tmp719 = std::max<Scalar>(_tmp718, epsilon);
  const Scalar _tmp720 = Scalar(1.0) / (_tmp719);
  const Scalar _tmp721 = _tmp720 * _views_1_calibration[0];
  const Scalar _tmp722 =
      _tmp716 * _tmp721 + _views_1_calibration[2] - matches_0_18_target_coords(0, 0);
  const Scalar _tmp723 = _tmp712 * _tmp85 + _tmp713 * _tmp73;
  const Scalar _tmp724 = _tmp714 * _tmp81 + _tmp723;
  const Scalar _tmp725 = _tmp720 * _views_1_calibration[1];
  const Scalar _tmp726 =
      _tmp724 * _tmp725 + _views_1_calibration[3] - matches_0_18_target_coords(1, 0);
  const Scalar _tmp727 = std::pow(_tmp722, Scalar(2)) + std::pow(_tmp726, Scalar(2)) + epsilon;
  const Scalar _tmp728 = std::pow(_tmp727, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp729 = _tmp185 * _tmp727 + 1;
  const Scalar _tmp730 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp729, _tmp189) - 1)));
  const Scalar _tmp731 = std::sqrt(matches_0_18_weight);
  const Scalar _tmp732 = std::max<Scalar>(0, (((_tmp718) > 0) - ((_tmp718) < 0)));
  const Scalar _tmp733 = _tmp730 * _tmp731 * _tmp732;
  const Scalar _tmp734 = _tmp728 * _tmp733;
  const Scalar _tmp735 = _tmp722 * _tmp734;
  const Scalar _tmp736 = _tmp726 * _tmp734;
  const Scalar _tmp737 = _tmp148 + matches_0_19_source_coords(0, 0);
  const Scalar _tmp738 = _tmp145 + matches_0_19_source_coords(1, 0);
  const Scalar _tmp739 = std::pow(Scalar(_tmp147 * std::pow(_tmp738, Scalar(2)) +
                                         _tmp150 * std::pow(_tmp737, Scalar(2)) + _tmp151),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp740 = _tmp738 * _tmp739;
  const Scalar _tmp741 = _tmp737 * _tmp739;
  const Scalar _tmp742 =
      _tmp144 * _tmp741 + _tmp156 * _tmp740 + _tmp157 * landmarks_19_ + _tmp55 * _tmp739;
  const Scalar _tmp743 =
      _tmp163 * _tmp741 + _tmp164 * _tmp740 + _tmp165 * landmarks_19_ + _tmp56 * _tmp739;
  const Scalar _tmp744 =
      _tmp159 * _tmp740 + _tmp160 * _tmp741 + _tmp161 * landmarks_19_ + _tmp54 * _tmp739;
  const Scalar _tmp745 = _tmp743 * _tmp98 + _tmp744 * _tmp96;
  const Scalar _tmp746 = _tmp742 * _tmp92 + _tmp745;
  const Scalar _tmp747 = _tmp103 * _tmp743 + _tmp106 * _tmp742;
  const Scalar _tmp748 = _tmp105 * _tmp744 + _tmp747;
  const Scalar _tmp749 = std::max<Scalar>(_tmp748, epsilon);
  const Scalar _tmp750 = Scalar(1.0) / (_tmp749);
  const Scalar _tmp751 = _tmp750 * _views_1_calibration[0];
  const Scalar _tmp752 =
      _tmp746 * _tmp751 + _views_1_calibration[2] - matches_0_19_target_coords(0, 0);
  const Scalar _tmp753 = _tmp73 * _tmp744 + _tmp742 * _tmp85;
  const Scalar _tmp754 = _tmp743 * _tmp81 + _tmp753;
  const Scalar _tmp755 = _tmp750 * _views_1_calibration[1];
  const Scalar _tmp756 =
      _tmp754 * _tmp755 + _views_1_calibration[3] - matches_0_19_target_coords(1, 0);
  const Scalar _tmp757 = std::pow(_tmp752, Scalar(2)) + std::pow(_tmp756, Scalar(2)) + epsilon;
  const Scalar _tmp758 = std::pow(_tmp757, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp759 = std::max<Scalar>(0, (((_tmp748) > 0) - ((_tmp748) < 0)));
  const Scalar _tmp760 = std::sqrt(matches_0_19_weight);
  const Scalar _tmp761 = _tmp185 * _tmp757 + 1;
  const Scalar _tmp762 = std::sqrt(Scalar(_tmp190 * (std::pow(_tmp761, _tmp189) - 1)));
  const Scalar _tmp763 = _tmp759 * _tmp760 * _tmp762;
  const Scalar _tmp764 = _tmp758 * _tmp763;
  const Scalar _tmp765 = _tmp752 * _tmp764;
  const Scalar _tmp766 = _tmp756 * _tmp764;
  const Scalar _tmp767 = landmarks_0_ - matches_0_0_inverse_range_prior;
  const Scalar _tmp768 = epsilon + matches_0_0_inverse_range_prior_sigma;
  const Scalar _tmp769 = matches_0_0_weight / _tmp768;
  const Scalar _tmp770 = landmarks_1_ - matches_0_1_inverse_range_prior;
  const Scalar _tmp771 = epsilon + matches_0_1_inverse_range_prior_sigma;
  const Scalar _tmp772 = matches_0_1_weight / _tmp771;
  const Scalar _tmp773 = landmarks_2_ - matches_0_2_inverse_range_prior;
  const Scalar _tmp774 = epsilon + matches_0_2_inverse_range_prior_sigma;
  const Scalar _tmp775 = matches_0_2_weight / _tmp774;
  const Scalar _tmp776 = landmarks_3_ - matches_0_3_inverse_range_prior;
  const Scalar _tmp777 = epsilon + matches_0_3_inverse_range_prior_sigma;
  const Scalar _tmp778 = matches_0_3_weight / _tmp777;
  const Scalar _tmp779 = landmarks_4_ - matches_0_4_inverse_range_prior;
  const Scalar _tmp780 = epsilon + matches_0_4_inverse_range_prior_sigma;
  const Scalar _tmp781 = matches_0_4_weight / _tmp780;
  const Scalar _tmp782 = landmarks_5_ - matches_0_5_inverse_range_prior;
  const Scalar _tmp783 = epsilon + matches_0_5_inverse_range_prior_sigma;
  const Scalar _tmp784 = matches_0_5_weight / _tmp783;
  const Scalar _tmp785 = landmarks_6_ - matches_0_6_inverse_range_prior;
  const Scalar _tmp786 = epsilon + matches_0_6_inverse_range_prior_sigma;
  const Scalar _tmp787 = matches_0_6_weight / _tmp786;
  const Scalar _tmp788 = landmarks_7_ - matches_0_7_inverse_range_prior;
  const Scalar _tmp789 = epsilon + matches_0_7_inverse_range_prior_sigma;
  const Scalar _tmp790 = matches_0_7_weight / _tmp789;
  const Scalar _tmp791 = landmarks_8_ - matches_0_8_inverse_range_prior;
  const Scalar _tmp792 = epsilon + matches_0_8_inverse_range_prior_sigma;
  const Scalar _tmp793 = matches_0_8_weight / _tmp792;
  const Scalar _tmp794 = landmarks_9_ - matches_0_9_inverse_range_prior;
  const Scalar _tmp795 = epsilon + matches_0_9_inverse_range_prior_sigma;
  const Scalar _tmp796 = matches_0_9_weight / _tmp795;
  const Scalar _tmp797 = landmarks_10_ - matches_0_10_inverse_range_prior;
  const Scalar _tmp798 = epsilon + matches_0_10_inverse_range_prior_sigma;
  const Scalar _tmp799 = matches_0_10_weight / _tmp798;
  const Scalar _tmp800 = landmarks_11_ - matches_0_11_inverse_range_prior;
  const Scalar _tmp801 = epsilon + matches_0_11_inverse_range_prior_sigma;
  const Scalar _tmp802 = matches_0_11_weight / _tmp801;
  const Scalar _tmp803 = landmarks_12_ - matches_0_12_inverse_range_prior;
  const Scalar _tmp804 = epsilon + matches_0_12_inverse_range_prior_sigma;
  const Scalar _tmp805 = matches_0_12_weight / _tmp804;
  const Scalar _tmp806 = landmarks_13_ - matches_0_13_inverse_range_prior;
  const Scalar _tmp807 = epsilon + matches_0_13_inverse_range_prior_sigma;
  const Scalar _tmp808 = matches_0_13_weight / _tmp807;
  const Scalar _tmp809 = landmarks_14_ - matches_0_14_inverse_range_prior;
  const Scalar _tmp810 = epsilon + matches_0_14_inverse_range_prior_sigma;
  const Scalar _tmp811 = matches_0_14_weight / _tmp810;
  const Scalar _tmp812 = landmarks_15_ - matches_0_15_inverse_range_prior;
  const Scalar _tmp813 = epsilon + matches_0_15_inverse_range_prior_sigma;
  const Scalar _tmp814 = matches_0_15_weight / _tmp813;
  const Scalar _tmp815 = landmarks_16_ - matches_0_16_inverse_range_prior;
  const Scalar _tmp816 = epsilon + matches_0_16_inverse_range_prior_sigma;
  const Scalar _tmp817 = matches_0_16_weight / _tmp816;
  const Scalar _tmp818 = landmarks_17_ - matches_0_17_inverse_range_prior;
  const Scalar _tmp819 = epsilon + matches_0_17_inverse_range_prior_sigma;
  const Scalar _tmp820 = matches_0_17_weight / _tmp819;
  const Scalar _tmp821 = landmarks_18_ - matches_0_18_inverse_range_prior;
  const Scalar _tmp822 = epsilon + matches_0_18_inverse_range_prior_sigma;
  const Scalar _tmp823 = matches_0_18_weight / _tmp822;
  const Scalar _tmp824 = landmarks_19_ - matches_0_19_inverse_range_prior;
  const Scalar _tmp825 = epsilon + matches_0_19_inverse_range_prior_sigma;
  const Scalar _tmp826 = matches_0_19_weight / _tmp825;
  const Scalar _tmp827 = -_tmp72;
  const Scalar _tmp828 = _tmp102 + _tmp827;
  const Scalar _tmp829 = -_tmp89;
  const Scalar _tmp830 = _tmp78 + _tmp829;
  const Scalar _tmp831 = std::pow(_views_1_pose[3], Scalar(2));
  const Scalar _tmp832 = -_tmp831;
  const Scalar _tmp833 = _tmp75 + _tmp832;
  const Scalar _tmp834 = _tmp830 + _tmp833;
  const Scalar _tmp835 = -_tmp82;
  const Scalar _tmp836 = _tmp83 + _tmp835;
  const Scalar _tmp837 = _tmp828 * _views_0_pose[6] - _tmp828 * _views_1_pose[6] +
                         _tmp834 * _views_0_pose[5] - _tmp834 * _views_1_pose[5] +
                         _tmp836 * _views_0_pose[4] - _tmp836 * _views_1_pose[4];
  const Scalar _tmp838 = _tmp125 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp839 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp840 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp841 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp842 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp843 = -_tmp839 - _tmp840 - _tmp841 - _tmp842;
  const Scalar _tmp844 = _priors_1_0_target_T_src[0] * _tmp843;
  const Scalar _tmp845 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp846 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp847 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp848 = (Scalar(1) / Scalar(2)) * _tmp32;
  const Scalar _tmp849 = -_tmp845 - _tmp846 + _tmp847 + _tmp848;
  const Scalar _tmp850 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp851 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp852 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp853 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp854 = _tmp850 - _tmp851 + _tmp852 - _tmp853;
  const Scalar _tmp855 = _priors_1_0_target_T_src[3] * _tmp854;
  const Scalar _tmp856 = (Scalar(1) / Scalar(2)) * _tmp34;
  const Scalar _tmp857 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp858 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp859 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp860 = _tmp856 - _tmp857 - _tmp858 + _tmp859;
  const Scalar _tmp861 = _priors_1_0_target_T_src[1] * _tmp860;
  const Scalar _tmp862 = _priors_1_0_target_T_src[2] * _tmp849 + _tmp844 + _tmp855 + _tmp861;
  const Scalar _tmp863 = _tmp110 + _tmp112 + _tmp114 + _tmp116;
  const Scalar _tmp864 = std::fabs(_tmp863);
  const Scalar _tmp865 = std::min<Scalar>(_tmp45, _tmp864);
  const Scalar _tmp866 = std::acos(_tmp865);
  const Scalar _tmp867 = 1 - std::pow(_tmp865, Scalar(2));
  const Scalar _tmp868 = _tmp118 * ((((_tmp45 - _tmp864) > 0) - ((_tmp45 - _tmp864) < 0)) + 1) *
                         (((_tmp863) > 0) - ((_tmp863) < 0));
  const Scalar _tmp869 = _tmp865 * _tmp866 * _tmp868 / (_tmp867 * std::sqrt(_tmp867));
  const Scalar _tmp870 = _tmp862 * _tmp869;
  const Scalar _tmp871 = _tmp120 * _tmp869;
  const Scalar _tmp872 = _tmp862 * _tmp871;
  const Scalar _tmp873 = _tmp128 * _tmp869;
  const Scalar _tmp874 = _tmp862 * _tmp873;
  const Scalar _tmp875 = _priors_1_0_target_T_src[3] * _tmp843;
  const Scalar _tmp876 = _priors_1_0_target_T_src[0] * _tmp854;
  const Scalar _tmp877 = _priors_1_0_target_T_src[2] * _tmp860;
  const Scalar _tmp878 = _tmp866 / std::sqrt(_tmp867);
  const Scalar _tmp879 = _tmp119 * _tmp878;
  const Scalar _tmp880 =
      _tmp879 * (-_priors_1_0_target_T_src[1] * _tmp849 + _tmp875 - _tmp876 + _tmp877);
  const Scalar _tmp881 = _priors_1_0_target_T_src[1] * _tmp843;
  const Scalar _tmp882 = _priors_1_0_target_T_src[2] * _tmp854;
  const Scalar _tmp883 = -_priors_1_0_target_T_src[0] * _tmp860;
  const Scalar _tmp884 = _priors_1_0_target_T_src[3] * _tmp849 + _tmp881 - _tmp882 + _tmp883;
  const Scalar _tmp885 = _tmp879 * _tmp884;
  const Scalar _tmp886 = -_tmp75;
  const Scalar _tmp887 = _tmp831 + _tmp886;
  const Scalar _tmp888 = _tmp830 + _tmp887;
  const Scalar _tmp889 =
      -_tmp104 - _tmp107 + _tmp108 + _tmp888 * _views_0_pose[6] - _tmp888 * _views_1_pose[6];
  const Scalar _tmp890 = _tmp868 / _tmp867;
  const Scalar _tmp891 = _tmp862 * _tmp890;
  const Scalar _tmp892 = _tmp125 * _tmp891;
  const Scalar _tmp893 = _tmp120 * _tmp891;
  const Scalar _tmp894 = _tmp128 * _tmp891;
  const Scalar _tmp895 = _priors_1_0_target_T_src[2] * _tmp843;
  const Scalar _tmp896 = -_priors_1_0_target_T_src[1] * _tmp854;
  const Scalar _tmp897 = _priors_1_0_target_T_src[3] * _tmp860;
  const Scalar _tmp898 = _priors_1_0_target_T_src[0] * _tmp849 - _tmp895 + _tmp896 + _tmp897;
  const Scalar _tmp899 = _tmp879 * _tmp898;
  const Scalar _tmp900 =
      _tmp837 * priors_1_0_sqrt_info(0, 5) + _tmp838 * _tmp870 +
      _tmp872 * priors_1_0_sqrt_info(0, 1) + _tmp874 * priors_1_0_sqrt_info(0, 2) +
      _tmp880 * priors_1_0_sqrt_info(0, 0) + _tmp885 * priors_1_0_sqrt_info(0, 2) +
      _tmp889 * priors_1_0_sqrt_info(0, 4) - _tmp892 * priors_1_0_sqrt_info(0, 0) -
      _tmp893 * priors_1_0_sqrt_info(0, 1) - _tmp894 * priors_1_0_sqrt_info(0, 2) +
      _tmp899 * priors_1_0_sqrt_info(0, 1);
  const Scalar _tmp901 = _tmp352 * _tmp836 + _tmp353 * _tmp828 + _tmp354 * _tmp834;
  const Scalar _tmp902 = (Scalar(1) / Scalar(2)) * _views_1_calibration[0];
  const Scalar _tmp903 =
      ((((_tmp358 + _tmp44) > 0) - ((_tmp358 + _tmp44) < 0)) + 1) / std::pow(_tmp359, Scalar(2));
  const Scalar _tmp904 = _tmp356 * _tmp903;
  const Scalar _tmp905 = _tmp902 * _tmp904;
  const Scalar _tmp906 = (Scalar(1) / Scalar(2)) * _views_1_calibration[1];
  const Scalar _tmp907 = _tmp364 * _tmp903;
  const Scalar _tmp908 = _tmp906 * _tmp907;
  const Scalar _tmp909 = _tmp365 * (_tmp353 * _tmp888 + _tmp357) - _tmp901 * _tmp908;
  const Scalar _tmp910 = 2 * _tmp366;
  const Scalar _tmp911 = -_tmp362 * _tmp901 * _tmp904 * _views_1_calibration[0] + _tmp909 * _tmp910;
  const Scalar _tmp912 = (Scalar(1) / Scalar(2)) * _tmp182;
  const Scalar _tmp913 = _tmp189 - 1;
  const Scalar _tmp914 = _tmp368 * std::pow(_tmp369, _tmp913) * _tmp371 * _tmp372 / _tmp370;
  const Scalar _tmp915 = _tmp912 * _tmp914;
  const Scalar _tmp916 = _tmp362 * _tmp915;
  const Scalar _tmp917 = _tmp373 / (_tmp367 * std::sqrt(_tmp367));
  const Scalar _tmp918 = (Scalar(1) / Scalar(2)) * _tmp917;
  const Scalar _tmp919 = _tmp362 * _tmp918;
  const Scalar _tmp920 = -_tmp374 * _tmp901 * _tmp905 + _tmp911 * _tmp916 - _tmp911 * _tmp919;
  const Scalar _tmp921 = _tmp839 + _tmp840 + _tmp841 + _tmp842;
  const Scalar _tmp922 = _priors_0_1_target_T_src[2] * _tmp921;
  const Scalar _tmp923 = _tmp845 + _tmp846 - _tmp847 - _tmp848;
  const Scalar _tmp924 = _priors_0_1_target_T_src[0] * _tmp923;
  const Scalar _tmp925 = _priors_0_1_target_T_src[1] * _tmp854;
  const Scalar _tmp926 = -_tmp856 + _tmp857 + _tmp858 - _tmp859;
  const Scalar _tmp927 = _priors_0_1_target_T_src[3] * _tmp926 - _tmp922 + _tmp924 - _tmp925;
  const Scalar _tmp928 = _tmp50 * _tmp927;
  const Scalar _tmp929 = -_priors_0_1_target_T_src[1] * _tmp923;
  const Scalar _tmp930 = _priors_0_1_target_T_src[3] * _tmp921;
  const Scalar _tmp931 = -_priors_0_1_target_T_src[0] * _tmp854 + _tmp930;
  const Scalar _tmp932 = _tmp50 * (_priors_0_1_target_T_src[2] * _tmp926 + _tmp929 + _tmp931);
  const Scalar _tmp933 = _priors_0_1_target_T_src[2] * _tmp923;
  const Scalar _tmp934 = _priors_0_1_target_T_src[0] * _tmp921;
  const Scalar _tmp935 = _priors_0_1_target_T_src[3] * _tmp854 + _tmp934;
  const Scalar _tmp936 = _priors_0_1_target_T_src[1] * _tmp926 + _tmp933 + _tmp935;
  const Scalar _tmp937 = _tmp41 * ((((-_tmp43 + _tmp45) > 0) - ((-_tmp43 + _tmp45) < 0)) + 1);
  const Scalar _tmp938 = _tmp46 * _tmp48 * _tmp937 / (_tmp47 * std::sqrt(_tmp47));
  const Scalar _tmp939 = _tmp936 * _tmp938;
  const Scalar _tmp940 = _tmp39 * _tmp42;
  const Scalar _tmp941 = _tmp939 * _tmp940;
  const Scalar _tmp942 = _tmp937 / _tmp47;
  const Scalar _tmp943 = _tmp42 * _tmp942;
  const Scalar _tmp944 = _tmp52 * _tmp943;
  const Scalar _tmp945 = _tmp936 * _tmp944;
  const Scalar _tmp946 = _tmp58 * _tmp942;
  const Scalar _tmp947 = _tmp936 * _tmp946;
  const Scalar _tmp948 = _tmp58 * _tmp939;
  const Scalar _tmp949 = _priors_0_1_target_T_src[2] * _tmp854;
  const Scalar _tmp950 = _priors_0_1_target_T_src[1] * _tmp921;
  const Scalar _tmp951 = _priors_0_1_target_T_src[3] * _tmp923 + _tmp950;
  const Scalar _tmp952 = -_priors_0_1_target_T_src[0] * _tmp926 - _tmp949 + _tmp951;
  const Scalar _tmp953 = _tmp50 * _tmp952;
  const Scalar _tmp954 = _tmp42 * _tmp52;
  const Scalar _tmp955 = _tmp939 * _tmp954;
  const Scalar _tmp956 = _tmp39 * _tmp943;
  const Scalar _tmp957 = _tmp936 * _tmp956;
  const Scalar _tmp958 =
      _tmp928 * priors_0_1_sqrt_info(3, 1) + _tmp932 * priors_0_1_sqrt_info(3, 0) +
      _tmp941 * priors_0_1_sqrt_info(3, 1) - _tmp945 * priors_0_1_sqrt_info(3, 0) -
      _tmp947 * priors_0_1_sqrt_info(3, 2) + _tmp948 * priors_0_1_sqrt_info(3, 2) +
      _tmp953 * priors_0_1_sqrt_info(3, 2) + _tmp955 * priors_0_1_sqrt_info(3, 0) -
      _tmp957 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp959 = _tmp232 * _tmp836 + _tmp233 * _tmp828 + _tmp234 * _tmp834;
  const Scalar _tmp960 =
      ((((_tmp238 + _tmp44) > 0) - ((_tmp238 + _tmp44) < 0)) + 1) / std::pow(_tmp239, Scalar(2));
  const Scalar _tmp961 = _tmp244 * _tmp960;
  const Scalar _tmp962 = _tmp906 * _tmp961;
  const Scalar _tmp963 = _tmp245 * (_tmp233 * _tmp888 + _tmp237) - _tmp959 * _tmp962;
  const Scalar _tmp964 = 2 * _tmp246;
  const Scalar _tmp965 = _tmp236 * _tmp960;
  const Scalar _tmp966 = -_tmp242 * _tmp959 * _tmp965 * _views_1_calibration[0] + _tmp963 * _tmp964;
  const Scalar _tmp967 = _tmp253 / (_tmp247 * std::sqrt(_tmp247));
  const Scalar _tmp968 = (Scalar(1) / Scalar(2)) * _tmp967;
  const Scalar _tmp969 = _tmp246 * _tmp968;
  const Scalar _tmp970 = _tmp248 * _tmp249 * _tmp250 * std::pow(_tmp251, _tmp913) / _tmp252;
  const Scalar _tmp971 = _tmp912 * _tmp970;
  const Scalar _tmp972 = _tmp246 * _tmp971;
  const Scalar _tmp973 = _tmp254 * _tmp963 - _tmp966 * _tmp969 + _tmp966 * _tmp972;
  const Scalar _tmp974 = _tmp125 * _tmp870;
  const Scalar _tmp975 = _tmp878 * _tmp898;
  const Scalar _tmp976 =
      _tmp141 * _tmp975 + _tmp837 * priors_1_0_sqrt_info(5, 5) +
      _tmp872 * priors_1_0_sqrt_info(5, 1) + _tmp874 * priors_1_0_sqrt_info(5, 2) +
      _tmp880 * priors_1_0_sqrt_info(5, 0) + _tmp885 * priors_1_0_sqrt_info(5, 2) +
      _tmp889 * priors_1_0_sqrt_info(5, 4) - _tmp892 * priors_1_0_sqrt_info(5, 0) -
      _tmp893 * priors_1_0_sqrt_info(5, 1) - _tmp894 * priors_1_0_sqrt_info(5, 2) +
      _tmp974 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp977 =
      ((((_tmp388 + _tmp44) > 0) - ((_tmp388 + _tmp44) < 0)) + 1) / std::pow(_tmp389, Scalar(2));
  const Scalar _tmp978 = _tmp977 * (_tmp382 * _tmp836 + _tmp383 * _tmp834 + _tmp384 * _tmp828);
  const Scalar _tmp979 = _tmp386 * _tmp902;
  const Scalar _tmp980 = _tmp394 * _tmp906;
  const Scalar _tmp981 = _tmp395 * (_tmp384 * _tmp888 + _tmp387) - _tmp978 * _tmp980;
  const Scalar _tmp982 = 2 * _tmp396;
  const Scalar _tmp983 = -_tmp386 * _tmp392 * _tmp978 * _views_1_calibration[0] + _tmp981 * _tmp982;
  const Scalar _tmp984 = (Scalar(1) / Scalar(2)) * _tmp392;
  const Scalar _tmp985 = _tmp403 / (_tmp397 * std::sqrt(_tmp397));
  const Scalar _tmp986 = _tmp984 * _tmp985;
  const Scalar _tmp987 =
      _tmp182 * _tmp398 * _tmp399 * _tmp400 * std::pow(_tmp401, _tmp913) / _tmp402;
  const Scalar _tmp988 = _tmp984 * _tmp987;
  const Scalar _tmp989 = -_tmp404 * _tmp978 * _tmp979 - _tmp983 * _tmp986 + _tmp983 * _tmp988;
  const Scalar _tmp990 = _tmp622 * _tmp836 + _tmp623 * _tmp834 + _tmp624 * _tmp828;
  const Scalar _tmp991 =
      ((((_tmp44 + _tmp628) > 0) - ((_tmp44 + _tmp628) < 0)) + 1) / std::pow(_tmp629, Scalar(2));
  const Scalar _tmp992 = _tmp626 * _tmp991;
  const Scalar _tmp993 = _tmp634 * _tmp991;
  const Scalar _tmp994 = _tmp906 * _tmp993;
  const Scalar _tmp995 = _tmp635 * (_tmp624 * _tmp888 + _tmp627) - _tmp990 * _tmp994;
  const Scalar _tmp996 = 2 * _tmp636;
  const Scalar _tmp997 = -_tmp632 * _tmp990 * _tmp992 * _views_1_calibration[0] + _tmp995 * _tmp996;
  const Scalar _tmp998 = _tmp638 * std::pow(_tmp639, _tmp913) * _tmp641 * _tmp642 / _tmp640;
  const Scalar _tmp999 = _tmp912 * _tmp998;
  const Scalar _tmp1000 = _tmp632 * _tmp999;
  const Scalar _tmp1001 = _tmp643 / (_tmp637 * std::sqrt(_tmp637));
  const Scalar _tmp1002 = (Scalar(1) / Scalar(2)) * _tmp1001;
  const Scalar _tmp1003 = _tmp1002 * _tmp632;
  const Scalar _tmp1004 = _tmp902 * _tmp992;
  const Scalar _tmp1005 = _tmp1000 * _tmp997 - _tmp1003 * _tmp997 - _tmp1004 * _tmp644 * _tmp990;
  const Scalar _tmp1006 =
      ((((_tmp170 + _tmp44) > 0) - ((_tmp170 + _tmp44) < 0)) + 1) / std::pow(_tmp171, Scalar(2));
  const Scalar _tmp1007 = _tmp1006 * (_tmp158 * _tmp836 + _tmp162 * _tmp828 + _tmp166 * _tmp834);
  const Scalar _tmp1008 = _tmp176 * _tmp906;
  const Scalar _tmp1009 = -_tmp1007 * _tmp1008 + _tmp177 * (_tmp162 * _tmp888 + _tmp169);
  const Scalar _tmp1010 = 2 * _tmp178;
  const Scalar _tmp1011 = _tmp1007 * _tmp168;
  const Scalar _tmp1012 = _tmp1009 * _tmp1010 - _tmp1011 * _tmp174 * _views_1_calibration[0];
  const Scalar _tmp1013 = (Scalar(1) / Scalar(2)) * _tmp174;
  const Scalar _tmp1014 =
      _tmp180 * _tmp181 * _tmp182 * std::pow(_tmp186, _tmp913) * _tmp192 / _tmp191;
  const Scalar _tmp1015 = _tmp1013 * _tmp1014;
  const Scalar _tmp1016 = _tmp193 / (_tmp179 * std::sqrt(_tmp179));
  const Scalar _tmp1017 = _tmp1013 * _tmp1016;
  const Scalar _tmp1018 = -_tmp1011 * _tmp194 * _tmp902 + _tmp1012 * _tmp1015 - _tmp1012 * _tmp1017;
  const Scalar _tmp1019 = (Scalar(1) / Scalar(2)) * _tmp178;
  const Scalar _tmp1020 = _tmp1012 * _tmp1019;
  const Scalar _tmp1021 = _tmp1009 * _tmp194 + _tmp1014 * _tmp1020 - _tmp1016 * _tmp1020;
  const Scalar _tmp1022 = _tmp712 * _tmp836 + _tmp713 * _tmp828 + _tmp714 * _tmp834;
  const Scalar _tmp1023 =
      ((((_tmp44 + _tmp718) > 0) - ((_tmp44 + _tmp718) < 0)) + 1) / std::pow(_tmp719, Scalar(2));
  const Scalar _tmp1024 = _tmp1023 * _tmp716;
  const Scalar _tmp1025 = _tmp1023 * _tmp724;
  const Scalar _tmp1026 = _tmp1025 * _tmp906;
  const Scalar _tmp1027 = -_tmp1022 * _tmp1026 + _tmp725 * (_tmp713 * _tmp888 + _tmp717);
  const Scalar _tmp1028 = 2 * _tmp726;
  const Scalar _tmp1029 =
      -_tmp1022 * _tmp1024 * _tmp722 * _views_1_calibration[0] + _tmp1027 * _tmp1028;
  const Scalar _tmp1030 = _tmp733 / (_tmp727 * std::sqrt(_tmp727));
  const Scalar _tmp1031 = (Scalar(1) / Scalar(2)) * _tmp722;
  const Scalar _tmp1032 = _tmp1030 * _tmp1031;
  const Scalar _tmp1033 =
      _tmp182 * _tmp728 * std::pow(_tmp729, _tmp913) * _tmp731 * _tmp732 / _tmp730;
  const Scalar _tmp1034 = _tmp1031 * _tmp1033;
  const Scalar _tmp1035 = _tmp716 * _tmp902;
  const Scalar _tmp1036 = _tmp1023 * _tmp1035;
  const Scalar _tmp1037 =
      -_tmp1022 * _tmp1036 * _tmp734 - _tmp1029 * _tmp1032 + _tmp1029 * _tmp1034;
  const Scalar _tmp1038 = _tmp592 * _tmp836 + _tmp593 * _tmp834 + _tmp594 * _tmp828;
  const Scalar _tmp1039 =
      ((((_tmp44 + _tmp598) > 0) - ((_tmp44 + _tmp598) < 0)) + 1) / std::pow(_tmp599, Scalar(2));
  const Scalar _tmp1040 = _tmp1039 * _tmp596;
  const Scalar _tmp1041 = _tmp1039 * _tmp604;
  const Scalar _tmp1042 = _tmp1041 * _tmp906;
  const Scalar _tmp1043 = -_tmp1038 * _tmp1042 + _tmp605 * (_tmp594 * _tmp888 + _tmp597);
  const Scalar _tmp1044 = 2 * _tmp606;
  const Scalar _tmp1045 =
      -_tmp1038 * _tmp1040 * _tmp602 * _views_1_calibration[0] + _tmp1043 * _tmp1044;
  const Scalar _tmp1046 = (Scalar(1) / Scalar(2)) * _tmp606;
  const Scalar _tmp1047 =
      _tmp182 * _tmp608 * _tmp609 * _tmp610 * std::pow(_tmp611, _tmp913) / _tmp612;
  const Scalar _tmp1048 = _tmp1046 * _tmp1047;
  const Scalar _tmp1049 = _tmp613 / (_tmp607 * std::sqrt(_tmp607));
  const Scalar _tmp1050 = _tmp1046 * _tmp1049;
  const Scalar _tmp1051 = _tmp1043 * _tmp614 + _tmp1045 * _tmp1048 - _tmp1045 * _tmp1050;
  const Scalar _tmp1052 =
      ((((_tmp44 + _tmp448) > 0) - ((_tmp44 + _tmp448) < 0)) + 1) / std::pow(_tmp449, Scalar(2));
  const Scalar _tmp1053 = _tmp1052 * (_tmp442 * _tmp836 + _tmp443 * _tmp834 + _tmp444 * _tmp828);
  const Scalar _tmp1054 = _tmp454 * _tmp906;
  const Scalar _tmp1055 = -_tmp1053 * _tmp1054 + _tmp455 * (_tmp444 * _tmp888 + _tmp447);
  const Scalar _tmp1056 = 2 * _tmp456;
  const Scalar _tmp1057 = _tmp1053 * _tmp446;
  const Scalar _tmp1058 = _tmp1055 * _tmp1056 - _tmp1057 * _tmp452 * _views_1_calibration[0];
  const Scalar _tmp1059 = (Scalar(1) / Scalar(2)) * _tmp456;
  const Scalar _tmp1060 =
      _tmp182 * _tmp458 * std::pow(_tmp459, _tmp913) * _tmp461 * _tmp462 / _tmp460;
  const Scalar _tmp1061 = _tmp1059 * _tmp1060;
  const Scalar _tmp1062 = _tmp463 / (_tmp457 * std::sqrt(_tmp457));
  const Scalar _tmp1063 = _tmp1059 * _tmp1062;
  const Scalar _tmp1064 = _tmp1055 * _tmp464 + _tmp1058 * _tmp1061 - _tmp1058 * _tmp1063;
  const Scalar _tmp1065 = _tmp58 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp1066 =
      _tmp1065 * _tmp939 + _tmp928 * priors_0_1_sqrt_info(2, 1) +
      _tmp932 * priors_0_1_sqrt_info(2, 0) + _tmp941 * priors_0_1_sqrt_info(2, 1) -
      _tmp945 * priors_0_1_sqrt_info(2, 0) - _tmp947 * priors_0_1_sqrt_info(2, 2) +
      _tmp953 * priors_0_1_sqrt_info(2, 2) + _tmp955 * priors_0_1_sqrt_info(2, 0) -
      _tmp957 * priors_0_1_sqrt_info(2, 1);
  const Scalar _tmp1067 = _tmp139 * _tmp878;
  const Scalar _tmp1068 =
      _tmp1067 * _tmp884 + _tmp138 * _tmp975 + _tmp837 * priors_1_0_sqrt_info(4, 5) +
      _tmp872 * priors_1_0_sqrt_info(4, 1) + _tmp874 * priors_1_0_sqrt_info(4, 2) +
      _tmp880 * priors_1_0_sqrt_info(4, 0) + _tmp889 * priors_1_0_sqrt_info(4, 4) -
      _tmp892 * priors_1_0_sqrt_info(4, 0) - _tmp893 * priors_1_0_sqrt_info(4, 1) -
      _tmp894 * priors_1_0_sqrt_info(4, 2) + _tmp974 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1069 = _tmp532 * _tmp836 + _tmp533 * _tmp834 + _tmp534 * _tmp828;
  const Scalar _tmp1070 =
      ((((_tmp44 + _tmp538) > 0) - ((_tmp44 + _tmp538) < 0)) + 1) / std::pow(_tmp539, Scalar(2));
  const Scalar _tmp1071 = _tmp1070 * _tmp536;
  const Scalar _tmp1072 = _tmp1069 * _tmp1071;
  const Scalar _tmp1073 = _tmp1070 * _tmp544;
  const Scalar _tmp1074 = _tmp1073 * _tmp906;
  const Scalar _tmp1075 = -_tmp1069 * _tmp1074 + _tmp545 * (_tmp534 * _tmp888 + _tmp537);
  const Scalar _tmp1076 = 2 * _tmp546;
  const Scalar _tmp1077 = -_tmp1072 * _tmp542 * _views_1_calibration[0] + _tmp1075 * _tmp1076;
  const Scalar _tmp1078 = (Scalar(1) / Scalar(2)) * _tmp546;
  const Scalar _tmp1079 =
      _tmp182 * _tmp548 * _tmp549 * std::pow(_tmp550, _tmp913) * _tmp552 / _tmp551;
  const Scalar _tmp1080 = _tmp1078 * _tmp1079;
  const Scalar _tmp1081 = _tmp553 / (_tmp547 * std::sqrt(_tmp547));
  const Scalar _tmp1082 = _tmp1078 * _tmp1081;
  const Scalar _tmp1083 = _tmp1075 * _tmp554 + _tmp1077 * _tmp1080 - _tmp1077 * _tmp1082;
  const Scalar _tmp1084 =
      ((((_tmp44 + _tmp508) > 0) - ((_tmp44 + _tmp508) < 0)) + 1) / std::pow(_tmp509, Scalar(2));
  const Scalar _tmp1085 = _tmp1084 * (_tmp502 * _tmp836 + _tmp503 * _tmp828 + _tmp504 * _tmp834);
  const Scalar _tmp1086 = _tmp514 * _tmp906;
  const Scalar _tmp1087 = -_tmp1085 * _tmp1086 + _tmp515 * (_tmp503 * _tmp888 + _tmp507);
  const Scalar _tmp1088 = 2 * _tmp516;
  const Scalar _tmp1089 = _tmp1085 * _tmp506;
  const Scalar _tmp1090 = _tmp1087 * _tmp1088 - _tmp1089 * _tmp512 * _views_1_calibration[0];
  const Scalar _tmp1091 = _tmp523 / (_tmp517 * std::sqrt(_tmp517));
  const Scalar _tmp1092 = (Scalar(1) / Scalar(2)) * _tmp516;
  const Scalar _tmp1093 = _tmp1091 * _tmp1092;
  const Scalar _tmp1094 =
      _tmp182 * _tmp518 * _tmp519 * std::pow(_tmp520, _tmp913) * _tmp522 / _tmp521;
  const Scalar _tmp1095 = _tmp1092 * _tmp1094;
  const Scalar _tmp1096 = _tmp1087 * _tmp524 - _tmp1090 * _tmp1093 + _tmp1090 * _tmp1095;
  const Scalar _tmp1097 = _tmp202 * _tmp836 + _tmp203 * _tmp828 + _tmp204 * _tmp834;
  const Scalar _tmp1098 =
      ((((_tmp208 + _tmp44) > 0) - ((_tmp208 + _tmp44) < 0)) + 1) / std::pow(_tmp209, Scalar(2));
  const Scalar _tmp1099 = _tmp1098 * _tmp206;
  const Scalar _tmp1100 = _tmp1097 * _tmp1099;
  const Scalar _tmp1101 = _tmp1098 * _tmp214;
  const Scalar _tmp1102 = _tmp1101 * _tmp906;
  const Scalar _tmp1103 = -_tmp1097 * _tmp1102 + _tmp215 * (_tmp203 * _tmp888 + _tmp207);
  const Scalar _tmp1104 = 2 * _tmp216;
  const Scalar _tmp1105 = -_tmp1100 * _tmp212 * _views_1_calibration[0] + _tmp1103 * _tmp1104;
  const Scalar _tmp1106 = (Scalar(1) / Scalar(2)) * _tmp212;
  const Scalar _tmp1107 = _tmp223 / (_tmp217 * std::sqrt(_tmp217));
  const Scalar _tmp1108 = _tmp1106 * _tmp1107;
  const Scalar _tmp1109 =
      _tmp182 * _tmp218 * _tmp219 * std::pow(_tmp220, _tmp913) * _tmp222 / _tmp221;
  const Scalar _tmp1110 = _tmp1106 * _tmp1109;
  const Scalar _tmp1111 = -_tmp1100 * _tmp224 * _tmp902 - _tmp1105 * _tmp1108 + _tmp1105 * _tmp1110;
  const Scalar _tmp1112 = _tmp242 * _tmp968;
  const Scalar _tmp1113 = _tmp902 * _tmp965;
  const Scalar _tmp1114 = _tmp242 * _tmp971;
  const Scalar _tmp1115 = -_tmp1112 * _tmp966 - _tmp1113 * _tmp254 * _tmp959 + _tmp1114 * _tmp966;
  const Scalar _tmp1116 = _tmp472 * _tmp836 + _tmp473 * _tmp828 + _tmp474 * _tmp834;
  const Scalar _tmp1117 =
      ((((_tmp44 + _tmp478) > 0) - ((_tmp44 + _tmp478) < 0)) + 1) / std::pow(_tmp479, Scalar(2));
  const Scalar _tmp1118 = _tmp1117 * _tmp476;
  const Scalar _tmp1119 = _tmp1116 * _tmp1118;
  const Scalar _tmp1120 = _tmp1117 * _tmp484;
  const Scalar _tmp1121 = _tmp1120 * _tmp906;
  const Scalar _tmp1122 = -_tmp1116 * _tmp1121 + _tmp485 * (_tmp473 * _tmp888 + _tmp477);
  const Scalar _tmp1123 = 2 * _tmp486;
  const Scalar _tmp1124 = -_tmp1119 * _tmp482 * _views_1_calibration[0] + _tmp1122 * _tmp1123;
  const Scalar _tmp1125 = (Scalar(1) / Scalar(2)) * _tmp482;
  const Scalar _tmp1126 =
      _tmp182 * _tmp488 * std::pow(_tmp489, _tmp913) * _tmp491 * _tmp492 / _tmp490;
  const Scalar _tmp1127 = _tmp1125 * _tmp1126;
  const Scalar _tmp1128 = _tmp493 / (_tmp487 * std::sqrt(_tmp487));
  const Scalar _tmp1129 = _tmp1125 * _tmp1128;
  const Scalar _tmp1130 = -_tmp1119 * _tmp494 * _tmp902 + _tmp1124 * _tmp1127 - _tmp1124 * _tmp1129;
  const Scalar _tmp1131 = _tmp262 * _tmp836 + _tmp263 * _tmp834 + _tmp264 * _tmp828;
  const Scalar _tmp1132 =
      ((((_tmp268 + _tmp44) > 0) - ((_tmp268 + _tmp44) < 0)) + 1) / std::pow(_tmp269, Scalar(2));
  const Scalar _tmp1133 = _tmp1132 * _tmp274;
  const Scalar _tmp1134 = _tmp1133 * _tmp906;
  const Scalar _tmp1135 = -_tmp1131 * _tmp1134 + _tmp275 * (_tmp264 * _tmp888 + _tmp267);
  const Scalar _tmp1136 = 2 * _tmp276;
  const Scalar _tmp1137 = _tmp1132 * _tmp266;
  const Scalar _tmp1138 = _tmp1131 * _tmp1137;
  const Scalar _tmp1139 = _tmp1135 * _tmp1136 - _tmp1138 * _tmp272 * _views_1_calibration[0];
  const Scalar _tmp1140 = (Scalar(1) / Scalar(2)) * _tmp276;
  const Scalar _tmp1141 =
      _tmp182 * _tmp278 * _tmp279 * std::pow(_tmp280, _tmp913) * _tmp282 / _tmp281;
  const Scalar _tmp1142 = _tmp1140 * _tmp1141;
  const Scalar _tmp1143 = _tmp283 / (_tmp277 * std::sqrt(_tmp277));
  const Scalar _tmp1144 = _tmp1140 * _tmp1143;
  const Scalar _tmp1145 = _tmp1135 * _tmp284 + _tmp1139 * _tmp1142 - _tmp1139 * _tmp1144;
  const Scalar _tmp1146 = (Scalar(1) / Scalar(2)) * _tmp512;
  const Scalar _tmp1147 = _tmp1094 * _tmp1146;
  const Scalar _tmp1148 = _tmp1091 * _tmp1146;
  const Scalar _tmp1149 = -_tmp1089 * _tmp524 * _tmp902 + _tmp1090 * _tmp1147 - _tmp1090 * _tmp1148;
  const Scalar _tmp1150 = _tmp58 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp1151 =
      _tmp1150 * _tmp939 + _tmp928 * priors_0_1_sqrt_info(0, 1) +
      _tmp932 * priors_0_1_sqrt_info(0, 0) + _tmp941 * priors_0_1_sqrt_info(0, 1) -
      _tmp945 * priors_0_1_sqrt_info(0, 0) - _tmp947 * priors_0_1_sqrt_info(0, 2) +
      _tmp953 * priors_0_1_sqrt_info(0, 2) + _tmp955 * priors_0_1_sqrt_info(0, 0) -
      _tmp957 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp1152 = (Scalar(1) / Scalar(2)) * _tmp452;
  const Scalar _tmp1153 = _tmp1060 * _tmp1152;
  const Scalar _tmp1154 = _tmp1062 * _tmp1152;
  const Scalar _tmp1155 = -_tmp1057 * _tmp464 * _tmp902 + _tmp1058 * _tmp1153 - _tmp1058 * _tmp1154;
  const Scalar _tmp1156 = (Scalar(1) / Scalar(2)) * _tmp602;
  const Scalar _tmp1157 = _tmp1049 * _tmp1156;
  const Scalar _tmp1158 = _tmp1047 * _tmp1156;
  const Scalar _tmp1159 = _tmp1040 * _tmp902;
  const Scalar _tmp1160 =
      -_tmp1038 * _tmp1159 * _tmp614 - _tmp1045 * _tmp1157 + _tmp1045 * _tmp1158;
  const Scalar _tmp1161 = _tmp682 * _tmp836 + _tmp683 * _tmp834 + _tmp684 * _tmp828;
  const Scalar _tmp1162 =
      ((((_tmp44 + _tmp688) > 0) - ((_tmp44 + _tmp688) < 0)) + 1) / std::pow(_tmp689, Scalar(2));
  const Scalar _tmp1163 = _tmp1162 * _tmp686;
  const Scalar _tmp1164 = _tmp1161 * _tmp1163;
  const Scalar _tmp1165 = _tmp1162 * _tmp694;
  const Scalar _tmp1166 = _tmp1165 * _tmp906;
  const Scalar _tmp1167 = -_tmp1161 * _tmp1166 + _tmp695 * (_tmp684 * _tmp888 + _tmp687);
  const Scalar _tmp1168 = 2 * _tmp696;
  const Scalar _tmp1169 = -_tmp1164 * _tmp692 * _views_1_calibration[0] + _tmp1167 * _tmp1168;
  const Scalar _tmp1170 = (Scalar(1) / Scalar(2)) * _tmp696;
  const Scalar _tmp1171 =
      _tmp182 * _tmp698 * _tmp699 * _tmp700 * std::pow(_tmp701, _tmp913) / _tmp702;
  const Scalar _tmp1172 = _tmp1170 * _tmp1171;
  const Scalar _tmp1173 = _tmp703 / (_tmp697 * std::sqrt(_tmp697));
  const Scalar _tmp1174 = _tmp1170 * _tmp1173;
  const Scalar _tmp1175 = _tmp1167 * _tmp704 + _tmp1169 * _tmp1172 - _tmp1169 * _tmp1174;
  const Scalar _tmp1176 = _tmp562 * _tmp836 + _tmp563 * _tmp834 + _tmp564 * _tmp828;
  const Scalar _tmp1177 =
      ((((_tmp44 + _tmp568) > 0) - ((_tmp44 + _tmp568) < 0)) + 1) / std::pow(_tmp569, Scalar(2));
  const Scalar _tmp1178 = _tmp1177 * _tmp566;
  const Scalar _tmp1179 = _tmp1178 * _tmp902;
  const Scalar _tmp1180 = _tmp1177 * _tmp574;
  const Scalar _tmp1181 = _tmp1180 * _tmp906;
  const Scalar _tmp1182 = -_tmp1176 * _tmp1181 + _tmp575 * (_tmp564 * _tmp888 + _tmp567);
  const Scalar _tmp1183 = 2 * _tmp576;
  const Scalar _tmp1184 =
      -Scalar(1) / Scalar(2) * _tmp1176 * _tmp1178 * _tmp572 * _views_1_calibration[0] +
      (Scalar(1) / Scalar(2)) * _tmp1182 * _tmp1183;
  const Scalar _tmp1185 = _tmp1184 * _tmp572;
  const Scalar _tmp1186 = _tmp578 * _tmp579 * _tmp580 * std::pow(_tmp581, _tmp913) / _tmp582;
  const Scalar _tmp1187 = _tmp1186 * _tmp182;
  const Scalar _tmp1188 = _tmp583 / (_tmp577 * std::sqrt(_tmp577));
  const Scalar _tmp1189 =
      -_tmp1176 * _tmp1179 * _tmp584 + _tmp1185 * _tmp1187 - _tmp1185 * _tmp1188;
  const Scalar _tmp1190 = (Scalar(1) / Scalar(2)) * _tmp726;
  const Scalar _tmp1191 = _tmp1030 * _tmp1190;
  const Scalar _tmp1192 = _tmp1033 * _tmp1190;
  const Scalar _tmp1193 = _tmp1027 * _tmp734 - _tmp1029 * _tmp1191 + _tmp1029 * _tmp1192;
  const Scalar _tmp1194 =
      ((((_tmp298 + _tmp44) > 0) - ((_tmp298 + _tmp44) < 0)) + 1) / std::pow(_tmp299, Scalar(2));
  const Scalar _tmp1195 = _tmp1194 * (_tmp292 * _tmp836 + _tmp293 * _tmp828 + _tmp294 * _tmp834);
  const Scalar _tmp1196 = _tmp1195 * _tmp296;
  const Scalar _tmp1197 = _tmp304 * _tmp906;
  const Scalar _tmp1198 = -_tmp1195 * _tmp1197 + _tmp305 * (_tmp293 * _tmp888 + _tmp297);
  const Scalar _tmp1199 = 2 * _tmp306;
  const Scalar _tmp1200 = -_tmp1196 * _tmp302 * _views_1_calibration[0] + _tmp1198 * _tmp1199;
  const Scalar _tmp1201 = (Scalar(1) / Scalar(2)) * _tmp306;
  const Scalar _tmp1202 = _tmp313 / (_tmp307 * std::sqrt(_tmp307));
  const Scalar _tmp1203 = _tmp1201 * _tmp1202;
  const Scalar _tmp1204 =
      _tmp182 * _tmp308 * std::pow(_tmp309, _tmp913) * _tmp311 * _tmp312 / _tmp310;
  const Scalar _tmp1205 = _tmp1201 * _tmp1204;
  const Scalar _tmp1206 = _tmp1198 * _tmp314 - _tmp1200 * _tmp1203 + _tmp1200 * _tmp1205;
  const Scalar _tmp1207 = (Scalar(1) / Scalar(2)) * _tmp302;
  const Scalar _tmp1208 = _tmp1202 * _tmp1207;
  const Scalar _tmp1209 = _tmp1204 * _tmp1207;
  const Scalar _tmp1210 = -_tmp1196 * _tmp314 * _tmp902 - _tmp1200 * _tmp1208 + _tmp1200 * _tmp1209;
  const Scalar _tmp1211 = _tmp128 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp1212 =
      _tmp1211 * _tmp870 + _tmp136 * _tmp975 + _tmp837 * priors_1_0_sqrt_info(3, 5) +
      _tmp872 * priors_1_0_sqrt_info(3, 1) + _tmp880 * priors_1_0_sqrt_info(3, 0) +
      _tmp885 * priors_1_0_sqrt_info(3, 2) + _tmp889 * priors_1_0_sqrt_info(3, 4) -
      _tmp892 * priors_1_0_sqrt_info(3, 0) - _tmp893 * priors_1_0_sqrt_info(3, 1) -
      _tmp894 * priors_1_0_sqrt_info(3, 2) + _tmp974 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1213 = (Scalar(1) / Scalar(2)) * _tmp272;
  const Scalar _tmp1214 = _tmp1141 * _tmp1213;
  const Scalar _tmp1215 = _tmp1143 * _tmp1213;
  const Scalar _tmp1216 = -_tmp1138 * _tmp284 * _tmp902 + _tmp1139 * _tmp1214 - _tmp1139 * _tmp1215;
  const Scalar _tmp1217 = (Scalar(1) / Scalar(2)) * _tmp216;
  const Scalar _tmp1218 = _tmp1107 * _tmp1217;
  const Scalar _tmp1219 = _tmp1109 * _tmp1217;
  const Scalar _tmp1220 = _tmp1103 * _tmp224 - _tmp1105 * _tmp1218 + _tmp1105 * _tmp1219;
  const Scalar _tmp1221 = (Scalar(1) / Scalar(2)) * _tmp542;
  const Scalar _tmp1222 = _tmp1081 * _tmp1221;
  const Scalar _tmp1223 = _tmp1079 * _tmp1221;
  const Scalar _tmp1224 = -_tmp1072 * _tmp554 * _tmp902 - _tmp1077 * _tmp1222 + _tmp1077 * _tmp1223;
  const Scalar _tmp1225 = _tmp50 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp1226 = _tmp67 * _tmp942;
  const Scalar _tmp1227 =
      _tmp1225 * _tmp952 - _tmp1226 * _tmp936 + _tmp66 * _tmp927 + _tmp67 * _tmp939 +
      _tmp932 * priors_0_1_sqrt_info(5, 0) + _tmp941 * priors_0_1_sqrt_info(5, 1) -
      _tmp945 * priors_0_1_sqrt_info(5, 0) + _tmp955 * priors_0_1_sqrt_info(5, 0) -
      _tmp957 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp1228 = _tmp412 * _tmp836 + _tmp413 * _tmp828 + _tmp414 * _tmp834;
  const Scalar _tmp1229 =
      ((((_tmp418 + _tmp44) > 0) - ((_tmp418 + _tmp44) < 0)) + 1) / std::pow(_tmp419, Scalar(2));
  const Scalar _tmp1230 = _tmp1229 * _tmp416;
  const Scalar _tmp1231 = _tmp1228 * _tmp1230;
  const Scalar _tmp1232 = _tmp1229 * _tmp424;
  const Scalar _tmp1233 = _tmp1232 * _tmp906;
  const Scalar _tmp1234 = -_tmp1228 * _tmp1233 + _tmp425 * (_tmp413 * _tmp888 + _tmp417);
  const Scalar _tmp1235 = 2 * _tmp426;
  const Scalar _tmp1236 = -_tmp1231 * _tmp422 * _views_1_calibration[0] + _tmp1234 * _tmp1235;
  const Scalar _tmp1237 = (Scalar(1) / Scalar(2)) * _tmp422;
  const Scalar _tmp1238 =
      _tmp182 * _tmp428 * _tmp429 * _tmp430 * std::pow(_tmp431, _tmp913) / _tmp432;
  const Scalar _tmp1239 = _tmp1237 * _tmp1238;
  const Scalar _tmp1240 = _tmp433 / (_tmp427 * std::sqrt(_tmp427));
  const Scalar _tmp1241 = _tmp1237 * _tmp1240;
  const Scalar _tmp1242 = -_tmp1231 * _tmp434 * _tmp902 + _tmp1236 * _tmp1239 - _tmp1236 * _tmp1241;
  const Scalar _tmp1243 = _tmp652 * _tmp836 + _tmp653 * _tmp834 + _tmp654 * _tmp828;
  const Scalar _tmp1244 =
      ((((_tmp44 + _tmp658) > 0) - ((_tmp44 + _tmp658) < 0)) + 1) / std::pow(_tmp659, Scalar(2));
  const Scalar _tmp1245 = _tmp1244 * _tmp664;
  const Scalar _tmp1246 = _tmp1245 * _tmp906;
  const Scalar _tmp1247 = -_tmp1243 * _tmp1246 + _tmp665 * (_tmp654 * _tmp888 + _tmp657);
  const Scalar _tmp1248 = 2 * _tmp666;
  const Scalar _tmp1249 = _tmp1244 * _tmp656;
  const Scalar _tmp1250 =
      -_tmp1243 * _tmp1249 * _tmp662 * _views_1_calibration[0] + _tmp1247 * _tmp1248;
  const Scalar _tmp1251 = (Scalar(1) / Scalar(2)) * _tmp662;
  const Scalar _tmp1252 = _tmp673 / (_tmp667 * std::sqrt(_tmp667));
  const Scalar _tmp1253 = _tmp1251 * _tmp1252;
  const Scalar _tmp1254 =
      _tmp182 * _tmp668 * _tmp669 * _tmp670 * std::pow(_tmp671, _tmp913) / _tmp672;
  const Scalar _tmp1255 = _tmp1251 * _tmp1254;
  const Scalar _tmp1256 = _tmp1249 * _tmp902;
  const Scalar _tmp1257 =
      -_tmp1243 * _tmp1256 * _tmp674 - _tmp1250 * _tmp1253 + _tmp1250 * _tmp1255;
  const Scalar _tmp1258 = _tmp128 * priors_1_0_sqrt_info(1, 2);
  const Scalar _tmp1259 = _tmp125 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1260 =
      _tmp1258 * _tmp870 - _tmp1258 * _tmp891 + _tmp1259 * _tmp870 +
      _tmp837 * priors_1_0_sqrt_info(1, 5) + _tmp872 * priors_1_0_sqrt_info(1, 1) +
      _tmp880 * priors_1_0_sqrt_info(1, 0) + _tmp885 * priors_1_0_sqrt_info(1, 2) +
      _tmp889 * priors_1_0_sqrt_info(1, 4) - _tmp892 * priors_1_0_sqrt_info(1, 0) -
      _tmp893 * priors_1_0_sqrt_info(1, 1) + _tmp899 * priors_1_0_sqrt_info(1, 1);
  const Scalar _tmp1261 = (Scalar(1) / Scalar(2)) * _tmp666;
  const Scalar _tmp1262 = _tmp1252 * _tmp1261;
  const Scalar _tmp1263 = _tmp1254 * _tmp1261;
  const Scalar _tmp1264 = _tmp1247 * _tmp674 - _tmp1250 * _tmp1262 + _tmp1250 * _tmp1263;
  const Scalar _tmp1265 = _tmp50 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp1266 =
      _tmp1265 * _tmp952 + _tmp928 * priors_0_1_sqrt_info(1, 1) +
      _tmp932 * priors_0_1_sqrt_info(1, 0) + _tmp941 * priors_0_1_sqrt_info(1, 1) -
      _tmp945 * priors_0_1_sqrt_info(1, 0) - _tmp947 * priors_0_1_sqrt_info(1, 2) +
      _tmp948 * priors_0_1_sqrt_info(1, 2) + _tmp955 * priors_0_1_sqrt_info(1, 0) -
      _tmp957 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp1267 = _tmp742 * _tmp836 + _tmp743 * _tmp834 + _tmp744 * _tmp828;
  const Scalar _tmp1268 =
      ((((_tmp44 + _tmp748) > 0) - ((_tmp44 + _tmp748) < 0)) + 1) / std::pow(_tmp749, Scalar(2));
  const Scalar _tmp1269 = _tmp1268 * _tmp754;
  const Scalar _tmp1270 = _tmp1269 * _tmp906;
  const Scalar _tmp1271 = -_tmp1267 * _tmp1270 + _tmp755 * (_tmp744 * _tmp888 + _tmp747);
  const Scalar _tmp1272 = 2 * _tmp756;
  const Scalar _tmp1273 = _tmp1268 * _tmp746;
  const Scalar _tmp1274 = _tmp1267 * _tmp1273;
  const Scalar _tmp1275 = _tmp1271 * _tmp1272 - _tmp1274 * _tmp752 * _views_1_calibration[0];
  const Scalar _tmp1276 = (Scalar(1) / Scalar(2)) * _tmp752;
  const Scalar _tmp1277 = _tmp763 / (_tmp757 * std::sqrt(_tmp757));
  const Scalar _tmp1278 = _tmp1276 * _tmp1277;
  const Scalar _tmp1279 =
      _tmp182 * _tmp758 * _tmp759 * _tmp760 * std::pow(_tmp761, _tmp913) / _tmp762;
  const Scalar _tmp1280 = _tmp1276 * _tmp1279;
  const Scalar _tmp1281 = -_tmp1274 * _tmp764 * _tmp902 - _tmp1275 * _tmp1278 + _tmp1275 * _tmp1280;
  const Scalar _tmp1282 = (Scalar(1) / Scalar(2)) * _tmp756;
  const Scalar _tmp1283 = _tmp1279 * _tmp1282;
  const Scalar _tmp1284 = _tmp1277 * _tmp1282;
  const Scalar _tmp1285 = _tmp1271 * _tmp764 + _tmp1275 * _tmp1283 - _tmp1275 * _tmp1284;
  const Scalar _tmp1286 = _tmp322 * _tmp836 + _tmp323 * _tmp834 + _tmp324 * _tmp828;
  const Scalar _tmp1287 =
      ((((_tmp328 + _tmp44) > 0) - ((_tmp328 + _tmp44) < 0)) + 1) / std::pow(_tmp329, Scalar(2));
  const Scalar _tmp1288 = _tmp1287 * _tmp334;
  const Scalar _tmp1289 = _tmp1288 * _tmp906;
  const Scalar _tmp1290 = -_tmp1286 * _tmp1289 + _tmp335 * (_tmp324 * _tmp888 + _tmp327);
  const Scalar _tmp1291 = 2 * _tmp336;
  const Scalar _tmp1292 = _tmp1287 * _tmp326;
  const Scalar _tmp1293 = _tmp1286 * _tmp1292;
  const Scalar _tmp1294 = _tmp1290 * _tmp1291 - _tmp1293 * _tmp332 * _views_1_calibration[0];
  const Scalar _tmp1295 = (Scalar(1) / Scalar(2)) * _tmp336;
  const Scalar _tmp1296 =
      _tmp182 * _tmp338 * _tmp339 * _tmp340 * std::pow(_tmp341, _tmp913) / _tmp342;
  const Scalar _tmp1297 = _tmp1295 * _tmp1296;
  const Scalar _tmp1298 = _tmp343 / (_tmp337 * std::sqrt(_tmp337));
  const Scalar _tmp1299 = _tmp1294 * _tmp1298;
  const Scalar _tmp1300 = _tmp1290 * _tmp344 + _tmp1294 * _tmp1297 - _tmp1295 * _tmp1299;
  const Scalar _tmp1301 = (Scalar(1) / Scalar(2)) * _tmp396;
  const Scalar _tmp1302 = _tmp1301 * _tmp985;
  const Scalar _tmp1303 = _tmp1301 * _tmp987;
  const Scalar _tmp1304 = -_tmp1302 * _tmp983 + _tmp1303 * _tmp983 + _tmp404 * _tmp981;
  const Scalar _tmp1305 = _tmp1002 * _tmp636;
  const Scalar _tmp1306 = _tmp636 * _tmp999;
  const Scalar _tmp1307 = -_tmp1305 * _tmp997 + _tmp1306 * _tmp997 + _tmp644 * _tmp995;
  const Scalar _tmp1308 = (Scalar(1) / Scalar(2)) * _tmp692;
  const Scalar _tmp1309 = _tmp1173 * _tmp1308;
  const Scalar _tmp1310 = _tmp1171 * _tmp1308;
  const Scalar _tmp1311 = -_tmp1164 * _tmp704 * _tmp902 - _tmp1169 * _tmp1309 + _tmp1169 * _tmp1310;
  const Scalar _tmp1312 = _tmp366 * _tmp915;
  const Scalar _tmp1313 = _tmp366 * _tmp918;
  const Scalar _tmp1314 = _tmp1312 * _tmp911 - _tmp1313 * _tmp911 + _tmp374 * _tmp909;
  const Scalar _tmp1315 =
      _tmp133 * _tmp870 - _tmp133 * _tmp891 + _tmp837 * priors_1_0_sqrt_info(2, 5) +
      _tmp872 * priors_1_0_sqrt_info(2, 1) + _tmp874 * priors_1_0_sqrt_info(2, 2) +
      _tmp880 * priors_1_0_sqrt_info(2, 0) + _tmp885 * priors_1_0_sqrt_info(2, 2) +
      _tmp889 * priors_1_0_sqrt_info(2, 4) - _tmp893 * priors_1_0_sqrt_info(2, 1) -
      _tmp894 * priors_1_0_sqrt_info(2, 2) + _tmp899 * priors_1_0_sqrt_info(2, 1);
  const Scalar _tmp1316 = _tmp1184 * _tmp576;
  const Scalar _tmp1317 = _tmp1182 * _tmp584 + _tmp1187 * _tmp1316 - _tmp1188 * _tmp1316;
  const Scalar _tmp1318 = (Scalar(1) / Scalar(2)) * _tmp426;
  const Scalar _tmp1319 = _tmp1240 * _tmp1318;
  const Scalar _tmp1320 = _tmp1238 * _tmp1318;
  const Scalar _tmp1321 = _tmp1234 * _tmp434 - _tmp1236 * _tmp1319 + _tmp1236 * _tmp1320;
  const Scalar _tmp1322 = (Scalar(1) / Scalar(2)) * _tmp332;
  const Scalar _tmp1323 = _tmp1296 * _tmp1322;
  const Scalar _tmp1324 = -_tmp1293 * _tmp344 * _tmp902 + _tmp1294 * _tmp1323 - _tmp1299 * _tmp1322;
  const Scalar _tmp1325 = _tmp50 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp1326 =
      _tmp1325 * _tmp952 + _tmp64 * _tmp927 + _tmp932 * priors_0_1_sqrt_info(4, 0) +
      _tmp941 * priors_0_1_sqrt_info(4, 1) - _tmp945 * priors_0_1_sqrt_info(4, 0) -
      _tmp947 * priors_0_1_sqrt_info(4, 2) + _tmp948 * priors_0_1_sqrt_info(4, 2) +
      _tmp955 * priors_0_1_sqrt_info(4, 0) - _tmp957 * priors_0_1_sqrt_info(4, 1);
  const Scalar _tmp1327 = (Scalar(1) / Scalar(2)) * _tmp486;
  const Scalar _tmp1328 = _tmp1126 * _tmp1327;
  const Scalar _tmp1329 = _tmp1128 * _tmp1327;
  const Scalar _tmp1330 = _tmp1122 * _tmp494 + _tmp1124 * _tmp1328 - _tmp1124 * _tmp1329;
  const Scalar _tmp1331 = -_priors_1_0_target_T_src[2] * _tmp923;
  const Scalar _tmp1332 = _priors_1_0_target_T_src[1] * _tmp926 + _tmp1331 - _tmp844 + _tmp855;
  const Scalar _tmp1333 = _tmp1332 * _tmp879;
  const Scalar _tmp1334 = _priors_1_0_target_T_src[1] * _tmp923;
  const Scalar _tmp1335 =
      _tmp878 * (-_priors_1_0_target_T_src[2] * _tmp926 - _tmp1334 + _tmp875 + _tmp876);
  const Scalar _tmp1336 = _tmp119 * _tmp1335;
  const Scalar _tmp1337 = _priors_1_0_target_T_src[3] * _tmp923;
  const Scalar _tmp1338 = _priors_1_0_target_T_src[0] * _tmp926 + _tmp1337 + _tmp881 + _tmp882;
  const Scalar _tmp1339 = _tmp1338 * _tmp871;
  const Scalar _tmp1340 = _tmp1338 * _tmp869;
  const Scalar _tmp1341 = _tmp1338 * _tmp873;
  const Scalar _tmp1342 = -_tmp78;
  const Scalar _tmp1343 = _tmp1342 + _tmp75 + _tmp829 + _tmp831;
  const Scalar _tmp1344 =
      _tmp100 + _tmp1343 * _views_0_pose[4] - _tmp1343 * _views_1_pose[4] - _tmp97 - _tmp99;
  const Scalar _tmp1345 = _tmp70 + _tmp827;
  const Scalar _tmp1346 = _tmp1342 + _tmp89;
  const Scalar _tmp1347 = _tmp1346 + _tmp833;
  const Scalar _tmp1348 = -_tmp93;
  const Scalar _tmp1349 = _tmp1348 + _tmp95;
  const Scalar _tmp1350 = _tmp1345 * _views_0_pose[5] - _tmp1345 * _views_1_pose[5] +
                          _tmp1347 * _views_0_pose[6] - _tmp1347 * _views_1_pose[6] +
                          _tmp1349 * _views_0_pose[4] - _tmp1349 * _views_1_pose[4];
  const Scalar _tmp1351 = _priors_1_0_target_T_src[0] * _tmp923;
  const Scalar _tmp1352 =
      _tmp879 * (_priors_1_0_target_T_src[3] * _tmp926 - _tmp1351 + _tmp895 + _tmp896);
  const Scalar _tmp1353 = _tmp1338 * _tmp890;
  const Scalar _tmp1354 = _tmp128 * _tmp1353;
  const Scalar _tmp1355 = _tmp120 * _tmp1353;
  const Scalar _tmp1356 =
      _tmp133 * _tmp1340 - _tmp133 * _tmp1353 + _tmp1333 * priors_1_0_sqrt_info(2, 2) +
      _tmp1336 * priors_1_0_sqrt_info(2, 1) + _tmp1339 * priors_1_0_sqrt_info(2, 1) +
      _tmp1341 * priors_1_0_sqrt_info(2, 2) + _tmp1344 * priors_1_0_sqrt_info(2, 5) +
      _tmp1350 * priors_1_0_sqrt_info(2, 3) + _tmp1352 * priors_1_0_sqrt_info(2, 0) -
      _tmp1354 * priors_1_0_sqrt_info(2, 2) - _tmp1355 * priors_1_0_sqrt_info(2, 1);
  const Scalar _tmp1357 = _tmp1023 * (_tmp1343 * _tmp712 + _tmp715);
  const Scalar _tmp1358 = -_tmp1035 * _tmp1357 +
                          _tmp721 * (_tmp1345 * _tmp714 + _tmp1347 * _tmp713 + _tmp1349 * _tmp712);
  const Scalar _tmp1359 = _tmp1357 * _tmp724;
  const Scalar _tmp1360 = 2 * _tmp722;
  const Scalar _tmp1361 = _tmp1358 * _tmp1360 - _tmp1359 * _tmp726 * _views_1_calibration[1];
  const Scalar _tmp1362 = -_tmp1032 * _tmp1361 + _tmp1034 * _tmp1361 + _tmp1358 * _tmp734;
  const Scalar _tmp1363 = _tmp1343 * _tmp562 + _tmp565;
  const Scalar _tmp1364 = -_tmp1179 * _tmp1363 +
                          _tmp571 * (_tmp1345 * _tmp563 + _tmp1347 * _tmp564 + _tmp1349 * _tmp562);
  const Scalar _tmp1365 = 2 * _tmp572;
  const Scalar _tmp1366 =
      -_tmp1180 * _tmp1363 * _tmp576 * _views_1_calibration[1] + _tmp1364 * _tmp1365;
  const Scalar _tmp1367 = _tmp1186 * _tmp912;
  const Scalar _tmp1368 = _tmp1367 * _tmp572;
  const Scalar _tmp1369 = (Scalar(1) / Scalar(2)) * _tmp1188;
  const Scalar _tmp1370 = _tmp1369 * _tmp572;
  const Scalar _tmp1371 = _tmp1364 * _tmp584 + _tmp1366 * _tmp1368 - _tmp1366 * _tmp1370;
  const Scalar _tmp1372 = _tmp1052 * (_tmp1343 * _tmp442 + _tmp445);
  const Scalar _tmp1373 = _tmp446 * _tmp902;
  const Scalar _tmp1374 = -_tmp1372 * _tmp1373 +
                          _tmp451 * (_tmp1345 * _tmp443 + _tmp1347 * _tmp444 + _tmp1349 * _tmp442);
  const Scalar _tmp1375 = 2 * _tmp452;
  const Scalar _tmp1376 =
      -_tmp1372 * _tmp454 * _tmp456 * _views_1_calibration[1] + _tmp1374 * _tmp1375;
  const Scalar _tmp1377 = _tmp1153 * _tmp1376 - _tmp1154 * _tmp1376 + _tmp1374 * _tmp464;
  const Scalar _tmp1378 = _tmp1343 * _tmp682 + _tmp685;
  const Scalar _tmp1379 = _tmp1165 * _tmp1378;
  const Scalar _tmp1380 = _tmp1163 * _tmp902;
  const Scalar _tmp1381 = -_tmp1378 * _tmp1380 +
                          _tmp691 * (_tmp1345 * _tmp683 + _tmp1347 * _tmp684 + _tmp1349 * _tmp682);
  const Scalar _tmp1382 = 2 * _tmp692;
  const Scalar _tmp1383 = -_tmp1379 * _tmp696 * _views_1_calibration[1] + _tmp1381 * _tmp1382;
  const Scalar _tmp1384 = -_tmp1309 * _tmp1383 + _tmp1310 * _tmp1383 + _tmp1381 * _tmp704;
  const Scalar _tmp1385 = -_tmp1191 * _tmp1361 + _tmp1192 * _tmp1361 - _tmp1359 * _tmp734 * _tmp906;
  const Scalar _tmp1386 =
      -_tmp1054 * _tmp1372 * _tmp464 + _tmp1061 * _tmp1376 - _tmp1063 * _tmp1376;
  const Scalar _tmp1387 = -_tmp850 + _tmp851 - _tmp852 + _tmp853;
  const Scalar _tmp1388 = _priors_0_1_target_T_src[1] * _tmp860;
  const Scalar _tmp1389 = _priors_0_1_target_T_src[3] * _tmp1387 + _tmp1388 - _tmp933 - _tmp934;
  const Scalar _tmp1390 = -_priors_0_1_target_T_src[2] * _tmp860;
  const Scalar _tmp1391 = _priors_0_1_target_T_src[0] * _tmp1387 + _tmp1390 + _tmp929 + _tmp930;
  const Scalar _tmp1392 = _priors_0_1_target_T_src[0] * _tmp860;
  const Scalar _tmp1393 = _priors_0_1_target_T_src[2] * _tmp1387 + _tmp1392 + _tmp951;
  const Scalar _tmp1394 = _tmp1393 * _tmp938;
  const Scalar _tmp1395 = _tmp1394 * _tmp58;
  const Scalar _tmp1396 = _tmp1393 * _tmp944;
  const Scalar _tmp1397 = _priors_0_1_target_T_src[3] * _tmp860 + _tmp922;
  const Scalar _tmp1398 = _tmp50 * (-_priors_0_1_target_T_src[1] * _tmp1387 + _tmp1397 - _tmp924);
  const Scalar _tmp1399 = _tmp1393 * _tmp956;
  const Scalar _tmp1400 = _tmp1394 * _tmp940;
  const Scalar _tmp1401 = _tmp954 * priors_0_1_sqrt_info(4, 0);
  const Scalar _tmp1402 = _tmp1393 * _tmp946;
  const Scalar _tmp1403 =
      _tmp1325 * _tmp1389 + _tmp1391 * _tmp64 + _tmp1394 * _tmp1401 +
      _tmp1395 * priors_0_1_sqrt_info(4, 2) - _tmp1396 * priors_0_1_sqrt_info(4, 0) +
      _tmp1398 * priors_0_1_sqrt_info(4, 0) - _tmp1399 * priors_0_1_sqrt_info(4, 1) +
      _tmp1400 * priors_0_1_sqrt_info(4, 1) - _tmp1402 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp1404 = _tmp1343 * _tmp292 + _tmp295;
  const Scalar _tmp1405 = _tmp1194 * _tmp296;
  const Scalar _tmp1406 = _tmp1405 * _tmp902;
  const Scalar _tmp1407 = -_tmp1404 * _tmp1406 +
                          _tmp301 * (_tmp1345 * _tmp294 + _tmp1347 * _tmp293 + _tmp1349 * _tmp292);
  const Scalar _tmp1408 = 2 * _tmp302;
  const Scalar _tmp1409 = _tmp1194 * _tmp304;
  const Scalar _tmp1410 =
      -_tmp1404 * _tmp1409 * _tmp306 * _views_1_calibration[1] + _tmp1407 * _tmp1408;
  const Scalar _tmp1411 = _tmp1194 * _tmp1197;
  const Scalar _tmp1412 =
      -_tmp1203 * _tmp1410 + _tmp1205 * _tmp1410 - _tmp1404 * _tmp1411 * _tmp314;
  const Scalar _tmp1413 = _tmp1389 * _tmp50;
  const Scalar _tmp1414 = _tmp1391 * _tmp50;
  const Scalar _tmp1415 = _tmp1394 * _tmp954;
  const Scalar _tmp1416 =
      _tmp1395 * priors_0_1_sqrt_info(3, 2) - _tmp1396 * priors_0_1_sqrt_info(3, 0) +
      _tmp1398 * priors_0_1_sqrt_info(3, 0) - _tmp1399 * priors_0_1_sqrt_info(3, 1) +
      _tmp1400 * priors_0_1_sqrt_info(3, 1) - _tmp1402 * priors_0_1_sqrt_info(3, 2) +
      _tmp1413 * priors_0_1_sqrt_info(3, 2) + _tmp1414 * priors_0_1_sqrt_info(3, 1) +
      _tmp1415 * priors_0_1_sqrt_info(3, 0);
  const Scalar _tmp1417 = _tmp977 * (_tmp1343 * _tmp382 + _tmp385);
  const Scalar _tmp1418 = -_tmp1417 * _tmp979 +
                          _tmp391 * (_tmp1345 * _tmp383 + _tmp1347 * _tmp384 + _tmp1349 * _tmp382);
  const Scalar _tmp1419 = 2 * _tmp392;
  const Scalar _tmp1420 =
      -_tmp1417 * _tmp394 * _tmp396 * _views_1_calibration[1] + _tmp1418 * _tmp1419;
  const Scalar _tmp1421 = _tmp1418 * _tmp404 - _tmp1420 * _tmp986 + _tmp1420 * _tmp988;
  const Scalar _tmp1422 = _tmp125 * _tmp1340;
  const Scalar _tmp1423 = _tmp125 * _tmp1353;
  const Scalar _tmp1424 =
      _tmp1067 * _tmp1332 + _tmp1335 * _tmp138 + _tmp1339 * priors_1_0_sqrt_info(4, 1) +
      _tmp1341 * priors_1_0_sqrt_info(4, 2) + _tmp1344 * priors_1_0_sqrt_info(4, 5) +
      _tmp1350 * priors_1_0_sqrt_info(4, 3) + _tmp1352 * priors_1_0_sqrt_info(4, 0) -
      _tmp1354 * priors_1_0_sqrt_info(4, 2) - _tmp1355 * priors_1_0_sqrt_info(4, 1) +
      _tmp1422 * priors_1_0_sqrt_info(4, 0) - _tmp1423 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1425 = _tmp1367 * _tmp576;
  const Scalar _tmp1426 = _tmp1369 * _tmp576;
  const Scalar _tmp1427 =
      -_tmp1181 * _tmp1363 * _tmp584 + _tmp1366 * _tmp1425 - _tmp1366 * _tmp1426;
  const Scalar _tmp1428 = -_tmp1208 * _tmp1410 + _tmp1209 * _tmp1410 + _tmp1407 * _tmp314;
  const Scalar _tmp1429 = _tmp1343 * _tmp412 + _tmp415;
  const Scalar _tmp1430 = _tmp1232 * _tmp1429;
  const Scalar _tmp1431 = _tmp1230 * _tmp902;
  const Scalar _tmp1432 = -_tmp1429 * _tmp1431 +
                          _tmp421 * (_tmp1345 * _tmp414 + _tmp1347 * _tmp413 + _tmp1349 * _tmp412);
  const Scalar _tmp1433 = 2 * _tmp422;
  const Scalar _tmp1434 = -_tmp1430 * _tmp426 * _views_1_calibration[1] + _tmp1432 * _tmp1433;
  const Scalar _tmp1435 = _tmp1239 * _tmp1434 - _tmp1241 * _tmp1434 + _tmp1432 * _tmp434;
  const Scalar _tmp1436 = _tmp1343 * _tmp502 + _tmp505;
  const Scalar _tmp1437 = _tmp1084 * _tmp506;
  const Scalar _tmp1438 = _tmp1437 * _tmp902;
  const Scalar _tmp1439 = -_tmp1436 * _tmp1438 +
                          _tmp511 * (_tmp1345 * _tmp504 + _tmp1347 * _tmp503 + _tmp1349 * _tmp502);
  const Scalar _tmp1440 = 2 * _tmp512;
  const Scalar _tmp1441 =
      -_tmp1084 * _tmp1436 * _tmp514 * _tmp516 * _views_1_calibration[1] + _tmp1439 * _tmp1440;
  const Scalar _tmp1442 = _tmp1084 * _tmp1086;
  const Scalar _tmp1443 =
      -_tmp1093 * _tmp1441 + _tmp1095 * _tmp1441 - _tmp1436 * _tmp1442 * _tmp524;
  const Scalar _tmp1444 = _tmp1343 * _tmp158 + _tmp167;
  const Scalar _tmp1445 = _tmp1006 * _tmp168;
  const Scalar _tmp1446 = _tmp1445 * _tmp902;
  const Scalar _tmp1447 = -_tmp1444 * _tmp1446 +
                          _tmp173 * (_tmp1345 * _tmp166 + _tmp1347 * _tmp162 + _tmp1349 * _tmp158);
  const Scalar _tmp1448 = 2 * _tmp174;
  const Scalar _tmp1449 = _tmp1006 * _tmp176;
  const Scalar _tmp1450 =
      -_tmp1444 * _tmp1449 * _tmp178 * _views_1_calibration[1] + _tmp1447 * _tmp1448;
  const Scalar _tmp1451 = _tmp1015 * _tmp1450 - _tmp1017 * _tmp1450 + _tmp1447 * _tmp194;
  const Scalar _tmp1452 = _tmp1343 * _tmp532 + _tmp535;
  const Scalar _tmp1453 = _tmp1071 * _tmp902;
  const Scalar _tmp1454 = -_tmp1452 * _tmp1453 +
                          _tmp541 * (_tmp1345 * _tmp533 + _tmp1347 * _tmp534 + _tmp1349 * _tmp532);
  const Scalar _tmp1455 = 2 * _tmp542;
  const Scalar _tmp1456 =
      -_tmp1073 * _tmp1452 * _tmp546 * _views_1_calibration[1] + _tmp1454 * _tmp1455;
  const Scalar _tmp1457 =
      -_tmp1074 * _tmp1452 * _tmp554 + _tmp1080 * _tmp1456 - _tmp1082 * _tmp1456;
  const Scalar _tmp1458 = _tmp1343 * _tmp232 + _tmp235;
  const Scalar _tmp1459 = -_tmp1113 * _tmp1458 +
                          _tmp241 * (_tmp1345 * _tmp234 + _tmp1347 * _tmp233 + _tmp1349 * _tmp232);
  const Scalar _tmp1460 = 2 * _tmp242;
  const Scalar _tmp1461 =
      -_tmp1458 * _tmp246 * _tmp961 * _views_1_calibration[1] + _tmp1459 * _tmp1460;
  const Scalar _tmp1462 = -_tmp1112 * _tmp1461 + _tmp1114 * _tmp1461 + _tmp1459 * _tmp254;
  const Scalar _tmp1463 = _tmp1343 * _tmp592 + _tmp595;
  const Scalar _tmp1464 = _tmp1041 * _tmp1463;
  const Scalar _tmp1465 = -_tmp1159 * _tmp1463 +
                          _tmp601 * (_tmp1345 * _tmp593 + _tmp1347 * _tmp594 + _tmp1349 * _tmp592);
  const Scalar _tmp1466 = 2 * _tmp602;
  const Scalar _tmp1467 = -_tmp1464 * _tmp606 * _views_1_calibration[1] + _tmp1465 * _tmp1466;
  const Scalar _tmp1468 = -_tmp1157 * _tmp1467 + _tmp1158 * _tmp1467 + _tmp1465 * _tmp614;
  const Scalar _tmp1469 = _tmp1343 * _tmp622 + _tmp625;
  const Scalar _tmp1470 = -_tmp1004 * _tmp1469 +
                          _tmp631 * (_tmp1345 * _tmp623 + _tmp1347 * _tmp624 + _tmp1349 * _tmp622);
  const Scalar _tmp1471 = 2 * _tmp632;
  const Scalar _tmp1472 =
      -_tmp1469 * _tmp636 * _tmp993 * _views_1_calibration[1] + _tmp1470 * _tmp1471;
  const Scalar _tmp1473 = -_tmp1305 * _tmp1472 + _tmp1306 * _tmp1472 - _tmp1469 * _tmp644 * _tmp994;
  const Scalar _tmp1474 = _tmp1343 * _tmp652 + _tmp655;
  const Scalar _tmp1475 = -_tmp1256 * _tmp1474 +
                          _tmp661 * (_tmp1345 * _tmp653 + _tmp1347 * _tmp654 + _tmp1349 * _tmp652);
  const Scalar _tmp1476 = 2 * _tmp662;
  const Scalar _tmp1477 =
      -_tmp1245 * _tmp1474 * _tmp666 * _views_1_calibration[1] + _tmp1475 * _tmp1476;
  const Scalar _tmp1478 =
      -_tmp1246 * _tmp1474 * _tmp674 - _tmp1262 * _tmp1477 + _tmp1263 * _tmp1477;
  const Scalar _tmp1479 = -_tmp1458 * _tmp254 * _tmp962 - _tmp1461 * _tmp969 + _tmp1461 * _tmp972;
  const Scalar _tmp1480 = _tmp1343 * _tmp352 + _tmp355;
  const Scalar _tmp1481 = -_tmp1480 * _tmp905 +
                          _tmp361 * (_tmp1345 * _tmp354 + _tmp1347 * _tmp353 + _tmp1349 * _tmp352);
  const Scalar _tmp1482 = 2 * _tmp362;
  const Scalar _tmp1483 =
      -_tmp1480 * _tmp366 * _tmp907 * _views_1_calibration[1] + _tmp1481 * _tmp1482;
  const Scalar _tmp1484 = _tmp1312 * _tmp1483 - _tmp1313 * _tmp1483 - _tmp1480 * _tmp374 * _tmp908;
  const Scalar _tmp1485 = _tmp1343 * _tmp262 + _tmp265;
  const Scalar _tmp1486 = _tmp1137 * _tmp902;
  const Scalar _tmp1487 = -_tmp1485 * _tmp1486 +
                          _tmp271 * (_tmp1345 * _tmp263 + _tmp1347 * _tmp264 + _tmp1349 * _tmp262);
  const Scalar _tmp1488 = 2 * _tmp272;
  const Scalar _tmp1489 =
      -_tmp1133 * _tmp1485 * _tmp276 * _views_1_calibration[1] + _tmp1487 * _tmp1488;
  const Scalar _tmp1490 = _tmp1214 * _tmp1489 - _tmp1215 * _tmp1489 + _tmp1487 * _tmp284;
  const Scalar _tmp1491 = _tmp1147 * _tmp1441 - _tmp1148 * _tmp1441 + _tmp1439 * _tmp524;
  const Scalar _tmp1492 = _tmp1343 * _tmp472 + _tmp475;
  const Scalar _tmp1493 = _tmp1118 * _tmp902;
  const Scalar _tmp1494 = -_tmp1492 * _tmp1493 +
                          _tmp481 * (_tmp1345 * _tmp474 + _tmp1347 * _tmp473 + _tmp1349 * _tmp472);
  const Scalar _tmp1495 = _tmp1120 * _tmp1492;
  const Scalar _tmp1496 = 2 * _tmp482;
  const Scalar _tmp1497 = _tmp1494 * _tmp1496 - _tmp1495 * _tmp486 * _views_1_calibration[1];
  const Scalar _tmp1498 = _tmp1127 * _tmp1497 - _tmp1129 * _tmp1497 + _tmp1494 * _tmp494;
  const Scalar _tmp1499 = _tmp1343 * _tmp202 + _tmp205;
  const Scalar _tmp1500 = _tmp1101 * _tmp1499;
  const Scalar _tmp1501 = _tmp1099 * _tmp902;
  const Scalar _tmp1502 = -_tmp1499 * _tmp1501 +
                          _tmp211 * (_tmp1345 * _tmp204 + _tmp1347 * _tmp203 + _tmp1349 * _tmp202);
  const Scalar _tmp1503 = 2 * _tmp212;
  const Scalar _tmp1504 = -_tmp1500 * _tmp216 * _views_1_calibration[1] + _tmp1502 * _tmp1503;
  const Scalar _tmp1505 = -_tmp1218 * _tmp1504 + _tmp1219 * _tmp1504 - _tmp1500 * _tmp224 * _tmp906;
  const Scalar _tmp1506 =
      _tmp1225 * _tmp1389 - _tmp1226 * _tmp1393 + _tmp1391 * _tmp66 + _tmp1394 * _tmp67 -
      _tmp1396 * priors_0_1_sqrt_info(5, 0) + _tmp1398 * priors_0_1_sqrt_info(5, 0) -
      _tmp1399 * priors_0_1_sqrt_info(5, 1) + _tmp1400 * priors_0_1_sqrt_info(5, 1) +
      _tmp1415 * priors_0_1_sqrt_info(5, 0);
  const Scalar _tmp1507 =
      _tmp1150 * _tmp1394 - _tmp1396 * priors_0_1_sqrt_info(0, 0) +
      _tmp1398 * priors_0_1_sqrt_info(0, 0) - _tmp1399 * priors_0_1_sqrt_info(0, 1) +
      _tmp1400 * priors_0_1_sqrt_info(0, 1) - _tmp1402 * priors_0_1_sqrt_info(0, 2) +
      _tmp1413 * priors_0_1_sqrt_info(0, 2) + _tmp1414 * priors_0_1_sqrt_info(0, 1) +
      _tmp1415 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp1508 = -_tmp1108 * _tmp1504 + _tmp1110 * _tmp1504 + _tmp1502 * _tmp224;
  const Scalar _tmp1509 = -_tmp1319 * _tmp1434 + _tmp1320 * _tmp1434 - _tmp1430 * _tmp434 * _tmp906;
  const Scalar _tmp1510 = _tmp1172 * _tmp1383 - _tmp1174 * _tmp1383 - _tmp1379 * _tmp704 * _tmp906;
  const Scalar _tmp1511 = _tmp1343 * _tmp322 + _tmp325;
  const Scalar _tmp1512 = _tmp1292 * _tmp902;
  const Scalar _tmp1513 = -_tmp1511 * _tmp1512 +
                          _tmp331 * (_tmp1345 * _tmp323 + _tmp1347 * _tmp324 + _tmp1349 * _tmp322);
  const Scalar _tmp1514 = 2 * _tmp332;
  const Scalar _tmp1515 =
      -_tmp1288 * _tmp1511 * _tmp336 * _views_1_calibration[1] + _tmp1513 * _tmp1514;
  const Scalar _tmp1516 = _tmp1322 * _tmp1515;
  const Scalar _tmp1517 = _tmp1296 * _tmp1516 - _tmp1298 * _tmp1516 + _tmp1513 * _tmp344;
  const Scalar _tmp1518 = _tmp1016 * _tmp1019;
  const Scalar _tmp1519 = _tmp1014 * _tmp1019;
  const Scalar _tmp1520 = _tmp1006 * _tmp1008;
  const Scalar _tmp1521 =
      -_tmp1444 * _tmp1520 * _tmp194 - _tmp1450 * _tmp1518 + _tmp1450 * _tmp1519;
  const Scalar _tmp1522 = -_tmp1302 * _tmp1420 + _tmp1303 * _tmp1420 - _tmp1417 * _tmp404 * _tmp980;
  const Scalar _tmp1523 = _tmp1343 * _tmp742 + _tmp745;
  const Scalar _tmp1524 = _tmp1269 * _tmp1523;
  const Scalar _tmp1525 = _tmp1273 * _tmp902;
  const Scalar _tmp1526 = -_tmp1523 * _tmp1525 +
                          _tmp751 * (_tmp1345 * _tmp743 + _tmp1347 * _tmp744 + _tmp1349 * _tmp742);
  const Scalar _tmp1527 = 2 * _tmp752;
  const Scalar _tmp1528 = -_tmp1524 * _tmp756 * _views_1_calibration[1] + _tmp1526 * _tmp1527;
  const Scalar _tmp1529 = _tmp1283 * _tmp1528 - _tmp1284 * _tmp1528 - _tmp1524 * _tmp764 * _tmp906;
  const Scalar _tmp1530 =
      _tmp1333 * priors_1_0_sqrt_info(0, 2) + _tmp1336 * priors_1_0_sqrt_info(0, 1) +
      _tmp1339 * priors_1_0_sqrt_info(0, 1) + _tmp1340 * _tmp838 +
      _tmp1341 * priors_1_0_sqrt_info(0, 2) + _tmp1344 * priors_1_0_sqrt_info(0, 5) +
      _tmp1350 * priors_1_0_sqrt_info(0, 3) + _tmp1352 * priors_1_0_sqrt_info(0, 0) -
      _tmp1353 * _tmp838 - _tmp1354 * priors_1_0_sqrt_info(0, 2) -
      _tmp1355 * priors_1_0_sqrt_info(0, 1);
  const Scalar _tmp1531 = _tmp1276 * _tmp1528;
  const Scalar _tmp1532 = -_tmp1277 * _tmp1531 + _tmp1279 * _tmp1531 + _tmp1526 * _tmp764;
  const Scalar _tmp1533 =
      _tmp1265 * _tmp1389 + _tmp1395 * priors_0_1_sqrt_info(1, 2) -
      _tmp1396 * priors_0_1_sqrt_info(1, 0) + _tmp1398 * priors_0_1_sqrt_info(1, 0) -
      _tmp1399 * priors_0_1_sqrt_info(1, 1) + _tmp1400 * priors_0_1_sqrt_info(1, 1) -
      _tmp1402 * priors_0_1_sqrt_info(1, 2) + _tmp1414 * priors_0_1_sqrt_info(1, 1) +
      _tmp1415 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp1534 = _tmp1481 * _tmp374 + _tmp1483 * _tmp916 - _tmp1483 * _tmp919;
  const Scalar _tmp1535 =
      -_tmp1134 * _tmp1485 * _tmp284 + _tmp1142 * _tmp1489 - _tmp1144 * _tmp1489;
  const Scalar _tmp1536 =
      _tmp1211 * _tmp1340 + _tmp1333 * priors_1_0_sqrt_info(3, 2) + _tmp1335 * _tmp136 +
      _tmp1339 * priors_1_0_sqrt_info(3, 1) + _tmp1344 * priors_1_0_sqrt_info(3, 5) +
      _tmp1350 * priors_1_0_sqrt_info(3, 3) + _tmp1352 * priors_1_0_sqrt_info(3, 0) -
      _tmp1354 * priors_1_0_sqrt_info(3, 2) - _tmp1355 * priors_1_0_sqrt_info(3, 1) +
      _tmp1422 * priors_1_0_sqrt_info(3, 0) - _tmp1423 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1537 = _tmp125 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1538 =
      _tmp1333 * priors_1_0_sqrt_info(5, 2) + _tmp1335 * _tmp141 +
      _tmp1339 * priors_1_0_sqrt_info(5, 1) + _tmp1340 * _tmp1537 +
      _tmp1341 * priors_1_0_sqrt_info(5, 2) + _tmp1344 * priors_1_0_sqrt_info(5, 5) +
      _tmp1350 * priors_1_0_sqrt_info(5, 3) + _tmp1352 * priors_1_0_sqrt_info(5, 0) -
      _tmp1354 * priors_1_0_sqrt_info(5, 2) - _tmp1355 * priors_1_0_sqrt_info(5, 1) -
      _tmp1423 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1539 = -_tmp1222 * _tmp1456 + _tmp1223 * _tmp1456 + _tmp1454 * _tmp554;
  const Scalar _tmp1540 = _tmp1295 * _tmp1298;
  const Scalar _tmp1541 =
      -_tmp1289 * _tmp1511 * _tmp344 + _tmp1297 * _tmp1515 - _tmp1515 * _tmp1540;
  const Scalar _tmp1542 = _tmp1328 * _tmp1497 - _tmp1329 * _tmp1497 - _tmp1495 * _tmp494 * _tmp906;
  const Scalar _tmp1543 =
      _tmp1065 * _tmp1394 - _tmp1396 * priors_0_1_sqrt_info(2, 0) +
      _tmp1398 * priors_0_1_sqrt_info(2, 0) - _tmp1399 * priors_0_1_sqrt_info(2, 1) +
      _tmp1400 * priors_0_1_sqrt_info(2, 1) - _tmp1402 * priors_0_1_sqrt_info(2, 2) +
      _tmp1413 * priors_0_1_sqrt_info(2, 2) + _tmp1414 * priors_0_1_sqrt_info(2, 1) +
      _tmp1415 * priors_0_1_sqrt_info(2, 0);
  const Scalar _tmp1544 = _tmp1048 * _tmp1467 - _tmp1050 * _tmp1467 - _tmp1464 * _tmp614 * _tmp906;
  const Scalar _tmp1545 =
      _tmp1258 * _tmp1340 - _tmp1258 * _tmp1353 + _tmp1259 * _tmp1340 +
      _tmp1333 * priors_1_0_sqrt_info(1, 2) + _tmp1336 * priors_1_0_sqrt_info(1, 1) +
      _tmp1339 * priors_1_0_sqrt_info(1, 1) + _tmp1344 * priors_1_0_sqrt_info(1, 5) +
      _tmp1350 * priors_1_0_sqrt_info(1, 3) + _tmp1352 * priors_1_0_sqrt_info(1, 0) -
      _tmp1355 * priors_1_0_sqrt_info(1, 1) - _tmp1423 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1546 = -_tmp1253 * _tmp1477 + _tmp1255 * _tmp1477 + _tmp1475 * _tmp674;
  const Scalar _tmp1547 = _tmp1000 * _tmp1472 - _tmp1003 * _tmp1472 + _tmp1470 * _tmp644;
  const Scalar _tmp1548 = _tmp78 + _tmp832 + _tmp886 + _tmp89;
  const Scalar _tmp1549 = _tmp835 + _tmp84;
  const Scalar _tmp1550 = _tmp1348 + _tmp94;
  const Scalar _tmp1551 = _tmp455 * (_tmp1548 * _tmp442 + _tmp1549 * _tmp443 + _tmp1550 * _tmp444);
  const Scalar _tmp1552 = _tmp1346 + _tmp887;
  const Scalar _tmp1553 = _tmp451 * (_tmp1552 * _tmp443 + _tmp453);
  const Scalar _tmp1554 = _tmp1056 * _tmp1551 + _tmp1375 * _tmp1553;
  const Scalar _tmp1555 = _tmp1061 * _tmp1554 - _tmp1063 * _tmp1554 + _tmp1551 * _tmp464;
  const Scalar _tmp1556 = _tmp635 * (_tmp1548 * _tmp622 + _tmp1549 * _tmp623 + _tmp1550 * _tmp624);
  const Scalar _tmp1557 = _tmp631 * (_tmp1552 * _tmp623 + _tmp633);
  const Scalar _tmp1558 = _tmp1471 * _tmp1557 + _tmp1556 * _tmp996;
  const Scalar _tmp1559 = -_tmp1305 * _tmp1558 + _tmp1306 * _tmp1558 + _tmp1556 * _tmp644;
  const Scalar _tmp1560 = _tmp691 * (_tmp1552 * _tmp683 + _tmp693);
  const Scalar _tmp1561 = _tmp695 * (_tmp1548 * _tmp682 + _tmp1549 * _tmp683 + _tmp1550 * _tmp684);
  const Scalar _tmp1562 = _tmp1168 * _tmp1561 + _tmp1382 * _tmp1560;
  const Scalar _tmp1563 = _tmp1173 * _tmp1562;
  const Scalar _tmp1564 = -_tmp1308 * _tmp1563 + _tmp1310 * _tmp1562 + _tmp1560 * _tmp704;
  const Scalar _tmp1565 = _tmp575 * (_tmp1548 * _tmp562 + _tmp1549 * _tmp563 + _tmp1550 * _tmp564);
  const Scalar _tmp1566 = _tmp571 * (_tmp1552 * _tmp563 + _tmp573);
  const Scalar _tmp1567 = _tmp1183 * _tmp1565 + _tmp1365 * _tmp1566;
  const Scalar _tmp1568 = _tmp1368 * _tmp1567 - _tmp1370 * _tmp1567 + _tmp1566 * _tmp584;
  const Scalar _tmp1569 = _tmp421 * (_tmp1552 * _tmp414 + _tmp423);
  const Scalar _tmp1570 = _tmp425 * (_tmp1548 * _tmp412 + _tmp1549 * _tmp414 + _tmp1550 * _tmp413);
  const Scalar _tmp1571 = _tmp1235 * _tmp1570 + _tmp1433 * _tmp1569;
  const Scalar _tmp1572 = _tmp1239 * _tmp1571 - _tmp1241 * _tmp1571 + _tmp1569 * _tmp434;
  const Scalar _tmp1573 = _tmp275 * (_tmp1548 * _tmp262 + _tmp1549 * _tmp263 + _tmp1550 * _tmp264);
  const Scalar _tmp1574 = _tmp271 * (_tmp1552 * _tmp263 + _tmp273);
  const Scalar _tmp1575 = _tmp1136 * _tmp1573 + _tmp1488 * _tmp1574;
  const Scalar _tmp1576 = _tmp1140 * _tmp1575;
  const Scalar _tmp1577 = _tmp1141 * _tmp1576 - _tmp1143 * _tmp1576 + _tmp1573 * _tmp284;
  const Scalar _tmp1578 = _tmp335 * (_tmp1548 * _tmp322 + _tmp1549 * _tmp323 + _tmp1550 * _tmp324);
  const Scalar _tmp1579 = _tmp331 * (_tmp1552 * _tmp323 + _tmp333);
  const Scalar _tmp1580 = _tmp1291 * _tmp1578 + _tmp1514 * _tmp1579;
  const Scalar _tmp1581 = _tmp1298 * _tmp1322;
  const Scalar _tmp1582 = _tmp1323 * _tmp1580 + _tmp1579 * _tmp344 - _tmp1580 * _tmp1581;
  const Scalar _tmp1583 = _tmp725 * (_tmp1548 * _tmp712 + _tmp1549 * _tmp714 + _tmp1550 * _tmp713);
  const Scalar _tmp1584 = _tmp721 * (_tmp1552 * _tmp714 + _tmp723);
  const Scalar _tmp1585 = _tmp1028 * _tmp1583 + _tmp1360 * _tmp1584;
  const Scalar _tmp1586 = _tmp1030 * _tmp1585;
  const Scalar _tmp1587 = -_tmp1190 * _tmp1586 + _tmp1192 * _tmp1585 + _tmp1583 * _tmp734;
  const Scalar _tmp1588 = _tmp211 * (_tmp1552 * _tmp204 + _tmp213);
  const Scalar _tmp1589 = _tmp215 * (_tmp1548 * _tmp202 + _tmp1549 * _tmp204 + _tmp1550 * _tmp203);
  const Scalar _tmp1590 = _tmp1104 * _tmp1589 + _tmp1503 * _tmp1588;
  const Scalar _tmp1591 = -_tmp1108 * _tmp1590 + _tmp1110 * _tmp1590 + _tmp1588 * _tmp224;
  const Scalar _tmp1592 = _priors_0_1_target_T_src[0] * _tmp849 + _tmp1397 + _tmp925;
  const Scalar _tmp1593 = _tmp1592 * _tmp946;
  const Scalar _tmp1594 = _tmp1592 * _tmp938;
  const Scalar _tmp1595 = _tmp1594 * _tmp954;
  const Scalar _tmp1596 = -_priors_0_1_target_T_src[2] * _tmp849 - _tmp1388 + _tmp935;
  const Scalar _tmp1597 = _tmp1596 * _tmp50;
  const Scalar _tmp1598 = _priors_0_1_target_T_src[1] * _tmp849 + _tmp1390 + _tmp931;
  const Scalar _tmp1599 = _tmp1598 * _tmp50;
  const Scalar _tmp1600 =
      _tmp50 * (_priors_0_1_target_T_src[3] * _tmp849 - _tmp1392 + _tmp949 - _tmp950);
  const Scalar _tmp1601 = _tmp1592 * _tmp944;
  const Scalar _tmp1602 = _tmp1592 * _tmp956;
  const Scalar _tmp1603 = _tmp1594 * _tmp940;
  const Scalar _tmp1604 =
      _tmp1065 * _tmp1594 - _tmp1593 * priors_0_1_sqrt_info(2, 2) +
      _tmp1595 * priors_0_1_sqrt_info(2, 0) + _tmp1597 * priors_0_1_sqrt_info(2, 1) +
      _tmp1599 * priors_0_1_sqrt_info(2, 2) + _tmp1600 * priors_0_1_sqrt_info(2, 0) -
      _tmp1601 * priors_0_1_sqrt_info(2, 0) - _tmp1602 * priors_0_1_sqrt_info(2, 1) +
      _tmp1603 * priors_0_1_sqrt_info(2, 1);
  const Scalar _tmp1605 = -_tmp1218 * _tmp1590 + _tmp1219 * _tmp1590 + _tmp1589 * _tmp224;
  const Scalar _tmp1606 = _tmp511 * (_tmp1552 * _tmp504 + _tmp513);
  const Scalar _tmp1607 = _tmp515 * (_tmp1548 * _tmp502 + _tmp1549 * _tmp504 + _tmp1550 * _tmp503);
  const Scalar _tmp1608 = _tmp1088 * _tmp1607 + _tmp1440 * _tmp1606;
  const Scalar _tmp1609 = _tmp1147 * _tmp1608 - _tmp1148 * _tmp1608 + _tmp1606 * _tmp524;
  const Scalar _tmp1610 = _tmp1000 * _tmp1558 - _tmp1003 * _tmp1558 + _tmp1557 * _tmp644;
  const Scalar _tmp1611 = -_tmp1031 * _tmp1586 + _tmp1034 * _tmp1585 + _tmp1584 * _tmp734;
  const Scalar _tmp1612 =
      _tmp1552 * _views_0_pose[5] - _tmp1552 * _views_1_pose[5] - _tmp74 - _tmp86 + _tmp87;
  const Scalar _tmp1613 = -_priors_1_0_target_T_src[0] * _tmp1387 + _tmp1334 + _tmp875 - _tmp877;
  const Scalar _tmp1614 = _tmp1613 * _tmp879;
  const Scalar _tmp1615 = _priors_1_0_target_T_src[1] * _tmp1387 + _tmp1351 + _tmp895 + _tmp897;
  const Scalar _tmp1616 = _tmp1615 * _tmp869;
  const Scalar _tmp1617 = _tmp1615 * _tmp873;
  const Scalar _tmp1618 = _tmp1615 * _tmp871;
  const Scalar _tmp1619 = _tmp1548 * _views_0_pose[4] - _tmp1548 * _views_1_pose[4] +
                          _tmp1549 * _views_0_pose[5] - _tmp1549 * _views_1_pose[5] +
                          _tmp1550 * _views_0_pose[6] - _tmp1550 * _views_1_pose[6];
  const Scalar _tmp1620 = _tmp1615 * _tmp890;
  const Scalar _tmp1621 = _tmp128 * _tmp1620;
  const Scalar _tmp1622 = _tmp120 * _tmp1620;
  const Scalar _tmp1623 =
      _tmp878 * (_priors_1_0_target_T_src[3] * _tmp1387 + _tmp1331 + _tmp844 - _tmp861);
  const Scalar _tmp1624 =
      _tmp879 * (_priors_1_0_target_T_src[2] * _tmp1387 + _tmp1337 - _tmp881 + _tmp883);
  const Scalar _tmp1625 =
      _tmp133 * _tmp1616 - _tmp133 * _tmp1620 + _tmp134 * _tmp1623 +
      _tmp1612 * priors_1_0_sqrt_info(2, 3) + _tmp1614 * priors_1_0_sqrt_info(2, 2) +
      _tmp1617 * priors_1_0_sqrt_info(2, 2) + _tmp1618 * priors_1_0_sqrt_info(2, 1) +
      _tmp1619 * priors_1_0_sqrt_info(2, 4) - _tmp1621 * priors_1_0_sqrt_info(2, 2) -
      _tmp1622 * priors_1_0_sqrt_info(2, 1) + _tmp1624 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1626 = _tmp241 * (_tmp1552 * _tmp234 + _tmp243);
  const Scalar _tmp1627 = _tmp245 * (_tmp1548 * _tmp232 + _tmp1549 * _tmp234 + _tmp1550 * _tmp233);
  const Scalar _tmp1628 =
      (Scalar(1) / Scalar(2)) * _tmp1460 * _tmp1626 + (Scalar(1) / Scalar(2)) * _tmp1627 * _tmp964;
  const Scalar _tmp1629 = _tmp1628 * _tmp242;
  const Scalar _tmp1630 = _tmp182 * _tmp970;
  const Scalar _tmp1631 = _tmp1626 * _tmp254 + _tmp1629 * _tmp1630 - _tmp1629 * _tmp967;
  const Scalar _tmp1632 = _tmp1628 * _tmp246;
  const Scalar _tmp1633 = _tmp1627 * _tmp254 + _tmp1630 * _tmp1632 - _tmp1632 * _tmp967;
  const Scalar _tmp1634 = _tmp365 * (_tmp1548 * _tmp352 + _tmp1549 * _tmp354 + _tmp1550 * _tmp353);
  const Scalar _tmp1635 = _tmp361 * (_tmp1552 * _tmp354 + _tmp363);
  const Scalar _tmp1636 =
      (Scalar(1) / Scalar(2)) * _tmp1482 * _tmp1635 + (Scalar(1) / Scalar(2)) * _tmp1634 * _tmp910;
  const Scalar _tmp1637 = _tmp1636 * _tmp362;
  const Scalar _tmp1638 = _tmp182 * _tmp914;
  const Scalar _tmp1639 = _tmp1635 * _tmp374 + _tmp1637 * _tmp1638 - _tmp1637 * _tmp917;
  const Scalar _tmp1640 = _tmp541 * (_tmp1552 * _tmp533 + _tmp543);
  const Scalar _tmp1641 = _tmp545 * (_tmp1548 * _tmp532 + _tmp1549 * _tmp533 + _tmp1550 * _tmp534);
  const Scalar _tmp1642 = _tmp1076 * _tmp1641 + _tmp1455 * _tmp1640;
  const Scalar _tmp1643 = _tmp1079 * _tmp1642;
  const Scalar _tmp1644 = _tmp1078 * _tmp1643 - _tmp1082 * _tmp1642 + _tmp1641 * _tmp554;
  const Scalar _tmp1645 = _tmp119 * _tmp1623;
  const Scalar _tmp1646 =
      _tmp1612 * priors_1_0_sqrt_info(0, 3) + _tmp1614 * priors_1_0_sqrt_info(0, 2) +
      _tmp1616 * _tmp838 + _tmp1617 * priors_1_0_sqrt_info(0, 2) +
      _tmp1618 * priors_1_0_sqrt_info(0, 1) + _tmp1619 * priors_1_0_sqrt_info(0, 4) -
      _tmp1620 * _tmp838 - _tmp1621 * priors_1_0_sqrt_info(0, 2) -
      _tmp1622 * priors_1_0_sqrt_info(0, 1) + _tmp1624 * priors_1_0_sqrt_info(0, 0) +
      _tmp1645 * priors_1_0_sqrt_info(0, 1);
  const Scalar _tmp1647 = _tmp125 * _tmp1620;
  const Scalar _tmp1648 =
      _tmp141 * _tmp1623 + _tmp1537 * _tmp1616 + _tmp1612 * priors_1_0_sqrt_info(5, 3) +
      _tmp1614 * priors_1_0_sqrt_info(5, 2) + _tmp1617 * priors_1_0_sqrt_info(5, 2) +
      _tmp1618 * priors_1_0_sqrt_info(5, 1) + _tmp1619 * priors_1_0_sqrt_info(5, 4) -
      _tmp1621 * priors_1_0_sqrt_info(5, 2) - _tmp1622 * priors_1_0_sqrt_info(5, 1) +
      _tmp1624 * priors_1_0_sqrt_info(5, 0) - _tmp1647 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1649 = _tmp661 * (_tmp1552 * _tmp653 + _tmp663);
  const Scalar _tmp1650 = _tmp665 * (_tmp1548 * _tmp652 + _tmp1549 * _tmp653 + _tmp1550 * _tmp654);
  const Scalar _tmp1651 = _tmp1248 * _tmp1650 + _tmp1476 * _tmp1649;
  const Scalar _tmp1652 = -_tmp1253 * _tmp1651 + _tmp1255 * _tmp1651 + _tmp1649 * _tmp674;
  const Scalar _tmp1653 = _tmp173 * (_tmp1552 * _tmp166 + _tmp175);
  const Scalar _tmp1654 = _tmp177 * (_tmp1548 * _tmp158 + _tmp1549 * _tmp166 + _tmp1550 * _tmp162);
  const Scalar _tmp1655 = _tmp1010 * _tmp1654 + _tmp1448 * _tmp1653;
  const Scalar _tmp1656 = _tmp1015 * _tmp1655 - _tmp1017 * _tmp1655 + _tmp1653 * _tmp194;
  const Scalar _tmp1657 = _tmp601 * (_tmp1552 * _tmp593 + _tmp603);
  const Scalar _tmp1658 = _tmp605 * (_tmp1548 * _tmp592 + _tmp1549 * _tmp593 + _tmp1550 * _tmp594);
  const Scalar _tmp1659 = _tmp1044 * _tmp1658 + _tmp1466 * _tmp1657;
  const Scalar _tmp1660 = _tmp1049 * _tmp1659;
  const Scalar _tmp1661 = -_tmp1156 * _tmp1660 + _tmp1158 * _tmp1659 + _tmp1657 * _tmp614;
  const Scalar _tmp1662 = -_tmp1319 * _tmp1571 + _tmp1320 * _tmp1571 + _tmp1570 * _tmp434;
  const Scalar _tmp1663 =
      _tmp1150 * _tmp1594 - _tmp1593 * priors_0_1_sqrt_info(0, 2) +
      _tmp1595 * priors_0_1_sqrt_info(0, 0) + _tmp1597 * priors_0_1_sqrt_info(0, 1) +
      _tmp1599 * priors_0_1_sqrt_info(0, 2) + _tmp1600 * priors_0_1_sqrt_info(0, 0) -
      _tmp1601 * priors_0_1_sqrt_info(0, 0) - _tmp1602 * priors_0_1_sqrt_info(0, 1) +
      _tmp1603 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp1664 = -_tmp1262 * _tmp1651 + _tmp1263 * _tmp1651 + _tmp1650 * _tmp674;
  const Scalar _tmp1665 = _tmp1297 * _tmp1580 - _tmp1540 * _tmp1580 + _tmp1578 * _tmp344;
  const Scalar _tmp1666 = _tmp1221 * _tmp1643 - _tmp1222 * _tmp1642 + _tmp1640 * _tmp554;
  const Scalar _tmp1667 = _tmp125 * _tmp1616;
  const Scalar _tmp1668 =
      _tmp1211 * _tmp1616 - _tmp1211 * _tmp1620 + _tmp136 * _tmp1623 +
      _tmp1612 * priors_1_0_sqrt_info(3, 3) + _tmp1614 * priors_1_0_sqrt_info(3, 2) +
      _tmp1618 * priors_1_0_sqrt_info(3, 1) + _tmp1619 * priors_1_0_sqrt_info(3, 4) -
      _tmp1622 * priors_1_0_sqrt_info(3, 1) + _tmp1624 * priors_1_0_sqrt_info(3, 0) -
      _tmp1647 * priors_1_0_sqrt_info(3, 0) + _tmp1667 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1669 = _tmp485 * (_tmp1548 * _tmp472 + _tmp1549 * _tmp474 + _tmp1550 * _tmp473);
  const Scalar _tmp1670 = _tmp481 * (_tmp1552 * _tmp474 + _tmp483);
  const Scalar _tmp1671 = _tmp1123 * _tmp1669 + _tmp1496 * _tmp1670;
  const Scalar _tmp1672 = _tmp1328 * _tmp1671 - _tmp1329 * _tmp1671 + _tmp1669 * _tmp494;
  const Scalar _tmp1673 = _tmp1594 * _tmp58;
  const Scalar _tmp1674 =
      -_tmp1593 * priors_0_1_sqrt_info(3, 2) + _tmp1595 * priors_0_1_sqrt_info(3, 0) +
      _tmp1597 * priors_0_1_sqrt_info(3, 1) + _tmp1599 * priors_0_1_sqrt_info(3, 2) +
      _tmp1600 * priors_0_1_sqrt_info(3, 0) - _tmp1601 * priors_0_1_sqrt_info(3, 0) -
      _tmp1602 * priors_0_1_sqrt_info(3, 1) + _tmp1603 * priors_0_1_sqrt_info(3, 1) +
      _tmp1673 * priors_0_1_sqrt_info(3, 2);
  const Scalar _tmp1675 = _tmp391 * (_tmp1552 * _tmp383 + _tmp393);
  const Scalar _tmp1676 = _tmp395 * (_tmp1548 * _tmp382 + _tmp1549 * _tmp383 + _tmp1550 * _tmp384);
  const Scalar _tmp1677 = _tmp1419 * _tmp1675 + _tmp1676 * _tmp982;
  const Scalar _tmp1678 = -_tmp1302 * _tmp1677 + _tmp1303 * _tmp1677 + _tmp1676 * _tmp404;
  const Scalar _tmp1679 = _tmp755 * (_tmp1548 * _tmp742 + _tmp1549 * _tmp743 + _tmp1550 * _tmp744);
  const Scalar _tmp1680 = _tmp751 * (_tmp1552 * _tmp743 + _tmp753);
  const Scalar _tmp1681 = _tmp1272 * _tmp1679 + _tmp1527 * _tmp1680;
  const Scalar _tmp1682 = -_tmp1278 * _tmp1681 + _tmp1280 * _tmp1681 + _tmp1680 * _tmp764;
  const Scalar _tmp1683 = _tmp1153 * _tmp1554 - _tmp1154 * _tmp1554 + _tmp1553 * _tmp464;
  const Scalar _tmp1684 =
      _tmp1225 * _tmp1598 - _tmp1226 * _tmp1592 + _tmp1594 * _tmp67 +
      _tmp1595 * priors_0_1_sqrt_info(5, 0) + _tmp1596 * _tmp66 +
      _tmp1600 * priors_0_1_sqrt_info(5, 0) - _tmp1601 * priors_0_1_sqrt_info(5, 0) -
      _tmp1602 * priors_0_1_sqrt_info(5, 1) + _tmp1603 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp1685 =
      -_tmp1593 * priors_0_1_sqrt_info(1, 2) + _tmp1595 * priors_0_1_sqrt_info(1, 0) +
      _tmp1597 * priors_0_1_sqrt_info(1, 1) + _tmp1599 * priors_0_1_sqrt_info(1, 2) +
      _tmp1600 * priors_0_1_sqrt_info(1, 0) - _tmp1601 * priors_0_1_sqrt_info(1, 0) -
      _tmp1602 * priors_0_1_sqrt_info(1, 1) + _tmp1603 * priors_0_1_sqrt_info(1, 1) +
      _tmp1673 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp1686 = _tmp1675 * _tmp404 - _tmp1677 * _tmp986 + _tmp1677 * _tmp988;
  const Scalar _tmp1687 = -_tmp1170 * _tmp1563 + _tmp1172 * _tmp1562 + _tmp1561 * _tmp704;
  const Scalar _tmp1688 =
      _tmp1067 * _tmp1613 + _tmp138 * _tmp1623 + _tmp1612 * priors_1_0_sqrt_info(4, 3) +
      _tmp1617 * priors_1_0_sqrt_info(4, 2) + _tmp1618 * priors_1_0_sqrt_info(4, 1) +
      _tmp1619 * priors_1_0_sqrt_info(4, 4) - _tmp1621 * priors_1_0_sqrt_info(4, 2) -
      _tmp1622 * priors_1_0_sqrt_info(4, 1) + _tmp1624 * priors_1_0_sqrt_info(4, 0) -
      _tmp1647 * priors_1_0_sqrt_info(4, 0) + _tmp1667 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1689 =
      _tmp1258 * _tmp1616 - _tmp1258 * _tmp1620 + _tmp1259 * _tmp1616 +
      _tmp1612 * priors_1_0_sqrt_info(1, 3) + _tmp1614 * priors_1_0_sqrt_info(1, 2) +
      _tmp1618 * priors_1_0_sqrt_info(1, 1) + _tmp1619 * priors_1_0_sqrt_info(1, 4) -
      _tmp1622 * priors_1_0_sqrt_info(1, 1) + _tmp1624 * priors_1_0_sqrt_info(1, 0) +
      _tmp1645 * priors_1_0_sqrt_info(1, 1) - _tmp1647 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1690 = -_tmp1518 * _tmp1655 + _tmp1519 * _tmp1655 + _tmp1654 * _tmp194;
  const Scalar _tmp1691 =
      _tmp1325 * _tmp1598 + _tmp1401 * _tmp1594 - _tmp1593 * priors_0_1_sqrt_info(4, 2) +
      _tmp1596 * _tmp64 + _tmp1600 * priors_0_1_sqrt_info(4, 0) -
      _tmp1601 * priors_0_1_sqrt_info(4, 0) - _tmp1602 * priors_0_1_sqrt_info(4, 1) +
      _tmp1603 * priors_0_1_sqrt_info(4, 1) + _tmp1673 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp1692 = _tmp1425 * _tmp1567 - _tmp1426 * _tmp1567 + _tmp1565 * _tmp584;
  const Scalar _tmp1693 = _tmp305 * (_tmp1548 * _tmp292 + _tmp1549 * _tmp294 + _tmp1550 * _tmp293);
  const Scalar _tmp1694 = _tmp301 * (_tmp1552 * _tmp294 + _tmp303);
  const Scalar _tmp1695 = _tmp1199 * _tmp1693 + _tmp1408 * _tmp1694;
  const Scalar _tmp1696 = _tmp1201 * _tmp1695;
  const Scalar _tmp1697 = -_tmp1202 * _tmp1696 + _tmp1204 * _tmp1696 + _tmp1693 * _tmp314;
  const Scalar _tmp1698 = _tmp1127 * _tmp1671 - _tmp1129 * _tmp1671 + _tmp1670 * _tmp494;
  const Scalar _tmp1699 = _tmp1283 * _tmp1681 - _tmp1284 * _tmp1681 + _tmp1679 * _tmp764;
  const Scalar _tmp1700 = -_tmp1093 * _tmp1608 + _tmp1095 * _tmp1608 + _tmp1607 * _tmp524;
  const Scalar _tmp1701 = _tmp1214 * _tmp1575 - _tmp1215 * _tmp1575 + _tmp1574 * _tmp284;
  const Scalar _tmp1702 = _tmp1636 * _tmp366;
  const Scalar _tmp1703 = _tmp1634 * _tmp374 + _tmp1638 * _tmp1702 - _tmp1702 * _tmp917;
  const Scalar _tmp1704 = -_tmp1208 * _tmp1695 + _tmp1209 * _tmp1695 + _tmp1694 * _tmp314;
  const Scalar _tmp1705 = -_tmp1046 * _tmp1660 + _tmp1048 * _tmp1659 + _tmp1658 * _tmp614;
  const Scalar _tmp1706 = _tmp1289 * landmarks_5_;
  const Scalar _tmp1707 = _tmp335 * landmarks_5_;
  const Scalar _tmp1708 = _tmp106 * _tmp1706 - _tmp1707 * _tmp85;
  const Scalar _tmp1709 = _tmp331 * landmarks_5_;
  const Scalar _tmp1710 = _tmp1512 * landmarks_5_;
  const Scalar _tmp1711 = _tmp106 * _tmp1710 - _tmp1709 * _tmp92;
  const Scalar _tmp1712 = _tmp1291 * _tmp1708 + _tmp1514 * _tmp1711;
  const Scalar _tmp1713 = _tmp1298 * _tmp1712;
  const Scalar _tmp1714 = _tmp1296 * _tmp1712;
  const Scalar _tmp1715 = -_tmp1322 * _tmp1713 + _tmp1322 * _tmp1714 + _tmp1711 * _tmp344;
  const Scalar _tmp1716 = _tmp79 - 1;
  const Scalar _tmp1717 = _tmp1716 + _tmp90;
  const Scalar _tmp1718 = _tmp1349 * priors_1_0_sqrt_info(5, 5) +
                          _tmp1717 * priors_1_0_sqrt_info(5, 3) +
                          _tmp836 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp1719 = _tmp485 * landmarks_10_;
  const Scalar _tmp1720 = _tmp106 * landmarks_10_;
  const Scalar _tmp1721 = _tmp1121 * _tmp1720 - _tmp1719 * _tmp85;
  const Scalar _tmp1722 = _tmp481 * landmarks_10_;
  const Scalar _tmp1723 = _tmp1493 * _tmp1720 - _tmp1722 * _tmp92;
  const Scalar _tmp1724 = _tmp1123 * _tmp1721 + _tmp1496 * _tmp1723;
  const Scalar _tmp1725 = _tmp1127 * _tmp1724 - _tmp1129 * _tmp1724 + _tmp1723 * _tmp494;
  const Scalar _tmp1726 = _tmp365 * landmarks_6_;
  const Scalar _tmp1727 = _tmp908 * landmarks_6_;
  const Scalar _tmp1728 = _tmp106 * _tmp1727 - _tmp1726 * _tmp85;
  const Scalar _tmp1729 = _tmp905 * landmarks_6_;
  const Scalar _tmp1730 = _tmp361 * landmarks_6_;
  const Scalar _tmp1731 = _tmp106 * _tmp1729 - _tmp1730 * _tmp92;
  const Scalar _tmp1732 = _tmp1482 * _tmp1731 + _tmp1728 * _tmp910;
  const Scalar _tmp1733 = _tmp1312 * _tmp1732 - _tmp1313 * _tmp1732 + _tmp1728 * _tmp374;
  const Scalar _tmp1734 = _tmp755 * landmarks_19_;
  const Scalar _tmp1735 = _tmp1270 * landmarks_19_;
  const Scalar _tmp1736 = _tmp106 * _tmp1735 - _tmp1734 * _tmp85;
  const Scalar _tmp1737 = _tmp751 * landmarks_19_;
  const Scalar _tmp1738 = _tmp1525 * landmarks_19_;
  const Scalar _tmp1739 = _tmp106 * _tmp1738 - _tmp1737 * _tmp92;
  const Scalar _tmp1740 = _tmp1272 * _tmp1736 + _tmp1527 * _tmp1739;
  const Scalar _tmp1741 = _tmp1283 * _tmp1740 - _tmp1284 * _tmp1740 + _tmp1736 * _tmp764;
  const Scalar _tmp1742 = _tmp515 * landmarks_11_;
  const Scalar _tmp1743 = _tmp1442 * landmarks_11_;
  const Scalar _tmp1744 = _tmp106 * _tmp1743 - _tmp1742 * _tmp85;
  const Scalar _tmp1745 = _tmp511 * landmarks_11_;
  const Scalar _tmp1746 = _tmp1438 * landmarks_11_;
  const Scalar _tmp1747 = _tmp106 * _tmp1746 - _tmp1745 * _tmp92;
  const Scalar _tmp1748 = _tmp1088 * _tmp1744 + _tmp1440 * _tmp1747;
  const Scalar _tmp1749 = -_tmp1093 * _tmp1748 + _tmp1095 * _tmp1748 + _tmp1744 * _tmp524;
  const Scalar _tmp1750 = _tmp215 * landmarks_1_;
  const Scalar _tmp1751 = _tmp106 * landmarks_1_;
  const Scalar _tmp1752 = _tmp1102 * _tmp1751 - _tmp1750 * _tmp85;
  const Scalar _tmp1753 = _tmp211 * landmarks_1_;
  const Scalar _tmp1754 = _tmp1501 * _tmp1751 - _tmp1753 * _tmp92;
  const Scalar _tmp1755 = _tmp1104 * _tmp1752 + _tmp1503 * _tmp1754;
  const Scalar _tmp1756 = _tmp1107 * _tmp1755;
  const Scalar _tmp1757 = -_tmp1217 * _tmp1756 + _tmp1219 * _tmp1755 + _tmp1752 * _tmp224;
  const Scalar _tmp1758 = _tmp106 * landmarks_12_;
  const Scalar _tmp1759 = _tmp545 * landmarks_12_;
  const Scalar _tmp1760 = _tmp1074 * _tmp1758 - _tmp1759 * _tmp85;
  const Scalar _tmp1761 = _tmp541 * landmarks_12_;
  const Scalar _tmp1762 = _tmp1453 * _tmp1758 - _tmp1761 * _tmp92;
  const Scalar _tmp1763 = _tmp1076 * _tmp1760 + _tmp1455 * _tmp1762;
  const Scalar _tmp1764 = _tmp1080 * _tmp1763 - _tmp1082 * _tmp1763 + _tmp1760 * _tmp554;
  const Scalar _tmp1765 = _tmp1731 * _tmp374 + _tmp1732 * _tmp916 - _tmp1732 * _tmp919;
  const Scalar _tmp1766 = _tmp1113 * landmarks_2_;
  const Scalar _tmp1767 = _tmp241 * landmarks_2_;
  const Scalar _tmp1768 = _tmp106 * _tmp1766 - _tmp1767 * _tmp92;
  const Scalar _tmp1769 = _tmp245 * landmarks_2_;
  const Scalar _tmp1770 = _tmp962 * landmarks_2_;
  const Scalar _tmp1771 = _tmp106 * _tmp1770 - _tmp1769 * _tmp85;
  const Scalar _tmp1772 = _tmp1460 * _tmp1768 + _tmp1771 * _tmp964;
  const Scalar _tmp1773 = -_tmp1112 * _tmp1772 + _tmp1114 * _tmp1772 + _tmp1768 * _tmp254;
  const Scalar _tmp1774 = _tmp12 * priors_0_1_sqrt_info(3, 4) +
                          _tmp55 * priors_0_1_sqrt_info(3, 5) + _tmp7 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp1775 = _tmp1052 * landmarks_9_;
  const Scalar _tmp1776 = _tmp1054 * _tmp1775;
  const Scalar _tmp1777 = _tmp455 * landmarks_9_;
  const Scalar _tmp1778 = _tmp106 * _tmp1776 - _tmp1777 * _tmp85;
  const Scalar _tmp1779 = _tmp451 * landmarks_9_;
  const Scalar _tmp1780 = _tmp1373 * _tmp1775;
  const Scalar _tmp1781 = _tmp106 * _tmp1780 - _tmp1779 * _tmp92;
  const Scalar _tmp1782 = _tmp1056 * _tmp1778 + _tmp1375 * _tmp1781;
  const Scalar _tmp1783 = _tmp1062 * _tmp1782;
  const Scalar _tmp1784 = -_tmp1059 * _tmp1783 + _tmp1061 * _tmp1782 + _tmp1778 * _tmp464;
  const Scalar _tmp1785 = _tmp12 * priors_0_1_sqrt_info(4, 4) +
                          _tmp55 * priors_0_1_sqrt_info(4, 5) + _tmp7 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp1786 = _tmp1179 * landmarks_13_;
  const Scalar _tmp1787 = _tmp571 * landmarks_13_;
  const Scalar _tmp1788 = _tmp106 * _tmp1786 - _tmp1787 * _tmp92;
  const Scalar _tmp1789 = _tmp1181 * landmarks_13_;
  const Scalar _tmp1790 = _tmp575 * landmarks_13_;
  const Scalar _tmp1791 = _tmp106 * _tmp1789 - _tmp1790 * _tmp85;
  const Scalar _tmp1792 = _tmp1183 * _tmp1791 + _tmp1365 * _tmp1788;
  const Scalar _tmp1793 = _tmp1368 * _tmp1792 - _tmp1370 * _tmp1792 + _tmp1788 * _tmp584;
  const Scalar _tmp1794 = -_tmp1278 * _tmp1740 + _tmp1280 * _tmp1740 + _tmp1739 * _tmp764;
  const Scalar _tmp1795 = _tmp177 * landmarks_0_;
  const Scalar _tmp1796 = _tmp1520 * landmarks_0_;
  const Scalar _tmp1797 = _tmp106 * _tmp1796 - _tmp1795 * _tmp85;
  const Scalar _tmp1798 = _tmp173 * landmarks_0_;
  const Scalar _tmp1799 = _tmp1446 * landmarks_0_;
  const Scalar _tmp1800 = _tmp106 * _tmp1799 - _tmp1798 * _tmp92;
  const Scalar _tmp1801 = _tmp1010 * _tmp1797 + _tmp1448 * _tmp1800;
  const Scalar _tmp1802 = -_tmp1518 * _tmp1801 + _tmp1519 * _tmp1801 + _tmp1797 * _tmp194;
  const Scalar _tmp1803 = _tmp1146 * _tmp1748;
  const Scalar _tmp1804 = -_tmp1091 * _tmp1803 + _tmp1094 * _tmp1803 + _tmp1747 * _tmp524;
  const Scalar _tmp1805 = _tmp391 * landmarks_7_;
  const Scalar _tmp1806 = _tmp977 * _tmp979;
  const Scalar _tmp1807 = _tmp1806 * landmarks_7_;
  const Scalar _tmp1808 = _tmp106 * _tmp1807 - _tmp1805 * _tmp92;
  const Scalar _tmp1809 = _tmp395 * landmarks_7_;
  const Scalar _tmp1810 = _tmp977 * _tmp980;
  const Scalar _tmp1811 = _tmp1810 * landmarks_7_;
  const Scalar _tmp1812 = _tmp106 * _tmp1811 - _tmp1809 * _tmp85;
  const Scalar _tmp1813 = _tmp1419 * _tmp1808 + _tmp1812 * _tmp982;
  const Scalar _tmp1814 = _tmp1813 * _tmp984;
  const Scalar _tmp1815 = _tmp1808 * _tmp404 - _tmp1814 * _tmp985 + _tmp1814 * _tmp987;
  const Scalar _tmp1816 = _tmp106 * landmarks_15_;
  const Scalar _tmp1817 = _tmp631 * landmarks_15_;
  const Scalar _tmp1818 = _tmp1004 * _tmp1816 - _tmp1817 * _tmp92;
  const Scalar _tmp1819 = _tmp635 * landmarks_15_;
  const Scalar _tmp1820 = _tmp1816 * _tmp994 - _tmp1819 * _tmp85;
  const Scalar _tmp1821 = _tmp1471 * _tmp1818 + _tmp1820 * _tmp996;
  const Scalar _tmp1822 = -_tmp1305 * _tmp1821 + _tmp1306 * _tmp1821 + _tmp1820 * _tmp644;
  const Scalar _tmp1823 = -_tmp1106 * _tmp1756 + _tmp1110 * _tmp1755 + _tmp1754 * _tmp224;
  const Scalar _tmp1824 = _tmp1328 * _tmp1724 - _tmp1329 * _tmp1724 + _tmp1721 * _tmp494;
  const Scalar _tmp1825 = _tmp12 * priors_0_1_sqrt_info(1, 4) +
                          _tmp55 * priors_0_1_sqrt_info(1, 5) + _tmp7 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp1826 = _tmp1042 * landmarks_14_;
  const Scalar _tmp1827 = _tmp605 * landmarks_14_;
  const Scalar _tmp1828 = _tmp106 * _tmp1826 - _tmp1827 * _tmp85;
  const Scalar _tmp1829 = _tmp1159 * landmarks_14_;
  const Scalar _tmp1830 = _tmp601 * landmarks_14_;
  const Scalar _tmp1831 = _tmp106 * _tmp1829 - _tmp1830 * _tmp92;
  const Scalar _tmp1832 = _tmp1044 * _tmp1828 + _tmp1466 * _tmp1831;
  const Scalar _tmp1833 = _tmp1048 * _tmp1832 - _tmp1050 * _tmp1832 + _tmp1828 * _tmp614;
  const Scalar _tmp1834 = _tmp12 * priors_0_1_sqrt_info(0, 4) +
                          _tmp55 * priors_0_1_sqrt_info(0, 5) + _tmp7 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp1835 = _tmp106 * landmarks_18_;
  const Scalar _tmp1836 = _tmp721 * landmarks_18_;
  const Scalar _tmp1837 = _tmp1036 * _tmp1835 - _tmp1836 * _tmp92;
  const Scalar _tmp1838 = _tmp725 * landmarks_18_;
  const Scalar _tmp1839 = _tmp1026 * _tmp1835 - _tmp1838 * _tmp85;
  const Scalar _tmp1840 = _tmp1028 * _tmp1839 + _tmp1360 * _tmp1837;
  const Scalar _tmp1841 = _tmp1190 * _tmp1840;
  const Scalar _tmp1842 = -_tmp1030 * _tmp1841 + _tmp1033 * _tmp1841 + _tmp1839 * _tmp734;
  const Scalar _tmp1843 = _tmp1425 * _tmp1792 - _tmp1426 * _tmp1792 + _tmp1791 * _tmp584;
  const Scalar _tmp1844 = -_tmp1157 * _tmp1832 + _tmp1158 * _tmp1832 + _tmp1831 * _tmp614;
  const Scalar _tmp1845 = _tmp1246 * landmarks_16_;
  const Scalar _tmp1846 = _tmp665 * landmarks_16_;
  const Scalar _tmp1847 = _tmp106 * _tmp1845 - _tmp1846 * _tmp85;
  const Scalar _tmp1848 = _tmp661 * landmarks_16_;
  const Scalar _tmp1849 = _tmp1256 * landmarks_16_;
  const Scalar _tmp1850 = _tmp106 * _tmp1849 - _tmp1848 * _tmp92;
  const Scalar _tmp1851 = _tmp1248 * _tmp1847 + _tmp1476 * _tmp1850;
  const Scalar _tmp1852 = -_tmp1262 * _tmp1851 + _tmp1263 * _tmp1851 + _tmp1847 * _tmp674;
  const Scalar _tmp1853 = _tmp1015 * _tmp1801 - _tmp1017 * _tmp1801 + _tmp1800 * _tmp194;
  const Scalar _tmp1854 = _tmp1000 * _tmp1821 - _tmp1003 * _tmp1821 + _tmp1818 * _tmp644;
  const Scalar _tmp1855 = _tmp12 * priors_0_1_sqrt_info(2, 4) +
                          _tmp55 * priors_0_1_sqrt_info(2, 5) + _tmp7 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp1856 = _tmp1349 * priors_1_0_sqrt_info(2, 5) +
                          _tmp1717 * priors_1_0_sqrt_info(2, 3) +
                          _tmp836 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp1857 = _tmp1349 * priors_1_0_sqrt_info(4, 5) +
                          _tmp1717 * priors_1_0_sqrt_info(4, 3) +
                          _tmp836 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp1858 = _tmp1349 * priors_1_0_sqrt_info(1, 5) +
                          _tmp1717 * priors_1_0_sqrt_info(1, 3) +
                          _tmp836 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp1859 = _tmp305 * landmarks_4_;
  const Scalar _tmp1860 = _tmp106 * landmarks_4_;
  const Scalar _tmp1861 = _tmp1411 * _tmp1860 - _tmp1859 * _tmp85;
  const Scalar _tmp1862 = _tmp301 * landmarks_4_;
  const Scalar _tmp1863 = _tmp1406 * _tmp1860 - _tmp1862 * _tmp92;
  const Scalar _tmp1864 = _tmp1199 * _tmp1861 + _tmp1408 * _tmp1863;
  const Scalar _tmp1865 = -_tmp1203 * _tmp1864 + _tmp1205 * _tmp1864 + _tmp1861 * _tmp314;
  const Scalar _tmp1866 = -_tmp1295 * _tmp1713 + _tmp1295 * _tmp1714 + _tmp1708 * _tmp344;
  const Scalar _tmp1867 = _tmp421 * landmarks_8_;
  const Scalar _tmp1868 = _tmp1431 * landmarks_8_;
  const Scalar _tmp1869 = _tmp106 * _tmp1868 - _tmp1867 * _tmp92;
  const Scalar _tmp1870 = _tmp1233 * landmarks_8_;
  const Scalar _tmp1871 = _tmp425 * landmarks_8_;
  const Scalar _tmp1872 = _tmp106 * _tmp1870 - _tmp1871 * _tmp85;
  const Scalar _tmp1873 = _tmp1235 * _tmp1872 + _tmp1433 * _tmp1869;
  const Scalar _tmp1874 = -_tmp1319 * _tmp1873 + _tmp1320 * _tmp1873 + _tmp1872 * _tmp434;
  const Scalar _tmp1875 = -_tmp1253 * _tmp1851 + _tmp1255 * _tmp1851 + _tmp1850 * _tmp674;
  const Scalar _tmp1876 = _tmp1221 * _tmp1763;
  const Scalar _tmp1877 = _tmp1079 * _tmp1876 - _tmp1081 * _tmp1876 + _tmp1762 * _tmp554;
  const Scalar _tmp1878 = _tmp1239 * _tmp1873 - _tmp1241 * _tmp1873 + _tmp1869 * _tmp434;
  const Scalar _tmp1879 = _tmp1380 * landmarks_17_;
  const Scalar _tmp1880 = _tmp691 * landmarks_17_;
  const Scalar _tmp1881 = _tmp106 * _tmp1879 - _tmp1880 * _tmp92;
  const Scalar _tmp1882 = _tmp695 * landmarks_17_;
  const Scalar _tmp1883 = _tmp1166 * landmarks_17_;
  const Scalar _tmp1884 = _tmp106 * _tmp1883 - _tmp1882 * _tmp85;
  const Scalar _tmp1885 = _tmp1168 * _tmp1884 + _tmp1382 * _tmp1881;
  const Scalar _tmp1886 = -_tmp1309 * _tmp1885 + _tmp1310 * _tmp1885 + _tmp1881 * _tmp704;
  const Scalar _tmp1887 = -_tmp1032 * _tmp1840 + _tmp1034 * _tmp1840 + _tmp1837 * _tmp734;
  const Scalar _tmp1888 = _tmp1771 * _tmp254 - _tmp1772 * _tmp969 + _tmp1772 * _tmp972;
  const Scalar _tmp1889 = _tmp1349 * priors_1_0_sqrt_info(3, 5) +
                          _tmp1717 * priors_1_0_sqrt_info(3, 3) +
                          _tmp836 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp1890 = _tmp12 * priors_0_1_sqrt_info(5, 4) +
                          _tmp55 * priors_0_1_sqrt_info(5, 5) + _tmp7 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp1891 = -_tmp1302 * _tmp1813 + _tmp1303 * _tmp1813 + _tmp1812 * _tmp404;
  const Scalar _tmp1892 = -_tmp1152 * _tmp1783 + _tmp1153 * _tmp1782 + _tmp1781 * _tmp464;
  const Scalar _tmp1893 = _tmp1172 * _tmp1885 - _tmp1174 * _tmp1885 + _tmp1884 * _tmp704;
  const Scalar _tmp1894 = _tmp1134 * landmarks_3_;
  const Scalar _tmp1895 = _tmp275 * landmarks_3_;
  const Scalar _tmp1896 = _tmp106 * _tmp1894 - _tmp1895 * _tmp85;
  const Scalar _tmp1897 = _tmp1486 * landmarks_3_;
  const Scalar _tmp1898 = _tmp271 * landmarks_3_;
  const Scalar _tmp1899 = _tmp106 * _tmp1897 - _tmp1898 * _tmp92;
  const Scalar _tmp1900 = _tmp1136 * _tmp1896 + _tmp1488 * _tmp1899;
  const Scalar _tmp1901 = _tmp1142 * _tmp1900 - _tmp1144 * _tmp1900 + _tmp1896 * _tmp284;
  const Scalar _tmp1902 = _tmp1214 * _tmp1900 - _tmp1215 * _tmp1900 + _tmp1899 * _tmp284;
  const Scalar _tmp1903 = _tmp1349 * priors_1_0_sqrt_info(0, 5) +
                          _tmp1717 * priors_1_0_sqrt_info(0, 3) +
                          _tmp836 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp1904 = -_tmp1208 * _tmp1864 + _tmp1209 * _tmp1864 + _tmp1863 * _tmp314;
  const Scalar _tmp1905 = _tmp103 * _tmp1845 - _tmp1846 * _tmp81;
  const Scalar _tmp1906 = _tmp103 * _tmp1849 - _tmp1848 * _tmp98;
  const Scalar _tmp1907 = _tmp1248 * _tmp1905 + _tmp1476 * _tmp1906;
  const Scalar _tmp1908 = -_tmp1262 * _tmp1907 + _tmp1263 * _tmp1907 + _tmp1905 * _tmp674;
  const Scalar _tmp1909 = _tmp14 * priors_0_1_sqrt_info(1, 4) + _tmp4 * priors_0_1_sqrt_info(1, 3) +
                          _tmp56 * priors_0_1_sqrt_info(1, 5);
  const Scalar _tmp1910 = _tmp14 * priors_0_1_sqrt_info(0, 4) + _tmp4 * priors_0_1_sqrt_info(0, 3) +
                          _tmp56 * priors_0_1_sqrt_info(0, 5);
  const Scalar _tmp1911 = _tmp103 * _tmp1746 - _tmp1745 * _tmp98;
  const Scalar _tmp1912 = _tmp103 * _tmp1743 - _tmp1742 * _tmp81;
  const Scalar _tmp1913 = _tmp1088 * _tmp1912 + _tmp1440 * _tmp1911;
  const Scalar _tmp1914 = _tmp1147 * _tmp1913 - _tmp1148 * _tmp1913 + _tmp1911 * _tmp524;
  const Scalar _tmp1915 = _tmp14 * priors_0_1_sqrt_info(2, 4) + _tmp4 * priors_0_1_sqrt_info(2, 3) +
                          _tmp56 * priors_0_1_sqrt_info(2, 5);
  const Scalar _tmp1916 = _tmp103 * _tmp1789 - _tmp1790 * _tmp81;
  const Scalar _tmp1917 = _tmp103 * _tmp1786 - _tmp1787 * _tmp98;
  const Scalar _tmp1918 = _tmp1183 * _tmp1916 + _tmp1365 * _tmp1917;
  const Scalar _tmp1919 = _tmp1425 * _tmp1918 - _tmp1426 * _tmp1918 + _tmp1916 * _tmp584;
  const Scalar _tmp1920 = _tmp103 * _tmp1829 - _tmp1830 * _tmp98;
  const Scalar _tmp1921 = _tmp103 * _tmp1826 - _tmp1827 * _tmp81;
  const Scalar _tmp1922 = _tmp1044 * _tmp1921 + _tmp1466 * _tmp1920;
  const Scalar _tmp1923 = -_tmp1157 * _tmp1922 + _tmp1158 * _tmp1922 + _tmp1920 * _tmp614;
  const Scalar _tmp1924 = _tmp1368 * _tmp1918 - _tmp1370 * _tmp1918 + _tmp1917 * _tmp584;
  const Scalar _tmp1925 = _tmp103 * _tmp1897 - _tmp1898 * _tmp98;
  const Scalar _tmp1926 = _tmp103 * _tmp1894 - _tmp1895 * _tmp81;
  const Scalar _tmp1927 = _tmp1136 * _tmp1926 + _tmp1488 * _tmp1925;
  const Scalar _tmp1928 = _tmp1214 * _tmp1927 - _tmp1215 * _tmp1927 + _tmp1925 * _tmp284;
  const Scalar _tmp1929 = _tmp103 * _tmp1870 - _tmp1871 * _tmp81;
  const Scalar _tmp1930 = _tmp103 * _tmp1868 - _tmp1867 * _tmp98;
  const Scalar _tmp1931 = _tmp1235 * _tmp1929 + _tmp1433 * _tmp1930;
  const Scalar _tmp1932 = _tmp1318 * _tmp1931;
  const Scalar _tmp1933 = _tmp1238 * _tmp1932 - _tmp1240 * _tmp1932 + _tmp1929 * _tmp434;
  const Scalar _tmp1934 = _tmp103 * landmarks_4_;
  const Scalar _tmp1935 = _tmp1411 * _tmp1934 - _tmp1859 * _tmp81;
  const Scalar _tmp1936 = _tmp1406 * _tmp1934 - _tmp1862 * _tmp98;
  const Scalar _tmp1937 = _tmp1199 * _tmp1935 + _tmp1408 * _tmp1936;
  const Scalar _tmp1938 = -_tmp1208 * _tmp1937 + _tmp1209 * _tmp1937 + _tmp1936 * _tmp314;
  const Scalar _tmp1939 = _tmp1716 + _tmp76;
  const Scalar _tmp1940 = _tmp1345 * priors_1_0_sqrt_info(5, 5) +
                          _tmp1549 * priors_1_0_sqrt_info(5, 3) +
                          _tmp1939 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp1941 = _tmp103 * landmarks_1_;
  const Scalar _tmp1942 = _tmp1501 * _tmp1941 - _tmp1753 * _tmp98;
  const Scalar _tmp1943 = _tmp1102 * _tmp1941 - _tmp1750 * _tmp81;
  const Scalar _tmp1944 = _tmp1104 * _tmp1943 + _tmp1503 * _tmp1942;
  const Scalar _tmp1945 = _tmp1106 * _tmp1944;
  const Scalar _tmp1946 = -_tmp1107 * _tmp1945 + _tmp1109 * _tmp1945 + _tmp1942 * _tmp224;
  const Scalar _tmp1947 = _tmp14 * priors_0_1_sqrt_info(3, 4) + _tmp4 * priors_0_1_sqrt_info(3, 3) +
                          _tmp56 * priors_0_1_sqrt_info(3, 5);
  const Scalar _tmp1948 = _tmp1048 * _tmp1922 - _tmp1050 * _tmp1922 + _tmp1921 * _tmp614;
  const Scalar _tmp1949 = _tmp103 * landmarks_18_;
  const Scalar _tmp1950 = _tmp1026 * _tmp1949 - _tmp1838 * _tmp81;
  const Scalar _tmp1951 = _tmp1036 * _tmp1949 - _tmp1836 * _tmp98;
  const Scalar _tmp1952 = _tmp1028 * _tmp1950 + _tmp1360 * _tmp1951;
  const Scalar _tmp1953 = -_tmp1191 * _tmp1952 + _tmp1192 * _tmp1952 + _tmp1950 * _tmp734;
  const Scalar _tmp1954 = _tmp103 * landmarks_15_;
  const Scalar _tmp1955 = -_tmp1819 * _tmp81 + _tmp1954 * _tmp994;
  const Scalar _tmp1956 = _tmp1004 * _tmp1954 - _tmp1817 * _tmp98;
  const Scalar _tmp1957 =
      (Scalar(1) / Scalar(2)) * _tmp1471 * _tmp1956 + (Scalar(1) / Scalar(2)) * _tmp1955 * _tmp996;
  const Scalar _tmp1958 = _tmp1957 * _tmp636;
  const Scalar _tmp1959 = _tmp182 * _tmp998;
  const Scalar _tmp1960 = -_tmp1001 * _tmp1958 + _tmp1955 * _tmp644 + _tmp1958 * _tmp1959;
  const Scalar _tmp1961 = _tmp1345 * priors_1_0_sqrt_info(3, 5) +
                          _tmp1549 * priors_1_0_sqrt_info(3, 3) +
                          _tmp1939 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp1962 = _tmp103 * landmarks_5_;
  const Scalar _tmp1963 = _tmp1289 * _tmp1962 - _tmp1707 * _tmp81;
  const Scalar _tmp1964 = _tmp1512 * _tmp1962 - _tmp1709 * _tmp98;
  const Scalar _tmp1965 = _tmp1291 * _tmp1963 + _tmp1514 * _tmp1964;
  const Scalar _tmp1966 = _tmp1323 * _tmp1965 - _tmp1581 * _tmp1965 + _tmp1964 * _tmp344;
  const Scalar _tmp1967 = _tmp103 * _tmp1883 - _tmp1882 * _tmp81;
  const Scalar _tmp1968 = _tmp103 * _tmp1879 - _tmp1880 * _tmp98;
  const Scalar _tmp1969 = _tmp1168 * _tmp1967 + _tmp1382 * _tmp1968;
  const Scalar _tmp1970 = _tmp1172 * _tmp1969 - _tmp1174 * _tmp1969 + _tmp1967 * _tmp704;
  const Scalar _tmp1971 = _tmp1345 * priors_1_0_sqrt_info(0, 5) +
                          _tmp1549 * priors_1_0_sqrt_info(0, 3) +
                          _tmp1939 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp1972 = _tmp103 * _tmp1735 - _tmp1734 * _tmp81;
  const Scalar _tmp1973 = _tmp103 * _tmp1738 - _tmp1737 * _tmp98;
  const Scalar _tmp1974 = _tmp1272 * _tmp1972 + _tmp1527 * _tmp1973;
  const Scalar _tmp1975 = _tmp1283 * _tmp1974 - _tmp1284 * _tmp1974 + _tmp1972 * _tmp764;
  const Scalar _tmp1976 = _tmp1142 * _tmp1927 - _tmp1144 * _tmp1927 + _tmp1926 * _tmp284;
  const Scalar _tmp1977 = _tmp103 * _tmp1770 - _tmp1769 * _tmp81;
  const Scalar _tmp1978 = _tmp103 * _tmp1766 - _tmp1767 * _tmp98;
  const Scalar _tmp1979 = _tmp1460 * _tmp1978 + _tmp1977 * _tmp964;
  const Scalar _tmp1980 = _tmp1977 * _tmp254 - _tmp1979 * _tmp969 + _tmp1979 * _tmp972;
  const Scalar _tmp1981 = -_tmp1112 * _tmp1979 + _tmp1114 * _tmp1979 + _tmp1978 * _tmp254;
  const Scalar _tmp1982 = _tmp1297 * _tmp1965 - _tmp1540 * _tmp1965 + _tmp1963 * _tmp344;
  const Scalar _tmp1983 = _tmp103 * _tmp1776 - _tmp1777 * _tmp81;
  const Scalar _tmp1984 = _tmp103 * _tmp1780 - _tmp1779 * _tmp98;
  const Scalar _tmp1985 = _tmp1056 * _tmp1983 + _tmp1375 * _tmp1984;
  const Scalar _tmp1986 = _tmp1061 * _tmp1985 - _tmp1063 * _tmp1985 + _tmp1983 * _tmp464;
  const Scalar _tmp1987 = _tmp103 * landmarks_12_;
  const Scalar _tmp1988 = _tmp1453 * _tmp1987 - _tmp1761 * _tmp98;
  const Scalar _tmp1989 = _tmp1074 * _tmp1987 - _tmp1759 * _tmp81;
  const Scalar _tmp1990 = _tmp1076 * _tmp1989 + _tmp1455 * _tmp1988;
  const Scalar _tmp1991 = -_tmp1222 * _tmp1990 + _tmp1223 * _tmp1990 + _tmp1988 * _tmp554;
  const Scalar _tmp1992 = _tmp103 * _tmp1727 - _tmp1726 * _tmp81;
  const Scalar _tmp1993 = _tmp103 * _tmp1729 - _tmp1730 * _tmp98;
  const Scalar _tmp1994 = _tmp1482 * _tmp1993 + _tmp1992 * _tmp910;
  const Scalar _tmp1995 = _tmp1993 * _tmp374 + _tmp1994 * _tmp916 - _tmp1994 * _tmp919;
  const Scalar _tmp1996 = _tmp103 * landmarks_7_;
  const Scalar _tmp1997 = -_tmp1809 * _tmp81 + _tmp1810 * _tmp1996;
  const Scalar _tmp1998 = -_tmp1805 * _tmp98 + _tmp1806 * _tmp1996;
  const Scalar _tmp1999 = _tmp1419 * _tmp1998 + _tmp1997 * _tmp982;
  const Scalar _tmp2000 = _tmp1999 * _tmp985;
  const Scalar _tmp2001 = -_tmp1301 * _tmp2000 + _tmp1303 * _tmp1999 + _tmp1997 * _tmp404;
  const Scalar _tmp2002 = -_tmp1093 * _tmp1913 + _tmp1095 * _tmp1913 + _tmp1912 * _tmp524;
  const Scalar _tmp2003 = -_tmp1218 * _tmp1944 + _tmp1219 * _tmp1944 + _tmp1943 * _tmp224;
  const Scalar _tmp2004 = _tmp1345 * priors_1_0_sqrt_info(1, 5) +
                          _tmp1549 * priors_1_0_sqrt_info(1, 3) +
                          _tmp1939 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp2005 = _tmp1345 * priors_1_0_sqrt_info(2, 5) +
                          _tmp1549 * priors_1_0_sqrt_info(2, 3) +
                          _tmp1939 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2006 = _tmp1345 * priors_1_0_sqrt_info(4, 5) +
                          _tmp1549 * priors_1_0_sqrt_info(4, 3) +
                          _tmp1939 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp2007 = _tmp1239 * _tmp1931 - _tmp1241 * _tmp1931 + _tmp1930 * _tmp434;
  const Scalar _tmp2008 = -_tmp1309 * _tmp1969 + _tmp1310 * _tmp1969 + _tmp1968 * _tmp704;
  const Scalar _tmp2009 = -_tmp1203 * _tmp1937 + _tmp1205 * _tmp1937 + _tmp1935 * _tmp314;
  const Scalar _tmp2010 = _tmp1312 * _tmp1994 - _tmp1313 * _tmp1994 + _tmp1992 * _tmp374;
  const Scalar _tmp2011 = _tmp103 * _tmp1796 - _tmp1795 * _tmp81;
  const Scalar _tmp2012 = _tmp103 * _tmp1799 - _tmp1798 * _tmp98;
  const Scalar _tmp2013 = _tmp1010 * _tmp2011 + _tmp1448 * _tmp2012;
  const Scalar _tmp2014 = -_tmp1518 * _tmp2013 + _tmp1519 * _tmp2013 + _tmp194 * _tmp2011;
  const Scalar _tmp2015 = _tmp14 * priors_0_1_sqrt_info(4, 4) + _tmp4 * priors_0_1_sqrt_info(4, 3) +
                          _tmp56 * priors_0_1_sqrt_info(4, 5);
  const Scalar _tmp2016 = _tmp1080 * _tmp1990 - _tmp1082 * _tmp1990 + _tmp1989 * _tmp554;
  const Scalar _tmp2017 = _tmp103 * landmarks_10_;
  const Scalar _tmp2018 = _tmp1493 * _tmp2017 - _tmp1722 * _tmp98;
  const Scalar _tmp2019 = _tmp1121 * _tmp2017 - _tmp1719 * _tmp81;
  const Scalar _tmp2020 = _tmp1123 * _tmp2019 + _tmp1496 * _tmp2018;
  const Scalar _tmp2021 = _tmp1127 * _tmp2020 - _tmp1129 * _tmp2020 + _tmp2018 * _tmp494;
  const Scalar _tmp2022 = _tmp1251 * _tmp1907;
  const Scalar _tmp2023 = -_tmp1252 * _tmp2022 + _tmp1254 * _tmp2022 + _tmp1906 * _tmp674;
  const Scalar _tmp2024 = _tmp1957 * _tmp632;
  const Scalar _tmp2025 = -_tmp1001 * _tmp2024 + _tmp1956 * _tmp644 + _tmp1959 * _tmp2024;
  const Scalar _tmp2026 = _tmp1153 * _tmp1985 - _tmp1154 * _tmp1985 + _tmp1984 * _tmp464;
  const Scalar _tmp2027 = _tmp1015 * _tmp2013 - _tmp1017 * _tmp2013 + _tmp194 * _tmp2012;
  const Scalar _tmp2028 = -_tmp1032 * _tmp1952 + _tmp1034 * _tmp1952 + _tmp1951 * _tmp734;
  const Scalar _tmp2029 = -_tmp1278 * _tmp1974 + _tmp1280 * _tmp1974 + _tmp1973 * _tmp764;
  const Scalar _tmp2030 = _tmp1998 * _tmp404 + _tmp1999 * _tmp988 - _tmp2000 * _tmp984;
  const Scalar _tmp2031 = _tmp14 * priors_0_1_sqrt_info(5, 4) + _tmp4 * priors_0_1_sqrt_info(5, 3) +
                          _tmp56 * priors_0_1_sqrt_info(5, 5);
  const Scalar _tmp2032 = _tmp1328 * _tmp2020 - _tmp1329 * _tmp2020 + _tmp2019 * _tmp494;
  const Scalar _tmp2033 = _tmp10 * priors_0_1_sqrt_info(4, 3) +
                          _tmp17 * priors_0_1_sqrt_info(4, 4) + _tmp54 * priors_0_1_sqrt_info(4, 5);
  const Scalar _tmp2034 = _tmp105 * _tmp1706 - _tmp1707 * _tmp73;
  const Scalar _tmp2035 = _tmp105 * _tmp1710 - _tmp1709 * _tmp96;
  const Scalar _tmp2036 = _tmp1291 * _tmp2034 + _tmp1514 * _tmp2035;
  const Scalar _tmp2037 = _tmp1297 * _tmp2036 - _tmp1540 * _tmp2036 + _tmp2034 * _tmp344;
  const Scalar _tmp2038 = _tmp76 + _tmp90 - 1;
  const Scalar _tmp2039 = _tmp1550 * priors_1_0_sqrt_info(5, 3) +
                          _tmp2038 * priors_1_0_sqrt_info(5, 5) +
                          _tmp828 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp2040 = _tmp105 * _tmp1799 - _tmp1798 * _tmp96;
  const Scalar _tmp2041 = _tmp105 * _tmp1796 - _tmp1795 * _tmp73;
  const Scalar _tmp2042 = _tmp1010 * _tmp2041 + _tmp1448 * _tmp2040;
  const Scalar _tmp2043 = _tmp1015 * _tmp2042 - _tmp1017 * _tmp2042 + _tmp194 * _tmp2040;
  const Scalar _tmp2044 = _tmp105 * _tmp1766 - _tmp1767 * _tmp96;
  const Scalar _tmp2045 = _tmp105 * _tmp1770 - _tmp1769 * _tmp73;
  const Scalar _tmp2046 = _tmp1460 * _tmp2044 + _tmp2045 * _tmp964;
  const Scalar _tmp2047 = -_tmp1112 * _tmp2046 + _tmp1114 * _tmp2046 + _tmp2044 * _tmp254;
  const Scalar _tmp2048 = _tmp105 * landmarks_15_;
  const Scalar _tmp2049 = -_tmp1819 * _tmp73 + _tmp2048 * _tmp994;
  const Scalar _tmp2050 = _tmp1004 * _tmp2048 - _tmp1817 * _tmp96;
  const Scalar _tmp2051 = _tmp1471 * _tmp2050 + _tmp2049 * _tmp996;
  const Scalar _tmp2052 = _tmp1000 * _tmp2051 - _tmp1003 * _tmp2051 + _tmp2050 * _tmp644;
  const Scalar _tmp2053 = _tmp105 * _tmp1738 - _tmp1737 * _tmp96;
  const Scalar _tmp2054 = _tmp105 * _tmp1735 - _tmp1734 * _tmp73;
  const Scalar _tmp2055 = _tmp1272 * _tmp2054 + _tmp1527 * _tmp2053;
  const Scalar _tmp2056 = -_tmp1278 * _tmp2055 + _tmp1280 * _tmp2055 + _tmp2053 * _tmp764;
  const Scalar _tmp2057 = _tmp105 * _tmp1789 - _tmp1790 * _tmp73;
  const Scalar _tmp2058 = _tmp105 * _tmp1786 - _tmp1787 * _tmp96;
  const Scalar _tmp2059 = _tmp1183 * _tmp2057 + _tmp1365 * _tmp2058;
  const Scalar _tmp2060 = _tmp1425 * _tmp2059 - _tmp1426 * _tmp2059 + _tmp2057 * _tmp584;
  const Scalar _tmp2061 = _tmp105 * landmarks_11_;
  const Scalar _tmp2062 = _tmp1438 * _tmp2061 - _tmp1745 * _tmp96;
  const Scalar _tmp2063 = _tmp1442 * _tmp2061 - _tmp1742 * _tmp73;
  const Scalar _tmp2064 = _tmp1088 * _tmp2063 + _tmp1440 * _tmp2062;
  const Scalar _tmp2065 = _tmp1147 * _tmp2064 - _tmp1148 * _tmp2064 + _tmp2062 * _tmp524;
  const Scalar _tmp2066 = _tmp10 * priors_0_1_sqrt_info(2, 3) +
                          _tmp17 * priors_0_1_sqrt_info(2, 4) + _tmp54 * priors_0_1_sqrt_info(2, 5);
  const Scalar _tmp2067 = _tmp105 * _tmp1870 - _tmp1871 * _tmp73;
  const Scalar _tmp2068 = _tmp105 * _tmp1868 - _tmp1867 * _tmp96;
  const Scalar _tmp2069 = _tmp1235 * _tmp2067 + _tmp1433 * _tmp2068;
  const Scalar _tmp2070 = -_tmp1319 * _tmp2069 + _tmp1320 * _tmp2069 + _tmp2067 * _tmp434;
  const Scalar _tmp2071 = _tmp105 * landmarks_16_;
  const Scalar _tmp2072 = _tmp1246 * _tmp2071 - _tmp1846 * _tmp73;
  const Scalar _tmp2073 = _tmp1256 * _tmp2071 - _tmp1848 * _tmp96;
  const Scalar _tmp2074 = _tmp1248 * _tmp2072 + _tmp1476 * _tmp2073;
  const Scalar _tmp2075 = _tmp1252 * _tmp2074;
  const Scalar _tmp2076 = -_tmp1261 * _tmp2075 + _tmp1263 * _tmp2074 + _tmp2072 * _tmp674;
  const Scalar _tmp2077 = _tmp1550 * priors_1_0_sqrt_info(0, 3) +
                          _tmp2038 * priors_1_0_sqrt_info(0, 5) +
                          _tmp828 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp2078 = _tmp1283 * _tmp2055 - _tmp1284 * _tmp2055 + _tmp2054 * _tmp764;
  const Scalar _tmp2079 = _tmp105 * _tmp1826 - _tmp1827 * _tmp73;
  const Scalar _tmp2080 = _tmp105 * _tmp1829 - _tmp1830 * _tmp96;
  const Scalar _tmp2081 = _tmp1044 * _tmp2079 + _tmp1466 * _tmp2080;
  const Scalar _tmp2082 = -_tmp1157 * _tmp2081 + _tmp1158 * _tmp2081 + _tmp2080 * _tmp614;
  const Scalar _tmp2083 = _tmp1550 * priors_1_0_sqrt_info(3, 3) +
                          _tmp2038 * priors_1_0_sqrt_info(3, 5) +
                          _tmp828 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp2084 = _tmp105 * _tmp1811 - _tmp1809 * _tmp73;
  const Scalar _tmp2085 = _tmp105 * _tmp1807 - _tmp1805 * _tmp96;
  const Scalar _tmp2086 = _tmp1419 * _tmp2085 + _tmp2084 * _tmp982;
  const Scalar _tmp2087 = _tmp2085 * _tmp404 - _tmp2086 * _tmp986 + _tmp2086 * _tmp988;
  const Scalar _tmp2088 = _tmp1550 * priors_1_0_sqrt_info(1, 3) +
                          _tmp2038 * priors_1_0_sqrt_info(1, 5) +
                          _tmp828 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp2089 = _tmp105 * landmarks_4_;
  const Scalar _tmp2090 = _tmp1406 * _tmp2089 - _tmp1862 * _tmp96;
  const Scalar _tmp2091 = _tmp1411 * _tmp2089 - _tmp1859 * _tmp73;
  const Scalar _tmp2092 = _tmp1199 * _tmp2091 + _tmp1408 * _tmp2090;
  const Scalar _tmp2093 = -_tmp1208 * _tmp2092 + _tmp1209 * _tmp2092 + _tmp2090 * _tmp314;
  const Scalar _tmp2094 = -_tmp1305 * _tmp2051 + _tmp1306 * _tmp2051 + _tmp2049 * _tmp644;
  const Scalar _tmp2095 = -_tmp1518 * _tmp2042 + _tmp1519 * _tmp2042 + _tmp194 * _tmp2041;
  const Scalar _tmp2096 = _tmp105 * _tmp1727 - _tmp1726 * _tmp73;
  const Scalar _tmp2097 = _tmp105 * _tmp1729 - _tmp1730 * _tmp96;
  const Scalar _tmp2098 = _tmp1482 * _tmp2097 + _tmp2096 * _tmp910;
  const Scalar _tmp2099 = _tmp2097 * _tmp374 + _tmp2098 * _tmp916 - _tmp2098 * _tmp919;
  const Scalar _tmp2100 = _tmp10 * priors_0_1_sqrt_info(3, 3) +
                          _tmp17 * priors_0_1_sqrt_info(3, 4) + _tmp54 * priors_0_1_sqrt_info(3, 5);
  const Scalar _tmp2101 = _tmp10 * priors_0_1_sqrt_info(0, 3) +
                          _tmp17 * priors_0_1_sqrt_info(0, 4) + _tmp54 * priors_0_1_sqrt_info(0, 5);
  const Scalar _tmp2102 = _tmp1048 * _tmp2081 - _tmp1050 * _tmp2081 + _tmp2079 * _tmp614;
  const Scalar _tmp2103 = _tmp105 * _tmp1894 - _tmp1895 * _tmp73;
  const Scalar _tmp2104 = _tmp105 * _tmp1897 - _tmp1898 * _tmp96;
  const Scalar _tmp2105 = _tmp1136 * _tmp2103 + _tmp1488 * _tmp2104;
  const Scalar _tmp2106 = _tmp1214 * _tmp2105 - _tmp1215 * _tmp2105 + _tmp2104 * _tmp284;
  const Scalar _tmp2107 = _tmp105 * landmarks_18_;
  const Scalar _tmp2108 = _tmp1036 * _tmp2107 - _tmp1836 * _tmp96;
  const Scalar _tmp2109 = _tmp1026 * _tmp2107 - _tmp1838 * _tmp73;
  const Scalar _tmp2110 = _tmp1028 * _tmp2109 + _tmp1360 * _tmp2108;
  const Scalar _tmp2111 = -_tmp1032 * _tmp2110 + _tmp1034 * _tmp2110 + _tmp2108 * _tmp734;
  const Scalar _tmp2112 = _tmp10 * priors_0_1_sqrt_info(1, 3) +
                          _tmp17 * priors_0_1_sqrt_info(1, 4) + _tmp54 * priors_0_1_sqrt_info(1, 5);
  const Scalar _tmp2113 = -_tmp1191 * _tmp2110 + _tmp1192 * _tmp2110 + _tmp2109 * _tmp734;
  const Scalar _tmp2114 = -_tmp1203 * _tmp2092 + _tmp1205 * _tmp2092 + _tmp2091 * _tmp314;
  const Scalar _tmp2115 = _tmp105 * landmarks_1_;
  const Scalar _tmp2116 = _tmp1102 * _tmp2115 - _tmp1750 * _tmp73;
  const Scalar _tmp2117 = _tmp1501 * _tmp2115 - _tmp1753 * _tmp96;
  const Scalar _tmp2118 = _tmp1104 * _tmp2116 + _tmp1503 * _tmp2117;
  const Scalar _tmp2119 = -_tmp1218 * _tmp2118 + _tmp1219 * _tmp2118 + _tmp2116 * _tmp224;
  const Scalar _tmp2120 = _tmp1550 * priors_1_0_sqrt_info(4, 3) +
                          _tmp2038 * priors_1_0_sqrt_info(4, 5) +
                          _tmp828 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp2121 = _tmp1323 * _tmp2036 - _tmp1581 * _tmp2036 + _tmp2035 * _tmp344;
  const Scalar _tmp2122 = _tmp1550 * priors_1_0_sqrt_info(2, 3) +
                          _tmp2038 * priors_1_0_sqrt_info(2, 5) +
                          _tmp828 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2123 = _tmp1368 * _tmp2059 - _tmp1370 * _tmp2059 + _tmp2058 * _tmp584;
  const Scalar _tmp2124 = _tmp2045 * _tmp254 - _tmp2046 * _tmp969 + _tmp2046 * _tmp972;
  const Scalar _tmp2125 = _tmp1142 * _tmp2105 - _tmp1144 * _tmp2105 + _tmp2103 * _tmp284;
  const Scalar _tmp2126 = -_tmp1093 * _tmp2064 + _tmp1095 * _tmp2064 + _tmp2063 * _tmp524;
  const Scalar _tmp2127 = _tmp105 * landmarks_12_;
  const Scalar _tmp2128 = _tmp1453 * _tmp2127 - _tmp1761 * _tmp96;
  const Scalar _tmp2129 = _tmp1074 * _tmp2127 - _tmp1759 * _tmp73;
  const Scalar _tmp2130 = _tmp1076 * _tmp2129 + _tmp1455 * _tmp2128;
  const Scalar _tmp2131 = _tmp1081 * _tmp2130;
  const Scalar _tmp2132 = -_tmp1221 * _tmp2131 + _tmp1223 * _tmp2130 + _tmp2128 * _tmp554;
  const Scalar _tmp2133 = _tmp105 * _tmp1879 - _tmp1880 * _tmp96;
  const Scalar _tmp2134 = _tmp105 * _tmp1883 - _tmp1882 * _tmp73;
  const Scalar _tmp2135 = _tmp1168 * _tmp2134 + _tmp1382 * _tmp2133;
  const Scalar _tmp2136 = -_tmp1309 * _tmp2135 + _tmp1310 * _tmp2135 + _tmp2133 * _tmp704;
  const Scalar _tmp2137 = -_tmp1108 * _tmp2118 + _tmp1110 * _tmp2118 + _tmp2117 * _tmp224;
  const Scalar _tmp2138 = -_tmp1078 * _tmp2131 + _tmp1080 * _tmp2130 + _tmp2129 * _tmp554;
  const Scalar _tmp2139 = _tmp1312 * _tmp2098 - _tmp1313 * _tmp2098 + _tmp2096 * _tmp374;
  const Scalar _tmp2140 = _tmp105 * landmarks_10_;
  const Scalar _tmp2141 = _tmp1121 * _tmp2140 - _tmp1719 * _tmp73;
  const Scalar _tmp2142 = _tmp1493 * _tmp2140 - _tmp1722 * _tmp96;
  const Scalar _tmp2143 = _tmp1123 * _tmp2141 + _tmp1496 * _tmp2142;
  const Scalar _tmp2144 = _tmp1328 * _tmp2143 - _tmp1329 * _tmp2143 + _tmp2141 * _tmp494;
  const Scalar _tmp2145 = _tmp105 * _tmp1775;
  const Scalar _tmp2146 = _tmp1373 * _tmp2145 - _tmp1779 * _tmp96;
  const Scalar _tmp2147 = _tmp1054 * _tmp2145 - _tmp1777 * _tmp73;
  const Scalar _tmp2148 = _tmp1056 * _tmp2147 + _tmp1375 * _tmp2146;
  const Scalar _tmp2149 = _tmp1059 * _tmp2148;
  const Scalar _tmp2150 = _tmp1060 * _tmp2149 - _tmp1062 * _tmp2149 + _tmp2147 * _tmp464;
  const Scalar _tmp2151 = _tmp1170 * _tmp2135;
  const Scalar _tmp2152 = _tmp1171 * _tmp2151 - _tmp1173 * _tmp2151 + _tmp2134 * _tmp704;
  const Scalar _tmp2153 = _tmp1125 * _tmp2143;
  const Scalar _tmp2154 = _tmp1126 * _tmp2153 - _tmp1128 * _tmp2153 + _tmp2142 * _tmp494;
  const Scalar _tmp2155 = _tmp1239 * _tmp2069 - _tmp1241 * _tmp2069 + _tmp2068 * _tmp434;
  const Scalar _tmp2156 = -_tmp1251 * _tmp2075 + _tmp1255 * _tmp2074 + _tmp2073 * _tmp674;
  const Scalar _tmp2157 = _tmp10 * priors_0_1_sqrt_info(5, 3) +
                          _tmp17 * priors_0_1_sqrt_info(5, 4) + _tmp54 * priors_0_1_sqrt_info(5, 5);
  const Scalar _tmp2158 = _tmp1153 * _tmp2148 - _tmp1154 * _tmp2148 + _tmp2146 * _tmp464;
  const Scalar _tmp2159 = -_tmp1302 * _tmp2086 + _tmp1303 * _tmp2086 + _tmp2084 * _tmp404;
  const Scalar _tmp2160 = std::pow(matches_0_0_weight, Scalar(2)) / std::pow(_tmp768, Scalar(2));
  const Scalar _tmp2161 = _tmp103 * _tmp165 + _tmp105 * _tmp161 + _tmp106 * _tmp157;
  const Scalar _tmp2162 = _tmp2161 * _tmp906;
  const Scalar _tmp2163 =
      _views_1_calibration[1] * (_tmp157 * _tmp85 + _tmp161 * _tmp73 + _tmp165 * _tmp81);
  const Scalar _tmp2164 = -_tmp1449 * _tmp2162 + _tmp172 * _tmp2163;
  const Scalar _tmp2165 = _tmp2161 * _tmp902;
  const Scalar _tmp2166 = _tmp157 * _tmp92 + _tmp161 * _tmp96 + _tmp165 * _tmp98;
  const Scalar _tmp2167 = _tmp2166 * _views_1_calibration[0];
  const Scalar _tmp2168 = -_tmp1445 * _tmp2165 + _tmp172 * _tmp2167;
  const Scalar _tmp2169 = _tmp1010 * _tmp2164 + _tmp1448 * _tmp2168;
  const Scalar _tmp2170 = -_tmp1518 * _tmp2169 + _tmp1519 * _tmp2169 + _tmp194 * _tmp2164;
  const Scalar _tmp2171 = _tmp1015 * _tmp2169 - _tmp1017 * _tmp2169 + _tmp194 * _tmp2168;
  const Scalar _tmp2172 = -_tmp1099 * _tmp2165 + _tmp210 * _tmp2167;
  const Scalar _tmp2173 = -_tmp1101 * _tmp2162 + _tmp210 * _tmp2163;
  const Scalar _tmp2174 = _tmp1104 * _tmp2173 + _tmp1503 * _tmp2172;
  const Scalar _tmp2175 = _tmp1109 * _tmp2174;
  const Scalar _tmp2176 = _tmp1106 * _tmp2175 - _tmp1108 * _tmp2174 + _tmp2172 * _tmp224;
  const Scalar _tmp2177 = std::pow(matches_0_1_weight, Scalar(2)) / std::pow(_tmp771, Scalar(2));
  const Scalar _tmp2178 = _tmp1217 * _tmp2175 - _tmp1218 * _tmp2174 + _tmp2173 * _tmp224;
  const Scalar _tmp2179 = std::pow(matches_0_2_weight, Scalar(2)) / std::pow(_tmp774, Scalar(2));
  const Scalar _tmp2180 = -_tmp2162 * _tmp961 + _tmp2163 * _tmp240;
  const Scalar _tmp2181 = -_tmp2165 * _tmp965 + _tmp2167 * _tmp240;
  const Scalar _tmp2182 = _tmp1460 * _tmp2181 + _tmp2180 * _tmp964;
  const Scalar _tmp2183 = -_tmp1112 * _tmp2182 + _tmp1114 * _tmp2182 + _tmp2181 * _tmp254;
  const Scalar _tmp2184 = _tmp2180 * _tmp254 - _tmp2182 * _tmp969 + _tmp2182 * _tmp972;
  const Scalar _tmp2185 = std::pow(matches_0_3_weight, Scalar(2)) / std::pow(_tmp777, Scalar(2));
  const Scalar _tmp2186 = -_tmp1133 * _tmp2162 + _tmp2163 * _tmp270;
  const Scalar _tmp2187 = -_tmp1137 * _tmp2165 + _tmp2166 * _tmp271;
  const Scalar _tmp2188 = _tmp1136 * _tmp2186 + _tmp1488 * _tmp2187;
  const Scalar _tmp2189 = _tmp1143 * _tmp2188;
  const Scalar _tmp2190 = -_tmp1213 * _tmp2189 + _tmp1214 * _tmp2188 + _tmp2187 * _tmp284;
  const Scalar _tmp2191 = -_tmp1140 * _tmp2189 + _tmp1142 * _tmp2188 + _tmp2186 * _tmp284;
  const Scalar _tmp2192 = -_tmp1409 * _tmp2162 + _tmp2163 * _tmp300;
  const Scalar _tmp2193 = -_tmp1405 * _tmp2165 + _tmp2166 * _tmp301;
  const Scalar _tmp2194 = _tmp1199 * _tmp2192 + _tmp1408 * _tmp2193;
  const Scalar _tmp2195 = -_tmp1208 * _tmp2194 + _tmp1209 * _tmp2194 + _tmp2193 * _tmp314;
  const Scalar _tmp2196 = std::pow(matches_0_4_weight, Scalar(2)) / std::pow(_tmp780, Scalar(2));
  const Scalar _tmp2197 = -_tmp1203 * _tmp2194 + _tmp1205 * _tmp2194 + _tmp2192 * _tmp314;
  const Scalar _tmp2198 = std::pow(matches_0_5_weight, Scalar(2)) / std::pow(_tmp783, Scalar(2));
  const Scalar _tmp2199 = -_tmp1292 * _tmp2165 + _tmp2166 * _tmp331;
  const Scalar _tmp2200 = -_tmp1288 * _tmp2162 + _tmp2163 * _tmp330;
  const Scalar _tmp2201 = _tmp1291 * _tmp2200 + _tmp1514 * _tmp2199;
  const Scalar _tmp2202 = _tmp1323 * _tmp2201 - _tmp1581 * _tmp2201 + _tmp2199 * _tmp344;
  const Scalar _tmp2203 = _tmp1297 * _tmp2201 - _tmp1540 * _tmp2201 + _tmp2200 * _tmp344;
  const Scalar _tmp2204 = -_tmp2165 * _tmp904 + _tmp2166 * _tmp361;
  const Scalar _tmp2205 = -_tmp2162 * _tmp907 + _tmp2163 * _tmp360;
  const Scalar _tmp2206 = _tmp1482 * _tmp2204 + _tmp2205 * _tmp910;
  const Scalar _tmp2207 = _tmp1312 * _tmp2206 - _tmp1313 * _tmp2206 + _tmp2205 * _tmp374;
  const Scalar _tmp2208 = _tmp2204 * _tmp374 + _tmp2206 * _tmp916 - _tmp2206 * _tmp919;
  const Scalar _tmp2209 = std::pow(matches_0_6_weight, Scalar(2)) / std::pow(_tmp786, Scalar(2));
  const Scalar _tmp2210 = std::pow(matches_0_7_weight, Scalar(2)) / std::pow(_tmp789, Scalar(2));
  const Scalar _tmp2211 = -_tmp1810 * _tmp2161 + _tmp2163 * _tmp390;
  const Scalar _tmp2212 = -_tmp2165 * _tmp386 * _tmp977 + _tmp2167 * _tmp390;
  const Scalar _tmp2213 = _tmp1419 * _tmp2212 + _tmp2211 * _tmp982;
  const Scalar _tmp2214 = _tmp2212 * _tmp404 - _tmp2213 * _tmp986 + _tmp2213 * _tmp988;
  const Scalar _tmp2215 = -_tmp1302 * _tmp2213 + _tmp1303 * _tmp2213 + _tmp2211 * _tmp404;
  const Scalar _tmp2216 = -_tmp1232 * _tmp2162 + _tmp2163 * _tmp420;
  const Scalar _tmp2217 = -_tmp1230 * _tmp2165 + _tmp2166 * _tmp421;
  const Scalar _tmp2218 = _tmp1235 * _tmp2216 + _tmp1433 * _tmp2217;
  const Scalar _tmp2219 = _tmp1240 * _tmp2218;
  const Scalar _tmp2220 = -_tmp1237 * _tmp2219 + _tmp1239 * _tmp2218 + _tmp2217 * _tmp434;
  const Scalar _tmp2221 = std::pow(matches_0_8_weight, Scalar(2)) / std::pow(_tmp792, Scalar(2));
  const Scalar _tmp2222 = -_tmp1318 * _tmp2219 + _tmp1320 * _tmp2218 + _tmp2216 * _tmp434;
  const Scalar _tmp2223 = -_tmp1052 * _tmp2162 * _tmp454 + _tmp2163 * _tmp450;
  const Scalar _tmp2224 = -_tmp1052 * _tmp2165 * _tmp446 + _tmp2166 * _tmp451;
  const Scalar _tmp2225 = _tmp1056 * _tmp2223 + _tmp1375 * _tmp2224;
  const Scalar _tmp2226 = _tmp1061 * _tmp2225 - _tmp1063 * _tmp2225 + _tmp2223 * _tmp464;
  const Scalar _tmp2227 = std::pow(matches_0_9_weight, Scalar(2)) / std::pow(_tmp795, Scalar(2));
  const Scalar _tmp2228 = _tmp1153 * _tmp2225 - _tmp1154 * _tmp2225 + _tmp2224 * _tmp464;
  const Scalar _tmp2229 = std::pow(matches_0_10_weight, Scalar(2)) / std::pow(_tmp798, Scalar(2));
  const Scalar _tmp2230 = -_tmp1120 * _tmp2162 + _tmp2163 * _tmp480;
  const Scalar _tmp2231 = -_tmp1118 * _tmp2165 + _tmp2167 * _tmp480;
  const Scalar _tmp2232 = _tmp1123 * _tmp2230 + _tmp1496 * _tmp2231;
  const Scalar _tmp2233 = _tmp1328 * _tmp2232 - _tmp1329 * _tmp2232 + _tmp2230 * _tmp494;
  const Scalar _tmp2234 = _tmp1127 * _tmp2232 - _tmp1129 * _tmp2232 + _tmp2231 * _tmp494;
  const Scalar _tmp2235 = std::pow(matches_0_11_weight, Scalar(2)) / std::pow(_tmp801, Scalar(2));
  const Scalar _tmp2236 = -_tmp1442 * _tmp2161 + _tmp2163 * _tmp510;
  const Scalar _tmp2237 = -_tmp1437 * _tmp2165 + _tmp2166 * _tmp511;
  const Scalar _tmp2238 = _tmp1088 * _tmp2236 + _tmp1440 * _tmp2237;
  const Scalar _tmp2239 = _tmp1147 * _tmp2238 - _tmp1148 * _tmp2238 + _tmp2237 * _tmp524;
  const Scalar _tmp2240 = -_tmp1093 * _tmp2238 + _tmp1095 * _tmp2238 + _tmp2236 * _tmp524;
  const Scalar _tmp2241 = -_tmp1073 * _tmp2162 + _tmp2163 * _tmp540;
  const Scalar _tmp2242 = -_tmp1071 * _tmp2165 + _tmp2167 * _tmp540;
  const Scalar _tmp2243 = _tmp1076 * _tmp2241 + _tmp1455 * _tmp2242;
  const Scalar _tmp2244 = _tmp1080 * _tmp2243 - _tmp1082 * _tmp2243 + _tmp2241 * _tmp554;
  const Scalar _tmp2245 = std::pow(matches_0_12_weight, Scalar(2)) / std::pow(_tmp804, Scalar(2));
  const Scalar _tmp2246 = -_tmp1222 * _tmp2243 + _tmp1223 * _tmp2243 + _tmp2242 * _tmp554;
  const Scalar _tmp2247 = -_tmp1180 * _tmp2162 + _tmp2163 * _tmp570;
  const Scalar _tmp2248 = -_tmp1178 * _tmp2165 + _tmp2166 * _tmp571;
  const Scalar _tmp2249 = _tmp1183 * _tmp2247 + _tmp1365 * _tmp2248;
  const Scalar _tmp2250 = _tmp1425 * _tmp2249 - _tmp1426 * _tmp2249 + _tmp2247 * _tmp584;
  const Scalar _tmp2251 = std::pow(matches_0_13_weight, Scalar(2)) / std::pow(_tmp807, Scalar(2));
  const Scalar _tmp2252 = _tmp1368 * _tmp2249 - _tmp1370 * _tmp2249 + _tmp2248 * _tmp584;
  const Scalar _tmp2253 = std::pow(matches_0_14_weight, Scalar(2)) / std::pow(_tmp810, Scalar(2));
  const Scalar _tmp2254 = -_tmp1041 * _tmp2162 + _tmp2163 * _tmp600;
  const Scalar _tmp2255 = -_tmp1040 * _tmp2165 + _tmp2166 * _tmp601;
  const Scalar _tmp2256 = _tmp1044 * _tmp2254 + _tmp1466 * _tmp2255;
  const Scalar _tmp2257 = _tmp1046 * _tmp2256;
  const Scalar _tmp2258 = _tmp1047 * _tmp2257 - _tmp1049 * _tmp2257 + _tmp2254 * _tmp614;
  const Scalar _tmp2259 = -_tmp1157 * _tmp2256 + _tmp1158 * _tmp2256 + _tmp2255 * _tmp614;
  const Scalar _tmp2260 = -_tmp2162 * _tmp993 + _tmp2163 * _tmp630;
  const Scalar _tmp2261 = -_tmp2165 * _tmp992 + _tmp2167 * _tmp630;
  const Scalar _tmp2262 = _tmp1471 * _tmp2261 + _tmp2260 * _tmp996;
  const Scalar _tmp2263 = _tmp1000 * _tmp2262 - _tmp1003 * _tmp2262 + _tmp2261 * _tmp644;
  const Scalar _tmp2264 = std::pow(matches_0_15_weight, Scalar(2)) / std::pow(_tmp813, Scalar(2));
  const Scalar _tmp2265 = -_tmp1305 * _tmp2262 + _tmp1306 * _tmp2262 + _tmp2260 * _tmp644;
  const Scalar _tmp2266 = -_tmp1245 * _tmp2162 + _tmp2163 * _tmp660;
  const Scalar _tmp2267 = -_tmp1249 * _tmp2165 + _tmp2167 * _tmp660;
  const Scalar _tmp2268 = _tmp1248 * _tmp2266 + _tmp1476 * _tmp2267;
  const Scalar _tmp2269 = -_tmp1253 * _tmp2268 + _tmp1255 * _tmp2268 + _tmp2267 * _tmp674;
  const Scalar _tmp2270 = std::pow(matches_0_16_weight, Scalar(2)) / std::pow(_tmp816, Scalar(2));
  const Scalar _tmp2271 = -_tmp1262 * _tmp2268 + _tmp1263 * _tmp2268 + _tmp2266 * _tmp674;
  const Scalar _tmp2272 = -_tmp1165 * _tmp2162 + _tmp2163 * _tmp690;
  const Scalar _tmp2273 = -_tmp1163 * _tmp2165 + _tmp2167 * _tmp690;
  const Scalar _tmp2274 = _tmp1168 * _tmp2272 + _tmp1382 * _tmp2273;
  const Scalar _tmp2275 = -_tmp1309 * _tmp2274 + _tmp1310 * _tmp2274 + _tmp2273 * _tmp704;
  const Scalar _tmp2276 = _tmp1172 * _tmp2274 - _tmp1174 * _tmp2274 + _tmp2272 * _tmp704;
  const Scalar _tmp2277 = std::pow(matches_0_17_weight, Scalar(2)) / std::pow(_tmp819, Scalar(2));
  const Scalar _tmp2278 = -_tmp1024 * _tmp2165 + _tmp2167 * _tmp720;
  const Scalar _tmp2279 = -_tmp1025 * _tmp2162 + _tmp2163 * _tmp720;
  const Scalar _tmp2280 = _tmp1028 * _tmp2279 + _tmp1360 * _tmp2278;
  const Scalar _tmp2281 = -_tmp1032 * _tmp2280 + _tmp1034 * _tmp2280 + _tmp2278 * _tmp734;
  const Scalar _tmp2282 = std::pow(matches_0_18_weight, Scalar(2)) / std::pow(_tmp822, Scalar(2));
  const Scalar _tmp2283 = -_tmp1191 * _tmp2280 + _tmp1192 * _tmp2280 + _tmp2279 * _tmp734;
  const Scalar _tmp2284 = -_tmp1269 * _tmp2162 + _tmp2163 * _tmp750;
  const Scalar _tmp2285 = -_tmp1273 * _tmp2165 + _tmp2167 * _tmp750;
  const Scalar _tmp2286 = _tmp1272 * _tmp2284 + _tmp1527 * _tmp2285;
  const Scalar _tmp2287 = _tmp1283 * _tmp2286 - _tmp1284 * _tmp2286 + _tmp2284 * _tmp764;
  const Scalar _tmp2288 = std::pow(matches_0_19_weight, Scalar(2)) / std::pow(_tmp825, Scalar(2));
  const Scalar _tmp2289 = -_tmp1278 * _tmp2286 + _tmp1280 * _tmp2286 + _tmp2285 * _tmp764;

  // Output terms (4)
  if (residual != nullptr) {
    Eigen::Matrix<Scalar, 72, 1>& _residual = (*residual);

    _residual(0, 0) = _tmp60;
    _residual(1, 0) = _tmp61;
    _residual(2, 0) = _tmp62;
    _residual(3, 0) = _tmp63;
    _residual(4, 0) = _tmp65;
    _residual(5, 0) = _tmp68;
    _residual(6, 0) = _tmp131;
    _residual(7, 0) = _tmp132;
    _residual(8, 0) = _tmp135;
    _residual(9, 0) = _tmp137;
    _residual(10, 0) = _tmp140;
    _residual(11, 0) = _tmp142;
    _residual(12, 0) = _tmp195;
    _residual(13, 0) = _tmp196;
    _residual(14, 0) = _tmp225;
    _residual(15, 0) = _tmp226;
    _residual(16, 0) = _tmp255;
    _residual(17, 0) = _tmp256;
    _residual(18, 0) = _tmp285;
    _residual(19, 0) = _tmp286;
    _residual(20, 0) = _tmp315;
    _residual(21, 0) = _tmp316;
    _residual(22, 0) = _tmp345;
    _residual(23, 0) = _tmp346;
    _residual(24, 0) = _tmp375;
    _residual(25, 0) = _tmp376;
    _residual(26, 0) = _tmp405;
    _residual(27, 0) = _tmp406;
    _residual(28, 0) = _tmp435;
    _residual(29, 0) = _tmp436;
    _residual(30, 0) = _tmp465;
    _residual(31, 0) = _tmp466;
    _residual(32, 0) = _tmp495;
    _residual(33, 0) = _tmp496;
    _residual(34, 0) = _tmp525;
    _residual(35, 0) = _tmp526;
    _residual(36, 0) = _tmp555;
    _residual(37, 0) = _tmp556;
    _residual(38, 0) = _tmp585;
    _residual(39, 0) = _tmp586;
    _residual(40, 0) = _tmp615;
    _residual(41, 0) = _tmp616;
    _residual(42, 0) = _tmp645;
    _residual(43, 0) = _tmp646;
    _residual(44, 0) = _tmp675;
    _residual(45, 0) = _tmp676;
    _residual(46, 0) = _tmp705;
    _residual(47, 0) = _tmp706;
    _residual(48, 0) = _tmp735;
    _residual(49, 0) = _tmp736;
    _residual(50, 0) = _tmp765;
    _residual(51, 0) = _tmp766;
    _residual(52, 0) = _tmp767 * _tmp769;
    _residual(53, 0) = _tmp770 * _tmp772;
    _residual(54, 0) = _tmp773 * _tmp775;
    _residual(55, 0) = _tmp776 * _tmp778;
    _residual(56, 0) = _tmp779 * _tmp781;
    _residual(57, 0) = _tmp782 * _tmp784;
    _residual(58, 0) = _tmp785 * _tmp787;
    _residual(59, 0) = _tmp788 * _tmp790;
    _residual(60, 0) = _tmp791 * _tmp793;
    _residual(61, 0) = _tmp794 * _tmp796;
    _residual(62, 0) = _tmp797 * _tmp799;
    _residual(63, 0) = _tmp800 * _tmp802;
    _residual(64, 0) = _tmp803 * _tmp805;
    _residual(65, 0) = _tmp806 * _tmp808;
    _residual(66, 0) = _tmp809 * _tmp811;
    _residual(67, 0) = _tmp812 * _tmp814;
    _residual(68, 0) = _tmp815 * _tmp817;
    _residual(69, 0) = _tmp818 * _tmp820;
    _residual(70, 0) = _tmp821 * _tmp823;
    _residual(71, 0) = _tmp824 * _tmp826;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 26, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp1005 * _tmp645 + _tmp1018 * _tmp195 + _tmp1021 * _tmp196 + _tmp1037 * _tmp735 +
                 _tmp1051 * _tmp616 + _tmp1064 * _tmp466 + _tmp1066 * _tmp62 + _tmp1068 * _tmp140 +
                 _tmp1083 * _tmp556 + _tmp1096 * _tmp526 + _tmp1111 * _tmp225 + _tmp1115 * _tmp255 +
                 _tmp1130 * _tmp495 + _tmp1145 * _tmp286 + _tmp1149 * _tmp525 + _tmp1151 * _tmp60 +
                 _tmp1155 * _tmp465 + _tmp1160 * _tmp615 + _tmp1175 * _tmp706 + _tmp1189 * _tmp585 +
                 _tmp1193 * _tmp736 + _tmp1206 * _tmp316 + _tmp1210 * _tmp315 + _tmp1212 * _tmp137 +
                 _tmp1216 * _tmp285 + _tmp1220 * _tmp226 + _tmp1224 * _tmp555 + _tmp1227 * _tmp68 +
                 _tmp1242 * _tmp435 + _tmp1257 * _tmp675 + _tmp1260 * _tmp132 + _tmp1264 * _tmp676 +
                 _tmp1266 * _tmp61 + _tmp1281 * _tmp765 + _tmp1285 * _tmp766 + _tmp1300 * _tmp346 +
                 _tmp1304 * _tmp406 + _tmp1307 * _tmp646 + _tmp131 * _tmp900 + _tmp1311 * _tmp705 +
                 _tmp1314 * _tmp376 + _tmp1315 * _tmp135 + _tmp1317 * _tmp586 + _tmp1321 * _tmp436 +
                 _tmp1324 * _tmp345 + _tmp1326 * _tmp65 + _tmp1330 * _tmp496 + _tmp142 * _tmp976 +
                 _tmp256 * _tmp973 + _tmp375 * _tmp920 + _tmp405 * _tmp989 + _tmp63 * _tmp958;
    _rhs(1, 0) = _tmp131 * _tmp1530 + _tmp132 * _tmp1545 + _tmp135 * _tmp1356 + _tmp1362 * _tmp735 +
                 _tmp137 * _tmp1536 + _tmp1371 * _tmp585 + _tmp1377 * _tmp465 + _tmp1384 * _tmp705 +
                 _tmp1385 * _tmp736 + _tmp1386 * _tmp466 + _tmp140 * _tmp1424 + _tmp1403 * _tmp65 +
                 _tmp1412 * _tmp316 + _tmp1416 * _tmp63 + _tmp142 * _tmp1538 + _tmp1421 * _tmp405 +
                 _tmp1427 * _tmp586 + _tmp1428 * _tmp315 + _tmp1435 * _tmp435 + _tmp1443 * _tmp526 +
                 _tmp1451 * _tmp195 + _tmp1457 * _tmp556 + _tmp1462 * _tmp255 + _tmp1468 * _tmp615 +
                 _tmp1473 * _tmp646 + _tmp1478 * _tmp676 + _tmp1479 * _tmp256 + _tmp1484 * _tmp376 +
                 _tmp1490 * _tmp285 + _tmp1491 * _tmp525 + _tmp1498 * _tmp495 + _tmp1505 * _tmp226 +
                 _tmp1506 * _tmp68 + _tmp1507 * _tmp60 + _tmp1508 * _tmp225 + _tmp1509 * _tmp436 +
                 _tmp1510 * _tmp706 + _tmp1517 * _tmp345 + _tmp1521 * _tmp196 + _tmp1522 * _tmp406 +
                 _tmp1529 * _tmp766 + _tmp1532 * _tmp765 + _tmp1533 * _tmp61 + _tmp1534 * _tmp375 +
                 _tmp1535 * _tmp286 + _tmp1539 * _tmp555 + _tmp1541 * _tmp346 + _tmp1542 * _tmp496 +
                 _tmp1543 * _tmp62 + _tmp1544 * _tmp616 + _tmp1546 * _tmp675 + _tmp1547 * _tmp645;
    _rhs(2, 0) = _tmp131 * _tmp1646 + _tmp132 * _tmp1689 + _tmp135 * _tmp1625 + _tmp137 * _tmp1668 +
                 _tmp140 * _tmp1688 + _tmp142 * _tmp1648 + _tmp1555 * _tmp466 + _tmp1559 * _tmp646 +
                 _tmp1564 * _tmp705 + _tmp1568 * _tmp585 + _tmp1572 * _tmp435 + _tmp1577 * _tmp286 +
                 _tmp1582 * _tmp345 + _tmp1587 * _tmp736 + _tmp1591 * _tmp225 + _tmp1604 * _tmp62 +
                 _tmp1605 * _tmp226 + _tmp1609 * _tmp525 + _tmp1610 * _tmp645 + _tmp1611 * _tmp735 +
                 _tmp1631 * _tmp255 + _tmp1633 * _tmp256 + _tmp1639 * _tmp375 + _tmp1644 * _tmp556 +
                 _tmp1652 * _tmp675 + _tmp1656 * _tmp195 + _tmp1661 * _tmp615 + _tmp1662 * _tmp436 +
                 _tmp1663 * _tmp60 + _tmp1664 * _tmp676 + _tmp1665 * _tmp346 + _tmp1666 * _tmp555 +
                 _tmp1672 * _tmp496 + _tmp1674 * _tmp63 + _tmp1678 * _tmp406 + _tmp1682 * _tmp765 +
                 _tmp1683 * _tmp465 + _tmp1684 * _tmp68 + _tmp1685 * _tmp61 + _tmp1686 * _tmp405 +
                 _tmp1687 * _tmp706 + _tmp1690 * _tmp196 + _tmp1691 * _tmp65 + _tmp1692 * _tmp586 +
                 _tmp1697 * _tmp316 + _tmp1698 * _tmp495 + _tmp1699 * _tmp766 + _tmp1700 * _tmp526 +
                 _tmp1701 * _tmp285 + _tmp1703 * _tmp376 + _tmp1704 * _tmp315 + _tmp1705 * _tmp616;
    _rhs(3, 0) = _tmp131 * _tmp1903 + _tmp132 * _tmp1858 + _tmp135 * _tmp1856 + _tmp137 * _tmp1889 +
                 _tmp140 * _tmp1857 + _tmp142 * _tmp1718 + _tmp1715 * _tmp345 + _tmp1725 * _tmp495 +
                 _tmp1733 * _tmp376 + _tmp1741 * _tmp766 + _tmp1749 * _tmp526 + _tmp1757 * _tmp226 +
                 _tmp1764 * _tmp556 + _tmp1765 * _tmp375 + _tmp1773 * _tmp255 + _tmp1774 * _tmp63 +
                 _tmp1784 * _tmp466 + _tmp1785 * _tmp65 + _tmp1793 * _tmp585 + _tmp1794 * _tmp765 +
                 _tmp1802 * _tmp196 + _tmp1804 * _tmp525 + _tmp1815 * _tmp405 + _tmp1822 * _tmp646 +
                 _tmp1823 * _tmp225 + _tmp1824 * _tmp496 + _tmp1825 * _tmp61 + _tmp1833 * _tmp616 +
                 _tmp1834 * _tmp60 + _tmp1842 * _tmp736 + _tmp1843 * _tmp586 + _tmp1844 * _tmp615 +
                 _tmp1852 * _tmp676 + _tmp1853 * _tmp195 + _tmp1854 * _tmp645 + _tmp1855 * _tmp62 +
                 _tmp1865 * _tmp316 + _tmp1866 * _tmp346 + _tmp1874 * _tmp436 + _tmp1875 * _tmp675 +
                 _tmp1877 * _tmp555 + _tmp1878 * _tmp435 + _tmp1886 * _tmp705 + _tmp1887 * _tmp735 +
                 _tmp1888 * _tmp256 + _tmp1890 * _tmp68 + _tmp1891 * _tmp406 + _tmp1892 * _tmp465 +
                 _tmp1893 * _tmp706 + _tmp1901 * _tmp286 + _tmp1902 * _tmp285 + _tmp1904 * _tmp315;
    _rhs(4, 0) = _tmp131 * _tmp1971 + _tmp132 * _tmp2004 + _tmp135 * _tmp2005 + _tmp137 * _tmp1961 +
                 _tmp140 * _tmp2006 + _tmp142 * _tmp1940 + _tmp1908 * _tmp676 + _tmp1909 * _tmp61 +
                 _tmp1910 * _tmp60 + _tmp1914 * _tmp525 + _tmp1915 * _tmp62 + _tmp1919 * _tmp586 +
                 _tmp1923 * _tmp615 + _tmp1924 * _tmp585 + _tmp1928 * _tmp285 + _tmp1933 * _tmp436 +
                 _tmp1938 * _tmp315 + _tmp1946 * _tmp225 + _tmp1947 * _tmp63 + _tmp1948 * _tmp616 +
                 _tmp195 * _tmp2027 + _tmp1953 * _tmp736 + _tmp196 * _tmp2014 + _tmp1960 * _tmp646 +
                 _tmp1966 * _tmp345 + _tmp1970 * _tmp706 + _tmp1975 * _tmp766 + _tmp1976 * _tmp286 +
                 _tmp1980 * _tmp256 + _tmp1981 * _tmp255 + _tmp1982 * _tmp346 + _tmp1986 * _tmp466 +
                 _tmp1991 * _tmp555 + _tmp1995 * _tmp375 + _tmp2001 * _tmp406 + _tmp2002 * _tmp526 +
                 _tmp2003 * _tmp226 + _tmp2007 * _tmp435 + _tmp2008 * _tmp705 + _tmp2009 * _tmp316 +
                 _tmp2010 * _tmp376 + _tmp2015 * _tmp65 + _tmp2016 * _tmp556 + _tmp2021 * _tmp495 +
                 _tmp2023 * _tmp675 + _tmp2025 * _tmp645 + _tmp2026 * _tmp465 + _tmp2028 * _tmp735 +
                 _tmp2029 * _tmp765 + _tmp2030 * _tmp405 + _tmp2031 * _tmp68 + _tmp2032 * _tmp496;
    _rhs(5, 0) = _tmp131 * _tmp2077 + _tmp132 * _tmp2088 + _tmp135 * _tmp2122 + _tmp137 * _tmp2083 +
                 _tmp140 * _tmp2120 + _tmp142 * _tmp2039 + _tmp195 * _tmp2043 + _tmp196 * _tmp2095 +
                 _tmp2033 * _tmp65 + _tmp2037 * _tmp346 + _tmp2047 * _tmp255 + _tmp2052 * _tmp645 +
                 _tmp2056 * _tmp765 + _tmp2060 * _tmp586 + _tmp2065 * _tmp525 + _tmp2066 * _tmp62 +
                 _tmp2070 * _tmp436 + _tmp2076 * _tmp676 + _tmp2078 * _tmp766 + _tmp2082 * _tmp615 +
                 _tmp2087 * _tmp405 + _tmp2093 * _tmp315 + _tmp2094 * _tmp646 + _tmp2099 * _tmp375 +
                 _tmp2100 * _tmp63 + _tmp2101 * _tmp60 + _tmp2102 * _tmp616 + _tmp2106 * _tmp285 +
                 _tmp2111 * _tmp735 + _tmp2112 * _tmp61 + _tmp2113 * _tmp736 + _tmp2114 * _tmp316 +
                 _tmp2119 * _tmp226 + _tmp2121 * _tmp345 + _tmp2123 * _tmp585 + _tmp2124 * _tmp256 +
                 _tmp2125 * _tmp286 + _tmp2126 * _tmp526 + _tmp2132 * _tmp555 + _tmp2136 * _tmp705 +
                 _tmp2137 * _tmp225 + _tmp2138 * _tmp556 + _tmp2139 * _tmp376 + _tmp2144 * _tmp496 +
                 _tmp2150 * _tmp466 + _tmp2152 * _tmp706 + _tmp2154 * _tmp495 + _tmp2155 * _tmp435 +
                 _tmp2156 * _tmp675 + _tmp2157 * _tmp68 + _tmp2158 * _tmp465 + _tmp2159 * _tmp406;
    _rhs(6, 0) = _tmp195 * _tmp2171 + _tmp196 * _tmp2170 + _tmp2160 * _tmp767;
    _rhs(7, 0) = _tmp2176 * _tmp225 + _tmp2177 * _tmp770 + _tmp2178 * _tmp226;
    _rhs(8, 0) = _tmp2179 * _tmp773 + _tmp2183 * _tmp255 + _tmp2184 * _tmp256;
    _rhs(9, 0) = _tmp2185 * _tmp776 + _tmp2190 * _tmp285 + _tmp2191 * _tmp286;
    _rhs(10, 0) = _tmp2195 * _tmp315 + _tmp2196 * _tmp779 + _tmp2197 * _tmp316;
    _rhs(11, 0) = _tmp2198 * _tmp782 + _tmp2202 * _tmp345 + _tmp2203 * _tmp346;
    _rhs(12, 0) = _tmp2207 * _tmp376 + _tmp2208 * _tmp375 + _tmp2209 * _tmp785;
    _rhs(13, 0) = _tmp2210 * _tmp788 + _tmp2214 * _tmp405 + _tmp2215 * _tmp406;
    _rhs(14, 0) = _tmp2220 * _tmp435 + _tmp2221 * _tmp791 + _tmp2222 * _tmp436;
    _rhs(15, 0) = _tmp2226 * _tmp466 + _tmp2227 * _tmp794 + _tmp2228 * _tmp465;
    _rhs(16, 0) = _tmp2229 * _tmp797 + _tmp2233 * _tmp496 + _tmp2234 * _tmp495;
    _rhs(17, 0) = _tmp2235 * _tmp800 + _tmp2239 * _tmp525 + _tmp2240 * _tmp526;
    _rhs(18, 0) = _tmp2244 * _tmp556 + _tmp2245 * _tmp803 + _tmp2246 * _tmp555;
    _rhs(19, 0) = _tmp2250 * _tmp586 + _tmp2251 * _tmp806 + _tmp2252 * _tmp585;
    _rhs(20, 0) = _tmp2253 * _tmp809 + _tmp2258 * _tmp616 + _tmp2259 * _tmp615;
    _rhs(21, 0) = _tmp2263 * _tmp645 + _tmp2264 * _tmp812 + _tmp2265 * _tmp646;
    _rhs(22, 0) = _tmp2269 * _tmp675 + _tmp2270 * _tmp815 + _tmp2271 * _tmp676;
    _rhs(23, 0) = _tmp2275 * _tmp705 + _tmp2276 * _tmp706 + _tmp2277 * _tmp818;
    _rhs(24, 0) = _tmp2281 * _tmp735 + _tmp2282 * _tmp821 + _tmp2283 * _tmp736;
    _rhs(25, 0) = _tmp2287 * _tmp766 + _tmp2288 * _tmp824 + _tmp2289 * _tmp765;
  }

  if (jacobian != nullptr) {
    static constexpr int kRows_jacobian = 72;
    static constexpr int kCols_jacobian = 26;
    static constexpr int kNumNonZero_jacobian = 372;
    static constexpr int kColPtrs_jacobian[] = {0,   52,  104, 156, 208, 260, 312, 315, 318,
                                                321, 324, 327, 330, 333, 336, 339, 342, 345,
                                                348, 351, 354, 357, 360, 363, 366, 369, 372};
    static constexpr int kRowIndices_jacobian[] = {
        0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
        22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
        44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13,
        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,
        6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
        28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11,
        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,
        4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
        48, 49, 50, 51, 12, 13, 52, 14, 15, 53, 16, 17, 54, 18, 19, 55, 20, 21, 56, 22, 23, 57,
        24, 25, 58, 26, 27, 59, 28, 29, 60, 30, 31, 61, 32, 33, 62, 34, 35, 63, 36, 37, 64, 38,
        39, 65, 40, 41, 66, 42, 43, 67, 44, 45, 68, 46, 47, 69, 48, 49, 70, 50, 51, 71};
    if (jacobian->nonZeros() != 372 || jacobian->outerSize() != 26 || jacobian->innerSize() != 72 ||
        !jacobian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar jacobian_empty_value_ptr[372];
      *jacobian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_jacobian, kCols_jacobian, kNumNonZero_jacobian, kColPtrs_jacobian,
          kRowIndices_jacobian, jacobian_empty_value_ptr);
    }
    Scalar* jacobian_value_ptr = jacobian->valuePtr();

    jacobian_value_ptr[0] = _tmp1151;
    jacobian_value_ptr[1] = _tmp1266;
    jacobian_value_ptr[2] = _tmp1066;
    jacobian_value_ptr[3] = _tmp958;
    jacobian_value_ptr[4] = _tmp1326;
    jacobian_value_ptr[5] = _tmp1227;
    jacobian_value_ptr[6] = _tmp900;
    jacobian_value_ptr[7] = _tmp1260;
    jacobian_value_ptr[8] = _tmp1315;
    jacobian_value_ptr[9] = _tmp1212;
    jacobian_value_ptr[10] = _tmp1068;
    jacobian_value_ptr[11] = _tmp976;
    jacobian_value_ptr[12] = _tmp1018;
    jacobian_value_ptr[13] = _tmp1021;
    jacobian_value_ptr[14] = _tmp1111;
    jacobian_value_ptr[15] = _tmp1220;
    jacobian_value_ptr[16] = _tmp1115;
    jacobian_value_ptr[17] = _tmp973;
    jacobian_value_ptr[18] = _tmp1216;
    jacobian_value_ptr[19] = _tmp1145;
    jacobian_value_ptr[20] = _tmp1210;
    jacobian_value_ptr[21] = _tmp1206;
    jacobian_value_ptr[22] = _tmp1324;
    jacobian_value_ptr[23] = _tmp1300;
    jacobian_value_ptr[24] = _tmp920;
    jacobian_value_ptr[25] = _tmp1314;
    jacobian_value_ptr[26] = _tmp989;
    jacobian_value_ptr[27] = _tmp1304;
    jacobian_value_ptr[28] = _tmp1242;
    jacobian_value_ptr[29] = _tmp1321;
    jacobian_value_ptr[30] = _tmp1155;
    jacobian_value_ptr[31] = _tmp1064;
    jacobian_value_ptr[32] = _tmp1130;
    jacobian_value_ptr[33] = _tmp1330;
    jacobian_value_ptr[34] = _tmp1149;
    jacobian_value_ptr[35] = _tmp1096;
    jacobian_value_ptr[36] = _tmp1224;
    jacobian_value_ptr[37] = _tmp1083;
    jacobian_value_ptr[38] = _tmp1189;
    jacobian_value_ptr[39] = _tmp1317;
    jacobian_value_ptr[40] = _tmp1160;
    jacobian_value_ptr[41] = _tmp1051;
    jacobian_value_ptr[42] = _tmp1005;
    jacobian_value_ptr[43] = _tmp1307;
    jacobian_value_ptr[44] = _tmp1257;
    jacobian_value_ptr[45] = _tmp1264;
    jacobian_value_ptr[46] = _tmp1311;
    jacobian_value_ptr[47] = _tmp1175;
    jacobian_value_ptr[48] = _tmp1037;
    jacobian_value_ptr[49] = _tmp1193;
    jacobian_value_ptr[50] = _tmp1281;
    jacobian_value_ptr[51] = _tmp1285;
    jacobian_value_ptr[52] = _tmp1507;
    jacobian_value_ptr[53] = _tmp1533;
    jacobian_value_ptr[54] = _tmp1543;
    jacobian_value_ptr[55] = _tmp1416;
    jacobian_value_ptr[56] = _tmp1403;
    jacobian_value_ptr[57] = _tmp1506;
    jacobian_value_ptr[58] = _tmp1530;
    jacobian_value_ptr[59] = _tmp1545;
    jacobian_value_ptr[60] = _tmp1356;
    jacobian_value_ptr[61] = _tmp1536;
    jacobian_value_ptr[62] = _tmp1424;
    jacobian_value_ptr[63] = _tmp1538;
    jacobian_value_ptr[64] = _tmp1451;
    jacobian_value_ptr[65] = _tmp1521;
    jacobian_value_ptr[66] = _tmp1508;
    jacobian_value_ptr[67] = _tmp1505;
    jacobian_value_ptr[68] = _tmp1462;
    jacobian_value_ptr[69] = _tmp1479;
    jacobian_value_ptr[70] = _tmp1490;
    jacobian_value_ptr[71] = _tmp1535;
    jacobian_value_ptr[72] = _tmp1428;
    jacobian_value_ptr[73] = _tmp1412;
    jacobian_value_ptr[74] = _tmp1517;
    jacobian_value_ptr[75] = _tmp1541;
    jacobian_value_ptr[76] = _tmp1534;
    jacobian_value_ptr[77] = _tmp1484;
    jacobian_value_ptr[78] = _tmp1421;
    jacobian_value_ptr[79] = _tmp1522;
    jacobian_value_ptr[80] = _tmp1435;
    jacobian_value_ptr[81] = _tmp1509;
    jacobian_value_ptr[82] = _tmp1377;
    jacobian_value_ptr[83] = _tmp1386;
    jacobian_value_ptr[84] = _tmp1498;
    jacobian_value_ptr[85] = _tmp1542;
    jacobian_value_ptr[86] = _tmp1491;
    jacobian_value_ptr[87] = _tmp1443;
    jacobian_value_ptr[88] = _tmp1539;
    jacobian_value_ptr[89] = _tmp1457;
    jacobian_value_ptr[90] = _tmp1371;
    jacobian_value_ptr[91] = _tmp1427;
    jacobian_value_ptr[92] = _tmp1468;
    jacobian_value_ptr[93] = _tmp1544;
    jacobian_value_ptr[94] = _tmp1547;
    jacobian_value_ptr[95] = _tmp1473;
    jacobian_value_ptr[96] = _tmp1546;
    jacobian_value_ptr[97] = _tmp1478;
    jacobian_value_ptr[98] = _tmp1384;
    jacobian_value_ptr[99] = _tmp1510;
    jacobian_value_ptr[100] = _tmp1362;
    jacobian_value_ptr[101] = _tmp1385;
    jacobian_value_ptr[102] = _tmp1532;
    jacobian_value_ptr[103] = _tmp1529;
    jacobian_value_ptr[104] = _tmp1663;
    jacobian_value_ptr[105] = _tmp1685;
    jacobian_value_ptr[106] = _tmp1604;
    jacobian_value_ptr[107] = _tmp1674;
    jacobian_value_ptr[108] = _tmp1691;
    jacobian_value_ptr[109] = _tmp1684;
    jacobian_value_ptr[110] = _tmp1646;
    jacobian_value_ptr[111] = _tmp1689;
    jacobian_value_ptr[112] = _tmp1625;
    jacobian_value_ptr[113] = _tmp1668;
    jacobian_value_ptr[114] = _tmp1688;
    jacobian_value_ptr[115] = _tmp1648;
    jacobian_value_ptr[116] = _tmp1656;
    jacobian_value_ptr[117] = _tmp1690;
    jacobian_value_ptr[118] = _tmp1591;
    jacobian_value_ptr[119] = _tmp1605;
    jacobian_value_ptr[120] = _tmp1631;
    jacobian_value_ptr[121] = _tmp1633;
    jacobian_value_ptr[122] = _tmp1701;
    jacobian_value_ptr[123] = _tmp1577;
    jacobian_value_ptr[124] = _tmp1704;
    jacobian_value_ptr[125] = _tmp1697;
    jacobian_value_ptr[126] = _tmp1582;
    jacobian_value_ptr[127] = _tmp1665;
    jacobian_value_ptr[128] = _tmp1639;
    jacobian_value_ptr[129] = _tmp1703;
    jacobian_value_ptr[130] = _tmp1686;
    jacobian_value_ptr[131] = _tmp1678;
    jacobian_value_ptr[132] = _tmp1572;
    jacobian_value_ptr[133] = _tmp1662;
    jacobian_value_ptr[134] = _tmp1683;
    jacobian_value_ptr[135] = _tmp1555;
    jacobian_value_ptr[136] = _tmp1698;
    jacobian_value_ptr[137] = _tmp1672;
    jacobian_value_ptr[138] = _tmp1609;
    jacobian_value_ptr[139] = _tmp1700;
    jacobian_value_ptr[140] = _tmp1666;
    jacobian_value_ptr[141] = _tmp1644;
    jacobian_value_ptr[142] = _tmp1568;
    jacobian_value_ptr[143] = _tmp1692;
    jacobian_value_ptr[144] = _tmp1661;
    jacobian_value_ptr[145] = _tmp1705;
    jacobian_value_ptr[146] = _tmp1610;
    jacobian_value_ptr[147] = _tmp1559;
    jacobian_value_ptr[148] = _tmp1652;
    jacobian_value_ptr[149] = _tmp1664;
    jacobian_value_ptr[150] = _tmp1564;
    jacobian_value_ptr[151] = _tmp1687;
    jacobian_value_ptr[152] = _tmp1611;
    jacobian_value_ptr[153] = _tmp1587;
    jacobian_value_ptr[154] = _tmp1682;
    jacobian_value_ptr[155] = _tmp1699;
    jacobian_value_ptr[156] = _tmp1834;
    jacobian_value_ptr[157] = _tmp1825;
    jacobian_value_ptr[158] = _tmp1855;
    jacobian_value_ptr[159] = _tmp1774;
    jacobian_value_ptr[160] = _tmp1785;
    jacobian_value_ptr[161] = _tmp1890;
    jacobian_value_ptr[162] = _tmp1903;
    jacobian_value_ptr[163] = _tmp1858;
    jacobian_value_ptr[164] = _tmp1856;
    jacobian_value_ptr[165] = _tmp1889;
    jacobian_value_ptr[166] = _tmp1857;
    jacobian_value_ptr[167] = _tmp1718;
    jacobian_value_ptr[168] = _tmp1853;
    jacobian_value_ptr[169] = _tmp1802;
    jacobian_value_ptr[170] = _tmp1823;
    jacobian_value_ptr[171] = _tmp1757;
    jacobian_value_ptr[172] = _tmp1773;
    jacobian_value_ptr[173] = _tmp1888;
    jacobian_value_ptr[174] = _tmp1902;
    jacobian_value_ptr[175] = _tmp1901;
    jacobian_value_ptr[176] = _tmp1904;
    jacobian_value_ptr[177] = _tmp1865;
    jacobian_value_ptr[178] = _tmp1715;
    jacobian_value_ptr[179] = _tmp1866;
    jacobian_value_ptr[180] = _tmp1765;
    jacobian_value_ptr[181] = _tmp1733;
    jacobian_value_ptr[182] = _tmp1815;
    jacobian_value_ptr[183] = _tmp1891;
    jacobian_value_ptr[184] = _tmp1878;
    jacobian_value_ptr[185] = _tmp1874;
    jacobian_value_ptr[186] = _tmp1892;
    jacobian_value_ptr[187] = _tmp1784;
    jacobian_value_ptr[188] = _tmp1725;
    jacobian_value_ptr[189] = _tmp1824;
    jacobian_value_ptr[190] = _tmp1804;
    jacobian_value_ptr[191] = _tmp1749;
    jacobian_value_ptr[192] = _tmp1877;
    jacobian_value_ptr[193] = _tmp1764;
    jacobian_value_ptr[194] = _tmp1793;
    jacobian_value_ptr[195] = _tmp1843;
    jacobian_value_ptr[196] = _tmp1844;
    jacobian_value_ptr[197] = _tmp1833;
    jacobian_value_ptr[198] = _tmp1854;
    jacobian_value_ptr[199] = _tmp1822;
    jacobian_value_ptr[200] = _tmp1875;
    jacobian_value_ptr[201] = _tmp1852;
    jacobian_value_ptr[202] = _tmp1886;
    jacobian_value_ptr[203] = _tmp1893;
    jacobian_value_ptr[204] = _tmp1887;
    jacobian_value_ptr[205] = _tmp1842;
    jacobian_value_ptr[206] = _tmp1794;
    jacobian_value_ptr[207] = _tmp1741;
    jacobian_value_ptr[208] = _tmp1910;
    jacobian_value_ptr[209] = _tmp1909;
    jacobian_value_ptr[210] = _tmp1915;
    jacobian_value_ptr[211] = _tmp1947;
    jacobian_value_ptr[212] = _tmp2015;
    jacobian_value_ptr[213] = _tmp2031;
    jacobian_value_ptr[214] = _tmp1971;
    jacobian_value_ptr[215] = _tmp2004;
    jacobian_value_ptr[216] = _tmp2005;
    jacobian_value_ptr[217] = _tmp1961;
    jacobian_value_ptr[218] = _tmp2006;
    jacobian_value_ptr[219] = _tmp1940;
    jacobian_value_ptr[220] = _tmp2027;
    jacobian_value_ptr[221] = _tmp2014;
    jacobian_value_ptr[222] = _tmp1946;
    jacobian_value_ptr[223] = _tmp2003;
    jacobian_value_ptr[224] = _tmp1981;
    jacobian_value_ptr[225] = _tmp1980;
    jacobian_value_ptr[226] = _tmp1928;
    jacobian_value_ptr[227] = _tmp1976;
    jacobian_value_ptr[228] = _tmp1938;
    jacobian_value_ptr[229] = _tmp2009;
    jacobian_value_ptr[230] = _tmp1966;
    jacobian_value_ptr[231] = _tmp1982;
    jacobian_value_ptr[232] = _tmp1995;
    jacobian_value_ptr[233] = _tmp2010;
    jacobian_value_ptr[234] = _tmp2030;
    jacobian_value_ptr[235] = _tmp2001;
    jacobian_value_ptr[236] = _tmp2007;
    jacobian_value_ptr[237] = _tmp1933;
    jacobian_value_ptr[238] = _tmp2026;
    jacobian_value_ptr[239] = _tmp1986;
    jacobian_value_ptr[240] = _tmp2021;
    jacobian_value_ptr[241] = _tmp2032;
    jacobian_value_ptr[242] = _tmp1914;
    jacobian_value_ptr[243] = _tmp2002;
    jacobian_value_ptr[244] = _tmp1991;
    jacobian_value_ptr[245] = _tmp2016;
    jacobian_value_ptr[246] = _tmp1924;
    jacobian_value_ptr[247] = _tmp1919;
    jacobian_value_ptr[248] = _tmp1923;
    jacobian_value_ptr[249] = _tmp1948;
    jacobian_value_ptr[250] = _tmp2025;
    jacobian_value_ptr[251] = _tmp1960;
    jacobian_value_ptr[252] = _tmp2023;
    jacobian_value_ptr[253] = _tmp1908;
    jacobian_value_ptr[254] = _tmp2008;
    jacobian_value_ptr[255] = _tmp1970;
    jacobian_value_ptr[256] = _tmp2028;
    jacobian_value_ptr[257] = _tmp1953;
    jacobian_value_ptr[258] = _tmp2029;
    jacobian_value_ptr[259] = _tmp1975;
    jacobian_value_ptr[260] = _tmp2101;
    jacobian_value_ptr[261] = _tmp2112;
    jacobian_value_ptr[262] = _tmp2066;
    jacobian_value_ptr[263] = _tmp2100;
    jacobian_value_ptr[264] = _tmp2033;
    jacobian_value_ptr[265] = _tmp2157;
    jacobian_value_ptr[266] = _tmp2077;
    jacobian_value_ptr[267] = _tmp2088;
    jacobian_value_ptr[268] = _tmp2122;
    jacobian_value_ptr[269] = _tmp2083;
    jacobian_value_ptr[270] = _tmp2120;
    jacobian_value_ptr[271] = _tmp2039;
    jacobian_value_ptr[272] = _tmp2043;
    jacobian_value_ptr[273] = _tmp2095;
    jacobian_value_ptr[274] = _tmp2137;
    jacobian_value_ptr[275] = _tmp2119;
    jacobian_value_ptr[276] = _tmp2047;
    jacobian_value_ptr[277] = _tmp2124;
    jacobian_value_ptr[278] = _tmp2106;
    jacobian_value_ptr[279] = _tmp2125;
    jacobian_value_ptr[280] = _tmp2093;
    jacobian_value_ptr[281] = _tmp2114;
    jacobian_value_ptr[282] = _tmp2121;
    jacobian_value_ptr[283] = _tmp2037;
    jacobian_value_ptr[284] = _tmp2099;
    jacobian_value_ptr[285] = _tmp2139;
    jacobian_value_ptr[286] = _tmp2087;
    jacobian_value_ptr[287] = _tmp2159;
    jacobian_value_ptr[288] = _tmp2155;
    jacobian_value_ptr[289] = _tmp2070;
    jacobian_value_ptr[290] = _tmp2158;
    jacobian_value_ptr[291] = _tmp2150;
    jacobian_value_ptr[292] = _tmp2154;
    jacobian_value_ptr[293] = _tmp2144;
    jacobian_value_ptr[294] = _tmp2065;
    jacobian_value_ptr[295] = _tmp2126;
    jacobian_value_ptr[296] = _tmp2132;
    jacobian_value_ptr[297] = _tmp2138;
    jacobian_value_ptr[298] = _tmp2123;
    jacobian_value_ptr[299] = _tmp2060;
    jacobian_value_ptr[300] = _tmp2082;
    jacobian_value_ptr[301] = _tmp2102;
    jacobian_value_ptr[302] = _tmp2052;
    jacobian_value_ptr[303] = _tmp2094;
    jacobian_value_ptr[304] = _tmp2156;
    jacobian_value_ptr[305] = _tmp2076;
    jacobian_value_ptr[306] = _tmp2136;
    jacobian_value_ptr[307] = _tmp2152;
    jacobian_value_ptr[308] = _tmp2111;
    jacobian_value_ptr[309] = _tmp2113;
    jacobian_value_ptr[310] = _tmp2056;
    jacobian_value_ptr[311] = _tmp2078;
    jacobian_value_ptr[312] = _tmp2171;
    jacobian_value_ptr[313] = _tmp2170;
    jacobian_value_ptr[314] = _tmp769;
    jacobian_value_ptr[315] = _tmp2176;
    jacobian_value_ptr[316] = _tmp2178;
    jacobian_value_ptr[317] = _tmp772;
    jacobian_value_ptr[318] = _tmp2183;
    jacobian_value_ptr[319] = _tmp2184;
    jacobian_value_ptr[320] = _tmp775;
    jacobian_value_ptr[321] = _tmp2190;
    jacobian_value_ptr[322] = _tmp2191;
    jacobian_value_ptr[323] = _tmp778;
    jacobian_value_ptr[324] = _tmp2195;
    jacobian_value_ptr[325] = _tmp2197;
    jacobian_value_ptr[326] = _tmp781;
    jacobian_value_ptr[327] = _tmp2202;
    jacobian_value_ptr[328] = _tmp2203;
    jacobian_value_ptr[329] = _tmp784;
    jacobian_value_ptr[330] = _tmp2208;
    jacobian_value_ptr[331] = _tmp2207;
    jacobian_value_ptr[332] = _tmp787;
    jacobian_value_ptr[333] = _tmp2214;
    jacobian_value_ptr[334] = _tmp2215;
    jacobian_value_ptr[335] = _tmp790;
    jacobian_value_ptr[336] = _tmp2220;
    jacobian_value_ptr[337] = _tmp2222;
    jacobian_value_ptr[338] = _tmp793;
    jacobian_value_ptr[339] = _tmp2228;
    jacobian_value_ptr[340] = _tmp2226;
    jacobian_value_ptr[341] = _tmp796;
    jacobian_value_ptr[342] = _tmp2234;
    jacobian_value_ptr[343] = _tmp2233;
    jacobian_value_ptr[344] = _tmp799;
    jacobian_value_ptr[345] = _tmp2239;
    jacobian_value_ptr[346] = _tmp2240;
    jacobian_value_ptr[347] = _tmp802;
    jacobian_value_ptr[348] = _tmp2246;
    jacobian_value_ptr[349] = _tmp2244;
    jacobian_value_ptr[350] = _tmp805;
    jacobian_value_ptr[351] = _tmp2252;
    jacobian_value_ptr[352] = _tmp2250;
    jacobian_value_ptr[353] = _tmp808;
    jacobian_value_ptr[354] = _tmp2259;
    jacobian_value_ptr[355] = _tmp2258;
    jacobian_value_ptr[356] = _tmp811;
    jacobian_value_ptr[357] = _tmp2263;
    jacobian_value_ptr[358] = _tmp2265;
    jacobian_value_ptr[359] = _tmp814;
    jacobian_value_ptr[360] = _tmp2269;
    jacobian_value_ptr[361] = _tmp2271;
    jacobian_value_ptr[362] = _tmp817;
    jacobian_value_ptr[363] = _tmp2275;
    jacobian_value_ptr[364] = _tmp2276;
    jacobian_value_ptr[365] = _tmp820;
    jacobian_value_ptr[366] = _tmp2281;
    jacobian_value_ptr[367] = _tmp2283;
    jacobian_value_ptr[368] = _tmp823;
    jacobian_value_ptr[369] = _tmp2289;
    jacobian_value_ptr[370] = _tmp2287;
    jacobian_value_ptr[371] = _tmp826;
  }

  if (hessian != nullptr) {
    static constexpr int kRows_hessian = 26;
    static constexpr int kCols_hessian = 26;
    static constexpr int kNumNonZero_hessian = 161;
    static constexpr int kColPtrs_hessian[] = {0,   26,  51,  75,  98,  120, 141, 142, 143,
                                               144, 145, 146, 147, 148, 149, 150, 151, 152,
                                               153, 154, 155, 156, 157, 158, 159, 160, 161};
    static constexpr int kRowIndices_hessian[] = {
        0,  1,  2,  3,  4,  5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 1,  2,  3,  4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 2,  3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
    if (hessian->nonZeros() != 161 || hessian->outerSize() != 26 || hessian->innerSize() != 26 ||
        !hessian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar hessian_empty_value_ptr[161];
      *hessian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_hessian, kCols_hessian, kNumNonZero_hessian, kColPtrs_hessian, kRowIndices_hessian,
          hessian_empty_value_ptr);
    }
    Scalar* hessian_value_ptr = hessian->valuePtr();

    hessian_value_ptr[0] = std::pow(_tmp1005, Scalar(2)) + std::pow(_tmp1018, Scalar(2)) +
                           std::pow(_tmp1021, Scalar(2)) + std::pow(_tmp1037, Scalar(2)) +
                           std::pow(_tmp1051, Scalar(2)) + std::pow(_tmp1064, Scalar(2)) +
                           std::pow(_tmp1066, Scalar(2)) + std::pow(_tmp1068, Scalar(2)) +
                           std::pow(_tmp1083, Scalar(2)) + std::pow(_tmp1096, Scalar(2)) +
                           std::pow(_tmp1111, Scalar(2)) + std::pow(_tmp1115, Scalar(2)) +
                           std::pow(_tmp1130, Scalar(2)) + std::pow(_tmp1145, Scalar(2)) +
                           std::pow(_tmp1149, Scalar(2)) + std::pow(_tmp1151, Scalar(2)) +
                           std::pow(_tmp1155, Scalar(2)) + std::pow(_tmp1160, Scalar(2)) +
                           std::pow(_tmp1175, Scalar(2)) + std::pow(_tmp1189, Scalar(2)) +
                           std::pow(_tmp1193, Scalar(2)) + std::pow(_tmp1206, Scalar(2)) +
                           std::pow(_tmp1210, Scalar(2)) + std::pow(_tmp1212, Scalar(2)) +
                           std::pow(_tmp1216, Scalar(2)) + std::pow(_tmp1220, Scalar(2)) +
                           std::pow(_tmp1224, Scalar(2)) + std::pow(_tmp1227, Scalar(2)) +
                           std::pow(_tmp1242, Scalar(2)) + std::pow(_tmp1257, Scalar(2)) +
                           std::pow(_tmp1260, Scalar(2)) + std::pow(_tmp1264, Scalar(2)) +
                           std::pow(_tmp1266, Scalar(2)) + std::pow(_tmp1281, Scalar(2)) +
                           std::pow(_tmp1285, Scalar(2)) + std::pow(_tmp1300, Scalar(2)) +
                           std::pow(_tmp1304, Scalar(2)) + std::pow(_tmp1307, Scalar(2)) +
                           std::pow(_tmp1311, Scalar(2)) + std::pow(_tmp1314, Scalar(2)) +
                           std::pow(_tmp1315, Scalar(2)) + std::pow(_tmp1317, Scalar(2)) +
                           std::pow(_tmp1321, Scalar(2)) + std::pow(_tmp1324, Scalar(2)) +
                           std::pow(_tmp1326, Scalar(2)) + std::pow(_tmp1330, Scalar(2)) +
                           std::pow(_tmp900, Scalar(2)) + std::pow(_tmp920, Scalar(2)) +
                           std::pow(_tmp958, Scalar(2)) + std::pow(_tmp973, Scalar(2)) +
                           std::pow(_tmp976, Scalar(2)) + std::pow(_tmp989, Scalar(2));
    hessian_value_ptr[1] =
        _tmp1005 * _tmp1547 + _tmp1018 * _tmp1451 + _tmp1021 * _tmp1521 + _tmp1037 * _tmp1362 +
        _tmp1051 * _tmp1544 + _tmp1064 * _tmp1386 + _tmp1066 * _tmp1543 + _tmp1068 * _tmp1424 +
        _tmp1083 * _tmp1457 + _tmp1096 * _tmp1443 + _tmp1111 * _tmp1508 + _tmp1115 * _tmp1462 +
        _tmp1130 * _tmp1498 + _tmp1145 * _tmp1535 + _tmp1149 * _tmp1491 + _tmp1151 * _tmp1507 +
        _tmp1155 * _tmp1377 + _tmp1160 * _tmp1468 + _tmp1175 * _tmp1510 + _tmp1189 * _tmp1371 +
        _tmp1193 * _tmp1385 + _tmp1206 * _tmp1412 + _tmp1210 * _tmp1428 + _tmp1212 * _tmp1536 +
        _tmp1216 * _tmp1490 + _tmp1220 * _tmp1505 + _tmp1224 * _tmp1539 + _tmp1227 * _tmp1506 +
        _tmp1242 * _tmp1435 + _tmp1257 * _tmp1546 + _tmp1260 * _tmp1545 + _tmp1264 * _tmp1478 +
        _tmp1266 * _tmp1533 + _tmp1281 * _tmp1532 + _tmp1285 * _tmp1529 + _tmp1300 * _tmp1541 +
        _tmp1304 * _tmp1522 + _tmp1307 * _tmp1473 + _tmp1311 * _tmp1384 + _tmp1314 * _tmp1484 +
        _tmp1315 * _tmp1356 + _tmp1317 * _tmp1427 + _tmp1321 * _tmp1509 + _tmp1324 * _tmp1517 +
        _tmp1326 * _tmp1403 + _tmp1330 * _tmp1542 + _tmp1416 * _tmp958 + _tmp1421 * _tmp989 +
        _tmp1479 * _tmp973 + _tmp1530 * _tmp900 + _tmp1534 * _tmp920 + _tmp1538 * _tmp976;
    hessian_value_ptr[2] =
        _tmp1005 * _tmp1610 + _tmp1018 * _tmp1656 + _tmp1021 * _tmp1690 + _tmp1037 * _tmp1611 +
        _tmp1051 * _tmp1705 + _tmp1064 * _tmp1555 + _tmp1066 * _tmp1604 + _tmp1068 * _tmp1688 +
        _tmp1083 * _tmp1644 + _tmp1096 * _tmp1700 + _tmp1111 * _tmp1591 + _tmp1115 * _tmp1631 +
        _tmp1130 * _tmp1698 + _tmp1145 * _tmp1577 + _tmp1149 * _tmp1609 + _tmp1151 * _tmp1663 +
        _tmp1155 * _tmp1683 + _tmp1160 * _tmp1661 + _tmp1175 * _tmp1687 + _tmp1189 * _tmp1568 +
        _tmp1193 * _tmp1587 + _tmp1206 * _tmp1697 + _tmp1210 * _tmp1704 + _tmp1212 * _tmp1668 +
        _tmp1216 * _tmp1701 + _tmp1220 * _tmp1605 + _tmp1224 * _tmp1666 + _tmp1227 * _tmp1684 +
        _tmp1242 * _tmp1572 + _tmp1257 * _tmp1652 + _tmp1260 * _tmp1689 + _tmp1264 * _tmp1664 +
        _tmp1266 * _tmp1685 + _tmp1281 * _tmp1682 + _tmp1285 * _tmp1699 + _tmp1300 * _tmp1665 +
        _tmp1304 * _tmp1678 + _tmp1307 * _tmp1559 + _tmp1311 * _tmp1564 + _tmp1314 * _tmp1703 +
        _tmp1315 * _tmp1625 + _tmp1317 * _tmp1692 + _tmp1321 * _tmp1662 + _tmp1324 * _tmp1582 +
        _tmp1326 * _tmp1691 + _tmp1330 * _tmp1672 + _tmp1633 * _tmp973 + _tmp1639 * _tmp920 +
        _tmp1646 * _tmp900 + _tmp1648 * _tmp976 + _tmp1674 * _tmp958 + _tmp1686 * _tmp989;
    hessian_value_ptr[3] =
        _tmp1005 * _tmp1854 + _tmp1018 * _tmp1853 + _tmp1021 * _tmp1802 + _tmp1037 * _tmp1887 +
        _tmp1051 * _tmp1833 + _tmp1064 * _tmp1784 + _tmp1066 * _tmp1855 + _tmp1068 * _tmp1857 +
        _tmp1083 * _tmp1764 + _tmp1096 * _tmp1749 + _tmp1111 * _tmp1823 + _tmp1115 * _tmp1773 +
        _tmp1130 * _tmp1725 + _tmp1145 * _tmp1901 + _tmp1149 * _tmp1804 + _tmp1151 * _tmp1834 +
        _tmp1155 * _tmp1892 + _tmp1160 * _tmp1844 + _tmp1175 * _tmp1893 + _tmp1189 * _tmp1793 +
        _tmp1193 * _tmp1842 + _tmp1206 * _tmp1865 + _tmp1210 * _tmp1904 + _tmp1212 * _tmp1889 +
        _tmp1216 * _tmp1902 + _tmp1220 * _tmp1757 + _tmp1224 * _tmp1877 + _tmp1227 * _tmp1890 +
        _tmp1242 * _tmp1878 + _tmp1257 * _tmp1875 + _tmp1260 * _tmp1858 + _tmp1264 * _tmp1852 +
        _tmp1266 * _tmp1825 + _tmp1281 * _tmp1794 + _tmp1285 * _tmp1741 + _tmp1300 * _tmp1866 +
        _tmp1304 * _tmp1891 + _tmp1307 * _tmp1822 + _tmp1311 * _tmp1886 + _tmp1314 * _tmp1733 +
        _tmp1315 * _tmp1856 + _tmp1317 * _tmp1843 + _tmp1321 * _tmp1874 + _tmp1324 * _tmp1715 +
        _tmp1326 * _tmp1785 + _tmp1330 * _tmp1824 + _tmp1718 * _tmp976 + _tmp1765 * _tmp920 +
        _tmp1774 * _tmp958 + _tmp1815 * _tmp989 + _tmp1888 * _tmp973 + _tmp1903 * _tmp900;
    hessian_value_ptr[4] =
        _tmp1005 * _tmp2025 + _tmp1018 * _tmp2027 + _tmp1021 * _tmp2014 + _tmp1037 * _tmp2028 +
        _tmp1051 * _tmp1948 + _tmp1064 * _tmp1986 + _tmp1066 * _tmp1915 + _tmp1068 * _tmp2006 +
        _tmp1083 * _tmp2016 + _tmp1096 * _tmp2002 + _tmp1111 * _tmp1946 + _tmp1115 * _tmp1981 +
        _tmp1130 * _tmp2021 + _tmp1145 * _tmp1976 + _tmp1149 * _tmp1914 + _tmp1151 * _tmp1910 +
        _tmp1155 * _tmp2026 + _tmp1160 * _tmp1923 + _tmp1175 * _tmp1970 + _tmp1189 * _tmp1924 +
        _tmp1193 * _tmp1953 + _tmp1206 * _tmp2009 + _tmp1210 * _tmp1938 + _tmp1212 * _tmp1961 +
        _tmp1216 * _tmp1928 + _tmp1220 * _tmp2003 + _tmp1224 * _tmp1991 + _tmp1227 * _tmp2031 +
        _tmp1242 * _tmp2007 + _tmp1257 * _tmp2023 + _tmp1260 * _tmp2004 + _tmp1264 * _tmp1908 +
        _tmp1266 * _tmp1909 + _tmp1281 * _tmp2029 + _tmp1285 * _tmp1975 + _tmp1300 * _tmp1982 +
        _tmp1304 * _tmp2001 + _tmp1307 * _tmp1960 + _tmp1311 * _tmp2008 + _tmp1314 * _tmp2010 +
        _tmp1315 * _tmp2005 + _tmp1317 * _tmp1919 + _tmp1321 * _tmp1933 + _tmp1324 * _tmp1966 +
        _tmp1326 * _tmp2015 + _tmp1330 * _tmp2032 + _tmp1940 * _tmp976 + _tmp1947 * _tmp958 +
        _tmp1971 * _tmp900 + _tmp1980 * _tmp973 + _tmp1995 * _tmp920 + _tmp2030 * _tmp989;
    hessian_value_ptr[5] =
        _tmp1005 * _tmp2052 + _tmp1018 * _tmp2043 + _tmp1021 * _tmp2095 + _tmp1037 * _tmp2111 +
        _tmp1051 * _tmp2102 + _tmp1064 * _tmp2150 + _tmp1066 * _tmp2066 + _tmp1068 * _tmp2120 +
        _tmp1083 * _tmp2138 + _tmp1096 * _tmp2126 + _tmp1111 * _tmp2137 + _tmp1115 * _tmp2047 +
        _tmp1130 * _tmp2154 + _tmp1145 * _tmp2125 + _tmp1149 * _tmp2065 + _tmp1151 * _tmp2101 +
        _tmp1155 * _tmp2158 + _tmp1160 * _tmp2082 + _tmp1175 * _tmp2152 + _tmp1189 * _tmp2123 +
        _tmp1193 * _tmp2113 + _tmp1206 * _tmp2114 + _tmp1210 * _tmp2093 + _tmp1212 * _tmp2083 +
        _tmp1216 * _tmp2106 + _tmp1220 * _tmp2119 + _tmp1224 * _tmp2132 + _tmp1227 * _tmp2157 +
        _tmp1242 * _tmp2155 + _tmp1257 * _tmp2156 + _tmp1260 * _tmp2088 + _tmp1264 * _tmp2076 +
        _tmp1266 * _tmp2112 + _tmp1281 * _tmp2056 + _tmp1285 * _tmp2078 + _tmp1300 * _tmp2037 +
        _tmp1304 * _tmp2159 + _tmp1307 * _tmp2094 + _tmp1311 * _tmp2136 + _tmp1314 * _tmp2139 +
        _tmp1315 * _tmp2122 + _tmp1317 * _tmp2060 + _tmp1321 * _tmp2070 + _tmp1324 * _tmp2121 +
        _tmp1326 * _tmp2033 + _tmp1330 * _tmp2144 + _tmp2039 * _tmp976 + _tmp2077 * _tmp900 +
        _tmp2087 * _tmp989 + _tmp2099 * _tmp920 + _tmp2100 * _tmp958 + _tmp2124 * _tmp973;
    hessian_value_ptr[6] = _tmp1018 * _tmp2171 + _tmp1021 * _tmp2170;
    hessian_value_ptr[7] = _tmp1111 * _tmp2176 + _tmp1220 * _tmp2178;
    hessian_value_ptr[8] = _tmp1115 * _tmp2183 + _tmp2184 * _tmp973;
    hessian_value_ptr[9] = _tmp1145 * _tmp2191 + _tmp1216 * _tmp2190;
    hessian_value_ptr[10] = _tmp1206 * _tmp2197 + _tmp1210 * _tmp2195;
    hessian_value_ptr[11] = _tmp1300 * _tmp2203 + _tmp1324 * _tmp2202;
    hessian_value_ptr[12] = _tmp1314 * _tmp2207 + _tmp2208 * _tmp920;
    hessian_value_ptr[13] = _tmp1304 * _tmp2215 + _tmp2214 * _tmp989;
    hessian_value_ptr[14] = _tmp1242 * _tmp2220 + _tmp1321 * _tmp2222;
    hessian_value_ptr[15] = _tmp1064 * _tmp2226 + _tmp1155 * _tmp2228;
    hessian_value_ptr[16] = _tmp1130 * _tmp2234 + _tmp1330 * _tmp2233;
    hessian_value_ptr[17] = _tmp1096 * _tmp2240 + _tmp1149 * _tmp2239;
    hessian_value_ptr[18] = _tmp1083 * _tmp2244 + _tmp1224 * _tmp2246;
    hessian_value_ptr[19] = _tmp1189 * _tmp2252 + _tmp1317 * _tmp2250;
    hessian_value_ptr[20] = _tmp1051 * _tmp2258 + _tmp1160 * _tmp2259;
    hessian_value_ptr[21] = _tmp1005 * _tmp2263 + _tmp1307 * _tmp2265;
    hessian_value_ptr[22] = _tmp1257 * _tmp2269 + _tmp1264 * _tmp2271;
    hessian_value_ptr[23] = _tmp1175 * _tmp2276 + _tmp1311 * _tmp2275;
    hessian_value_ptr[24] = _tmp1037 * _tmp2281 + _tmp1193 * _tmp2283;
    hessian_value_ptr[25] = _tmp1281 * _tmp2289 + _tmp1285 * _tmp2287;
    hessian_value_ptr[26] = std::pow(_tmp1356, Scalar(2)) + std::pow(_tmp1362, Scalar(2)) +
                            std::pow(_tmp1371, Scalar(2)) + std::pow(_tmp1377, Scalar(2)) +
                            std::pow(_tmp1384, Scalar(2)) + std::pow(_tmp1385, Scalar(2)) +
                            std::pow(_tmp1386, Scalar(2)) + std::pow(_tmp1403, Scalar(2)) +
                            std::pow(_tmp1412, Scalar(2)) + std::pow(_tmp1416, Scalar(2)) +
                            std::pow(_tmp1421, Scalar(2)) + std::pow(_tmp1424, Scalar(2)) +
                            std::pow(_tmp1427, Scalar(2)) + std::pow(_tmp1428, Scalar(2)) +
                            std::pow(_tmp1435, Scalar(2)) + std::pow(_tmp1443, Scalar(2)) +
                            std::pow(_tmp1451, Scalar(2)) + std::pow(_tmp1457, Scalar(2)) +
                            std::pow(_tmp1462, Scalar(2)) + std::pow(_tmp1468, Scalar(2)) +
                            std::pow(_tmp1473, Scalar(2)) + std::pow(_tmp1478, Scalar(2)) +
                            std::pow(_tmp1479, Scalar(2)) + std::pow(_tmp1484, Scalar(2)) +
                            std::pow(_tmp1490, Scalar(2)) + std::pow(_tmp1491, Scalar(2)) +
                            std::pow(_tmp1498, Scalar(2)) + std::pow(_tmp1505, Scalar(2)) +
                            std::pow(_tmp1506, Scalar(2)) + std::pow(_tmp1507, Scalar(2)) +
                            std::pow(_tmp1508, Scalar(2)) + std::pow(_tmp1509, Scalar(2)) +
                            std::pow(_tmp1510, Scalar(2)) + std::pow(_tmp1517, Scalar(2)) +
                            std::pow(_tmp1521, Scalar(2)) + std::pow(_tmp1522, Scalar(2)) +
                            std::pow(_tmp1529, Scalar(2)) + std::pow(_tmp1530, Scalar(2)) +
                            std::pow(_tmp1532, Scalar(2)) + std::pow(_tmp1533, Scalar(2)) +
                            std::pow(_tmp1534, Scalar(2)) + std::pow(_tmp1535, Scalar(2)) +
                            std::pow(_tmp1536, Scalar(2)) + std::pow(_tmp1538, Scalar(2)) +
                            std::pow(_tmp1539, Scalar(2)) + std::pow(_tmp1541, Scalar(2)) +
                            std::pow(_tmp1542, Scalar(2)) + std::pow(_tmp1543, Scalar(2)) +
                            std::pow(_tmp1544, Scalar(2)) + std::pow(_tmp1545, Scalar(2)) +
                            std::pow(_tmp1546, Scalar(2)) + std::pow(_tmp1547, Scalar(2));
    hessian_value_ptr[27] =
        _tmp1356 * _tmp1625 + _tmp1362 * _tmp1611 + _tmp1371 * _tmp1568 + _tmp1377 * _tmp1683 +
        _tmp1384 * _tmp1564 + _tmp1385 * _tmp1587 + _tmp1386 * _tmp1555 + _tmp1403 * _tmp1691 +
        _tmp1412 * _tmp1697 + _tmp1416 * _tmp1674 + _tmp1421 * _tmp1686 + _tmp1424 * _tmp1688 +
        _tmp1427 * _tmp1692 + _tmp1428 * _tmp1704 + _tmp1435 * _tmp1572 + _tmp1443 * _tmp1700 +
        _tmp1451 * _tmp1656 + _tmp1457 * _tmp1644 + _tmp1462 * _tmp1631 + _tmp1468 * _tmp1661 +
        _tmp1473 * _tmp1559 + _tmp1478 * _tmp1664 + _tmp1479 * _tmp1633 + _tmp1484 * _tmp1703 +
        _tmp1490 * _tmp1701 + _tmp1491 * _tmp1609 + _tmp1498 * _tmp1698 + _tmp1505 * _tmp1605 +
        _tmp1506 * _tmp1684 + _tmp1507 * _tmp1663 + _tmp1508 * _tmp1591 + _tmp1509 * _tmp1662 +
        _tmp1510 * _tmp1687 + _tmp1517 * _tmp1582 + _tmp1521 * _tmp1690 + _tmp1522 * _tmp1678 +
        _tmp1529 * _tmp1699 + _tmp1530 * _tmp1646 + _tmp1532 * _tmp1682 + _tmp1533 * _tmp1685 +
        _tmp1534 * _tmp1639 + _tmp1535 * _tmp1577 + _tmp1536 * _tmp1668 + _tmp1538 * _tmp1648 +
        _tmp1539 * _tmp1666 + _tmp1541 * _tmp1665 + _tmp1542 * _tmp1672 + _tmp1543 * _tmp1604 +
        _tmp1544 * _tmp1705 + _tmp1545 * _tmp1689 + _tmp1546 * _tmp1652 + _tmp1547 * _tmp1610;
    hessian_value_ptr[28] =
        _tmp1356 * _tmp1856 + _tmp1362 * _tmp1887 + _tmp1371 * _tmp1793 + _tmp1377 * _tmp1892 +
        _tmp1384 * _tmp1886 + _tmp1385 * _tmp1842 + _tmp1386 * _tmp1784 + _tmp1403 * _tmp1785 +
        _tmp1412 * _tmp1865 + _tmp1416 * _tmp1774 + _tmp1421 * _tmp1815 + _tmp1424 * _tmp1857 +
        _tmp1427 * _tmp1843 + _tmp1428 * _tmp1904 + _tmp1435 * _tmp1878 + _tmp1443 * _tmp1749 +
        _tmp1451 * _tmp1853 + _tmp1457 * _tmp1764 + _tmp1462 * _tmp1773 + _tmp1468 * _tmp1844 +
        _tmp1473 * _tmp1822 + _tmp1478 * _tmp1852 + _tmp1479 * _tmp1888 + _tmp1484 * _tmp1733 +
        _tmp1490 * _tmp1902 + _tmp1491 * _tmp1804 + _tmp1498 * _tmp1725 + _tmp1505 * _tmp1757 +
        _tmp1506 * _tmp1890 + _tmp1507 * _tmp1834 + _tmp1508 * _tmp1823 + _tmp1509 * _tmp1874 +
        _tmp1510 * _tmp1893 + _tmp1517 * _tmp1715 + _tmp1521 * _tmp1802 + _tmp1522 * _tmp1891 +
        _tmp1529 * _tmp1741 + _tmp1530 * _tmp1903 + _tmp1532 * _tmp1794 + _tmp1533 * _tmp1825 +
        _tmp1534 * _tmp1765 + _tmp1535 * _tmp1901 + _tmp1536 * _tmp1889 + _tmp1538 * _tmp1718 +
        _tmp1539 * _tmp1877 + _tmp1541 * _tmp1866 + _tmp1542 * _tmp1824 + _tmp1543 * _tmp1855 +
        _tmp1544 * _tmp1833 + _tmp1545 * _tmp1858 + _tmp1546 * _tmp1875 + _tmp1547 * _tmp1854;
    hessian_value_ptr[29] =
        _tmp1356 * _tmp2005 + _tmp1362 * _tmp2028 + _tmp1371 * _tmp1924 + _tmp1377 * _tmp2026 +
        _tmp1384 * _tmp2008 + _tmp1385 * _tmp1953 + _tmp1386 * _tmp1986 + _tmp1403 * _tmp2015 +
        _tmp1412 * _tmp2009 + _tmp1416 * _tmp1947 + _tmp1421 * _tmp2030 + _tmp1424 * _tmp2006 +
        _tmp1427 * _tmp1919 + _tmp1428 * _tmp1938 + _tmp1435 * _tmp2007 + _tmp1443 * _tmp2002 +
        _tmp1451 * _tmp2027 + _tmp1457 * _tmp2016 + _tmp1462 * _tmp1981 + _tmp1468 * _tmp1923 +
        _tmp1473 * _tmp1960 + _tmp1478 * _tmp1908 + _tmp1479 * _tmp1980 + _tmp1484 * _tmp2010 +
        _tmp1490 * _tmp1928 + _tmp1491 * _tmp1914 + _tmp1498 * _tmp2021 + _tmp1505 * _tmp2003 +
        _tmp1506 * _tmp2031 + _tmp1507 * _tmp1910 + _tmp1508 * _tmp1946 + _tmp1509 * _tmp1933 +
        _tmp1510 * _tmp1970 + _tmp1517 * _tmp1966 + _tmp1521 * _tmp2014 + _tmp1522 * _tmp2001 +
        _tmp1529 * _tmp1975 + _tmp1530 * _tmp1971 + _tmp1532 * _tmp2029 + _tmp1533 * _tmp1909 +
        _tmp1534 * _tmp1995 + _tmp1535 * _tmp1976 + _tmp1536 * _tmp1961 + _tmp1538 * _tmp1940 +
        _tmp1539 * _tmp1991 + _tmp1541 * _tmp1982 + _tmp1542 * _tmp2032 + _tmp1543 * _tmp1915 +
        _tmp1544 * _tmp1948 + _tmp1545 * _tmp2004 + _tmp1546 * _tmp2023 + _tmp1547 * _tmp2025;
    hessian_value_ptr[30] =
        _tmp1356 * _tmp2122 + _tmp1362 * _tmp2111 + _tmp1371 * _tmp2123 + _tmp1377 * _tmp2158 +
        _tmp1384 * _tmp2136 + _tmp1385 * _tmp2113 + _tmp1386 * _tmp2150 + _tmp1403 * _tmp2033 +
        _tmp1412 * _tmp2114 + _tmp1416 * _tmp2100 + _tmp1421 * _tmp2087 + _tmp1424 * _tmp2120 +
        _tmp1427 * _tmp2060 + _tmp1428 * _tmp2093 + _tmp1435 * _tmp2155 + _tmp1443 * _tmp2126 +
        _tmp1451 * _tmp2043 + _tmp1457 * _tmp2138 + _tmp1462 * _tmp2047 + _tmp1468 * _tmp2082 +
        _tmp1473 * _tmp2094 + _tmp1478 * _tmp2076 + _tmp1479 * _tmp2124 + _tmp1484 * _tmp2139 +
        _tmp1490 * _tmp2106 + _tmp1491 * _tmp2065 + _tmp1498 * _tmp2154 + _tmp1505 * _tmp2119 +
        _tmp1506 * _tmp2157 + _tmp1507 * _tmp2101 + _tmp1508 * _tmp2137 + _tmp1509 * _tmp2070 +
        _tmp1510 * _tmp2152 + _tmp1517 * _tmp2121 + _tmp1521 * _tmp2095 + _tmp1522 * _tmp2159 +
        _tmp1529 * _tmp2078 + _tmp1530 * _tmp2077 + _tmp1532 * _tmp2056 + _tmp1533 * _tmp2112 +
        _tmp1534 * _tmp2099 + _tmp1535 * _tmp2125 + _tmp1536 * _tmp2083 + _tmp1538 * _tmp2039 +
        _tmp1539 * _tmp2132 + _tmp1541 * _tmp2037 + _tmp1542 * _tmp2144 + _tmp1543 * _tmp2066 +
        _tmp1544 * _tmp2102 + _tmp1545 * _tmp2088 + _tmp1546 * _tmp2156 + _tmp1547 * _tmp2052;
    hessian_value_ptr[31] = _tmp1451 * _tmp2171 + _tmp1521 * _tmp2170;
    hessian_value_ptr[32] = _tmp1505 * _tmp2178 + _tmp1508 * _tmp2176;
    hessian_value_ptr[33] = _tmp1462 * _tmp2183 + _tmp1479 * _tmp2184;
    hessian_value_ptr[34] = _tmp1490 * _tmp2190 + _tmp1535 * _tmp2191;
    hessian_value_ptr[35] = _tmp1412 * _tmp2197 + _tmp1428 * _tmp2195;
    hessian_value_ptr[36] = _tmp1517 * _tmp2202 + _tmp1541 * _tmp2203;
    hessian_value_ptr[37] = _tmp1484 * _tmp2207 + _tmp1534 * _tmp2208;
    hessian_value_ptr[38] = _tmp1421 * _tmp2214 + _tmp1522 * _tmp2215;
    hessian_value_ptr[39] = _tmp1435 * _tmp2220 + _tmp1509 * _tmp2222;
    hessian_value_ptr[40] = _tmp1377 * _tmp2228 + _tmp1386 * _tmp2226;
    hessian_value_ptr[41] = _tmp1498 * _tmp2234 + _tmp1542 * _tmp2233;
    hessian_value_ptr[42] = _tmp1443 * _tmp2240 + _tmp1491 * _tmp2239;
    hessian_value_ptr[43] = _tmp1457 * _tmp2244 + _tmp1539 * _tmp2246;
    hessian_value_ptr[44] = _tmp1371 * _tmp2252 + _tmp1427 * _tmp2250;
    hessian_value_ptr[45] = _tmp1468 * _tmp2259 + _tmp1544 * _tmp2258;
    hessian_value_ptr[46] = _tmp1473 * _tmp2265 + _tmp1547 * _tmp2263;
    hessian_value_ptr[47] = _tmp1478 * _tmp2271 + _tmp1546 * _tmp2269;
    hessian_value_ptr[48] = _tmp1384 * _tmp2275 + _tmp1510 * _tmp2276;
    hessian_value_ptr[49] = _tmp1362 * _tmp2281 + _tmp1385 * _tmp2283;
    hessian_value_ptr[50] = _tmp1529 * _tmp2287 + _tmp1532 * _tmp2289;
    hessian_value_ptr[51] = std::pow(_tmp1555, Scalar(2)) + std::pow(_tmp1559, Scalar(2)) +
                            std::pow(_tmp1564, Scalar(2)) + std::pow(_tmp1568, Scalar(2)) +
                            std::pow(_tmp1572, Scalar(2)) + std::pow(_tmp1577, Scalar(2)) +
                            std::pow(_tmp1582, Scalar(2)) + std::pow(_tmp1587, Scalar(2)) +
                            std::pow(_tmp1591, Scalar(2)) + std::pow(_tmp1604, Scalar(2)) +
                            std::pow(_tmp1605, Scalar(2)) + std::pow(_tmp1609, Scalar(2)) +
                            std::pow(_tmp1610, Scalar(2)) + std::pow(_tmp1611, Scalar(2)) +
                            std::pow(_tmp1625, Scalar(2)) + std::pow(_tmp1631, Scalar(2)) +
                            std::pow(_tmp1633, Scalar(2)) + std::pow(_tmp1639, Scalar(2)) +
                            std::pow(_tmp1644, Scalar(2)) + std::pow(_tmp1646, Scalar(2)) +
                            std::pow(_tmp1648, Scalar(2)) + std::pow(_tmp1652, Scalar(2)) +
                            std::pow(_tmp1656, Scalar(2)) + std::pow(_tmp1661, Scalar(2)) +
                            std::pow(_tmp1662, Scalar(2)) + std::pow(_tmp1663, Scalar(2)) +
                            std::pow(_tmp1664, Scalar(2)) + std::pow(_tmp1665, Scalar(2)) +
                            std::pow(_tmp1666, Scalar(2)) + std::pow(_tmp1668, Scalar(2)) +
                            std::pow(_tmp1672, Scalar(2)) + std::pow(_tmp1674, Scalar(2)) +
                            std::pow(_tmp1678, Scalar(2)) + std::pow(_tmp1682, Scalar(2)) +
                            std::pow(_tmp1683, Scalar(2)) + std::pow(_tmp1684, Scalar(2)) +
                            std::pow(_tmp1685, Scalar(2)) + std::pow(_tmp1686, Scalar(2)) +
                            std::pow(_tmp1687, Scalar(2)) + std::pow(_tmp1688, Scalar(2)) +
                            std::pow(_tmp1689, Scalar(2)) + std::pow(_tmp1690, Scalar(2)) +
                            std::pow(_tmp1691, Scalar(2)) + std::pow(_tmp1692, Scalar(2)) +
                            std::pow(_tmp1697, Scalar(2)) + std::pow(_tmp1698, Scalar(2)) +
                            std::pow(_tmp1699, Scalar(2)) + std::pow(_tmp1700, Scalar(2)) +
                            std::pow(_tmp1701, Scalar(2)) + std::pow(_tmp1703, Scalar(2)) +
                            std::pow(_tmp1704, Scalar(2)) + std::pow(_tmp1705, Scalar(2));
    hessian_value_ptr[52] =
        _tmp1555 * _tmp1784 + _tmp1559 * _tmp1822 + _tmp1564 * _tmp1886 + _tmp1568 * _tmp1793 +
        _tmp1572 * _tmp1878 + _tmp1577 * _tmp1901 + _tmp1582 * _tmp1715 + _tmp1587 * _tmp1842 +
        _tmp1591 * _tmp1823 + _tmp1604 * _tmp1855 + _tmp1605 * _tmp1757 + _tmp1609 * _tmp1804 +
        _tmp1610 * _tmp1854 + _tmp1611 * _tmp1887 + _tmp1625 * _tmp1856 + _tmp1631 * _tmp1773 +
        _tmp1633 * _tmp1888 + _tmp1639 * _tmp1765 + _tmp1644 * _tmp1764 + _tmp1646 * _tmp1903 +
        _tmp1648 * _tmp1718 + _tmp1652 * _tmp1875 + _tmp1656 * _tmp1853 + _tmp1661 * _tmp1844 +
        _tmp1662 * _tmp1874 + _tmp1663 * _tmp1834 + _tmp1664 * _tmp1852 + _tmp1665 * _tmp1866 +
        _tmp1666 * _tmp1877 + _tmp1668 * _tmp1889 + _tmp1672 * _tmp1824 + _tmp1674 * _tmp1774 +
        _tmp1678 * _tmp1891 + _tmp1682 * _tmp1794 + _tmp1683 * _tmp1892 + _tmp1684 * _tmp1890 +
        _tmp1685 * _tmp1825 + _tmp1686 * _tmp1815 + _tmp1687 * _tmp1893 + _tmp1688 * _tmp1857 +
        _tmp1689 * _tmp1858 + _tmp1690 * _tmp1802 + _tmp1691 * _tmp1785 + _tmp1692 * _tmp1843 +
        _tmp1697 * _tmp1865 + _tmp1698 * _tmp1725 + _tmp1699 * _tmp1741 + _tmp1700 * _tmp1749 +
        _tmp1701 * _tmp1902 + _tmp1703 * _tmp1733 + _tmp1704 * _tmp1904 + _tmp1705 * _tmp1833;
    hessian_value_ptr[53] =
        _tmp1555 * _tmp1986 + _tmp1559 * _tmp1960 + _tmp1564 * _tmp2008 + _tmp1568 * _tmp1924 +
        _tmp1572 * _tmp2007 + _tmp1577 * _tmp1976 + _tmp1582 * _tmp1966 + _tmp1587 * _tmp1953 +
        _tmp1591 * _tmp1946 + _tmp1604 * _tmp1915 + _tmp1605 * _tmp2003 + _tmp1609 * _tmp1914 +
        _tmp1610 * _tmp2025 + _tmp1611 * _tmp2028 + _tmp1625 * _tmp2005 + _tmp1631 * _tmp1981 +
        _tmp1633 * _tmp1980 + _tmp1639 * _tmp1995 + _tmp1644 * _tmp2016 + _tmp1646 * _tmp1971 +
        _tmp1648 * _tmp1940 + _tmp1652 * _tmp2023 + _tmp1656 * _tmp2027 + _tmp1661 * _tmp1923 +
        _tmp1662 * _tmp1933 + _tmp1663 * _tmp1910 + _tmp1664 * _tmp1908 + _tmp1665 * _tmp1982 +
        _tmp1666 * _tmp1991 + _tmp1668 * _tmp1961 + _tmp1672 * _tmp2032 + _tmp1674 * _tmp1947 +
        _tmp1678 * _tmp2001 + _tmp1682 * _tmp2029 + _tmp1683 * _tmp2026 + _tmp1684 * _tmp2031 +
        _tmp1685 * _tmp1909 + _tmp1686 * _tmp2030 + _tmp1687 * _tmp1970 + _tmp1688 * _tmp2006 +
        _tmp1689 * _tmp2004 + _tmp1690 * _tmp2014 + _tmp1691 * _tmp2015 + _tmp1692 * _tmp1919 +
        _tmp1697 * _tmp2009 + _tmp1698 * _tmp2021 + _tmp1699 * _tmp1975 + _tmp1700 * _tmp2002 +
        _tmp1701 * _tmp1928 + _tmp1703 * _tmp2010 + _tmp1704 * _tmp1938 + _tmp1705 * _tmp1948;
    hessian_value_ptr[54] =
        _tmp1555 * _tmp2150 + _tmp1559 * _tmp2094 + _tmp1564 * _tmp2136 + _tmp1568 * _tmp2123 +
        _tmp1572 * _tmp2155 + _tmp1577 * _tmp2125 + _tmp1582 * _tmp2121 + _tmp1587 * _tmp2113 +
        _tmp1591 * _tmp2137 + _tmp1604 * _tmp2066 + _tmp1605 * _tmp2119 + _tmp1609 * _tmp2065 +
        _tmp1610 * _tmp2052 + _tmp1611 * _tmp2111 + _tmp1625 * _tmp2122 + _tmp1631 * _tmp2047 +
        _tmp1633 * _tmp2124 + _tmp1639 * _tmp2099 + _tmp1644 * _tmp2138 + _tmp1646 * _tmp2077 +
        _tmp1648 * _tmp2039 + _tmp1652 * _tmp2156 + _tmp1656 * _tmp2043 + _tmp1661 * _tmp2082 +
        _tmp1662 * _tmp2070 + _tmp1663 * _tmp2101 + _tmp1664 * _tmp2076 + _tmp1665 * _tmp2037 +
        _tmp1666 * _tmp2132 + _tmp1668 * _tmp2083 + _tmp1672 * _tmp2144 + _tmp1674 * _tmp2100 +
        _tmp1678 * _tmp2159 + _tmp1682 * _tmp2056 + _tmp1683 * _tmp2158 + _tmp1684 * _tmp2157 +
        _tmp1685 * _tmp2112 + _tmp1686 * _tmp2087 + _tmp1687 * _tmp2152 + _tmp1688 * _tmp2120 +
        _tmp1689 * _tmp2088 + _tmp1690 * _tmp2095 + _tmp1691 * _tmp2033 + _tmp1692 * _tmp2060 +
        _tmp1697 * _tmp2114 + _tmp1698 * _tmp2154 + _tmp1699 * _tmp2078 + _tmp1700 * _tmp2126 +
        _tmp1701 * _tmp2106 + _tmp1703 * _tmp2139 + _tmp1704 * _tmp2093 + _tmp1705 * _tmp2102;
    hessian_value_ptr[55] = _tmp1656 * _tmp2171 + _tmp1690 * _tmp2170;
    hessian_value_ptr[56] = _tmp1591 * _tmp2176 + _tmp1605 * _tmp2178;
    hessian_value_ptr[57] = _tmp1631 * _tmp2183 + _tmp1633 * _tmp2184;
    hessian_value_ptr[58] = _tmp1577 * _tmp2191 + _tmp1701 * _tmp2190;
    hessian_value_ptr[59] = _tmp1697 * _tmp2197 + _tmp1704 * _tmp2195;
    hessian_value_ptr[60] = _tmp1582 * _tmp2202 + _tmp1665 * _tmp2203;
    hessian_value_ptr[61] = _tmp1639 * _tmp2208 + _tmp1703 * _tmp2207;
    hessian_value_ptr[62] = _tmp1678 * _tmp2215 + _tmp1686 * _tmp2214;
    hessian_value_ptr[63] = _tmp1572 * _tmp2220 + _tmp1662 * _tmp2222;
    hessian_value_ptr[64] = _tmp1555 * _tmp2226 + _tmp1683 * _tmp2228;
    hessian_value_ptr[65] = _tmp1672 * _tmp2233 + _tmp1698 * _tmp2234;
    hessian_value_ptr[66] = _tmp1609 * _tmp2239 + _tmp1700 * _tmp2240;
    hessian_value_ptr[67] = _tmp1644 * _tmp2244 + _tmp1666 * _tmp2246;
    hessian_value_ptr[68] = _tmp1568 * _tmp2252 + _tmp1692 * _tmp2250;
    hessian_value_ptr[69] = _tmp1661 * _tmp2259 + _tmp1705 * _tmp2258;
    hessian_value_ptr[70] = _tmp1559 * _tmp2265 + _tmp1610 * _tmp2263;
    hessian_value_ptr[71] = _tmp1652 * _tmp2269 + _tmp1664 * _tmp2271;
    hessian_value_ptr[72] = _tmp1564 * _tmp2275 + _tmp1687 * _tmp2276;
    hessian_value_ptr[73] = _tmp1587 * _tmp2283 + _tmp1611 * _tmp2281;
    hessian_value_ptr[74] = _tmp1682 * _tmp2289 + _tmp1699 * _tmp2287;
    hessian_value_ptr[75] = std::pow(_tmp1715, Scalar(2)) + std::pow(_tmp1718, Scalar(2)) +
                            std::pow(_tmp1725, Scalar(2)) + std::pow(_tmp1733, Scalar(2)) +
                            std::pow(_tmp1741, Scalar(2)) + std::pow(_tmp1749, Scalar(2)) +
                            std::pow(_tmp1757, Scalar(2)) + std::pow(_tmp1764, Scalar(2)) +
                            std::pow(_tmp1765, Scalar(2)) + std::pow(_tmp1773, Scalar(2)) +
                            std::pow(_tmp1774, Scalar(2)) + std::pow(_tmp1784, Scalar(2)) +
                            std::pow(_tmp1785, Scalar(2)) + std::pow(_tmp1793, Scalar(2)) +
                            std::pow(_tmp1794, Scalar(2)) + std::pow(_tmp1802, Scalar(2)) +
                            std::pow(_tmp1804, Scalar(2)) + std::pow(_tmp1815, Scalar(2)) +
                            std::pow(_tmp1822, Scalar(2)) + std::pow(_tmp1823, Scalar(2)) +
                            std::pow(_tmp1824, Scalar(2)) + std::pow(_tmp1825, Scalar(2)) +
                            std::pow(_tmp1833, Scalar(2)) + std::pow(_tmp1834, Scalar(2)) +
                            std::pow(_tmp1842, Scalar(2)) + std::pow(_tmp1843, Scalar(2)) +
                            std::pow(_tmp1844, Scalar(2)) + std::pow(_tmp1852, Scalar(2)) +
                            std::pow(_tmp1853, Scalar(2)) + std::pow(_tmp1854, Scalar(2)) +
                            std::pow(_tmp1855, Scalar(2)) + std::pow(_tmp1856, Scalar(2)) +
                            std::pow(_tmp1857, Scalar(2)) + std::pow(_tmp1858, Scalar(2)) +
                            std::pow(_tmp1865, Scalar(2)) + std::pow(_tmp1866, Scalar(2)) +
                            std::pow(_tmp1874, Scalar(2)) + std::pow(_tmp1875, Scalar(2)) +
                            std::pow(_tmp1877, Scalar(2)) + std::pow(_tmp1878, Scalar(2)) +
                            std::pow(_tmp1886, Scalar(2)) + std::pow(_tmp1887, Scalar(2)) +
                            std::pow(_tmp1888, Scalar(2)) + std::pow(_tmp1889, Scalar(2)) +
                            std::pow(_tmp1890, Scalar(2)) + std::pow(_tmp1891, Scalar(2)) +
                            std::pow(_tmp1892, Scalar(2)) + std::pow(_tmp1893, Scalar(2)) +
                            std::pow(_tmp1901, Scalar(2)) + std::pow(_tmp1902, Scalar(2)) +
                            std::pow(_tmp1903, Scalar(2)) + std::pow(_tmp1904, Scalar(2));
    hessian_value_ptr[76] =
        _tmp1715 * _tmp1966 + _tmp1718 * _tmp1940 + _tmp1725 * _tmp2021 + _tmp1733 * _tmp2010 +
        _tmp1741 * _tmp1975 + _tmp1749 * _tmp2002 + _tmp1757 * _tmp2003 + _tmp1764 * _tmp2016 +
        _tmp1765 * _tmp1995 + _tmp1773 * _tmp1981 + _tmp1774 * _tmp1947 + _tmp1784 * _tmp1986 +
        _tmp1785 * _tmp2015 + _tmp1793 * _tmp1924 + _tmp1794 * _tmp2029 + _tmp1802 * _tmp2014 +
        _tmp1804 * _tmp1914 + _tmp1815 * _tmp2030 + _tmp1822 * _tmp1960 + _tmp1823 * _tmp1946 +
        _tmp1824 * _tmp2032 + _tmp1825 * _tmp1909 + _tmp1833 * _tmp1948 + _tmp1834 * _tmp1910 +
        _tmp1842 * _tmp1953 + _tmp1843 * _tmp1919 + _tmp1844 * _tmp1923 + _tmp1852 * _tmp1908 +
        _tmp1853 * _tmp2027 + _tmp1854 * _tmp2025 + _tmp1855 * _tmp1915 + _tmp1856 * _tmp2005 +
        _tmp1857 * _tmp2006 + _tmp1858 * _tmp2004 + _tmp1865 * _tmp2009 + _tmp1866 * _tmp1982 +
        _tmp1874 * _tmp1933 + _tmp1875 * _tmp2023 + _tmp1877 * _tmp1991 + _tmp1878 * _tmp2007 +
        _tmp1886 * _tmp2008 + _tmp1887 * _tmp2028 + _tmp1888 * _tmp1980 + _tmp1889 * _tmp1961 +
        _tmp1890 * _tmp2031 + _tmp1891 * _tmp2001 + _tmp1892 * _tmp2026 + _tmp1893 * _tmp1970 +
        _tmp1901 * _tmp1976 + _tmp1902 * _tmp1928 + _tmp1903 * _tmp1971 + _tmp1904 * _tmp1938;
    hessian_value_ptr[77] =
        _tmp1715 * _tmp2121 + _tmp1718 * _tmp2039 + _tmp1725 * _tmp2154 + _tmp1733 * _tmp2139 +
        _tmp1741 * _tmp2078 + _tmp1749 * _tmp2126 + _tmp1757 * _tmp2119 + _tmp1764 * _tmp2138 +
        _tmp1765 * _tmp2099 + _tmp1773 * _tmp2047 + _tmp1774 * _tmp2100 + _tmp1784 * _tmp2150 +
        _tmp1785 * _tmp2033 + _tmp1793 * _tmp2123 + _tmp1794 * _tmp2056 + _tmp1802 * _tmp2095 +
        _tmp1804 * _tmp2065 + _tmp1815 * _tmp2087 + _tmp1822 * _tmp2094 + _tmp1823 * _tmp2137 +
        _tmp1824 * _tmp2144 + _tmp1825 * _tmp2112 + _tmp1833 * _tmp2102 + _tmp1834 * _tmp2101 +
        _tmp1842 * _tmp2113 + _tmp1843 * _tmp2060 + _tmp1844 * _tmp2082 + _tmp1852 * _tmp2076 +
        _tmp1853 * _tmp2043 + _tmp1854 * _tmp2052 + _tmp1855 * _tmp2066 + _tmp1856 * _tmp2122 +
        _tmp1857 * _tmp2120 + _tmp1858 * _tmp2088 + _tmp1865 * _tmp2114 + _tmp1866 * _tmp2037 +
        _tmp1874 * _tmp2070 + _tmp1875 * _tmp2156 + _tmp1877 * _tmp2132 + _tmp1878 * _tmp2155 +
        _tmp1886 * _tmp2136 + _tmp1887 * _tmp2111 + _tmp1888 * _tmp2124 + _tmp1889 * _tmp2083 +
        _tmp1890 * _tmp2157 + _tmp1891 * _tmp2159 + _tmp1892 * _tmp2158 + _tmp1893 * _tmp2152 +
        _tmp1901 * _tmp2125 + _tmp1902 * _tmp2106 + _tmp1903 * _tmp2077 + _tmp1904 * _tmp2093;
    hessian_value_ptr[78] = _tmp1802 * _tmp2170 + _tmp1853 * _tmp2171;
    hessian_value_ptr[79] = _tmp1757 * _tmp2178 + _tmp1823 * _tmp2176;
    hessian_value_ptr[80] = _tmp1773 * _tmp2183 + _tmp1888 * _tmp2184;
    hessian_value_ptr[81] = _tmp1901 * _tmp2191 + _tmp1902 * _tmp2190;
    hessian_value_ptr[82] = _tmp1865 * _tmp2197 + _tmp1904 * _tmp2195;
    hessian_value_ptr[83] = _tmp1715 * _tmp2202 + _tmp1866 * _tmp2203;
    hessian_value_ptr[84] = _tmp1733 * _tmp2207 + _tmp1765 * _tmp2208;
    hessian_value_ptr[85] = _tmp1815 * _tmp2214 + _tmp1891 * _tmp2215;
    hessian_value_ptr[86] = _tmp1874 * _tmp2222 + _tmp1878 * _tmp2220;
    hessian_value_ptr[87] = _tmp1784 * _tmp2226 + _tmp1892 * _tmp2228;
    hessian_value_ptr[88] = _tmp1725 * _tmp2234 + _tmp1824 * _tmp2233;
    hessian_value_ptr[89] = _tmp1749 * _tmp2240 + _tmp1804 * _tmp2239;
    hessian_value_ptr[90] = _tmp1764 * _tmp2244 + _tmp1877 * _tmp2246;
    hessian_value_ptr[91] = _tmp1793 * _tmp2252 + _tmp1843 * _tmp2250;
    hessian_value_ptr[92] = _tmp1833 * _tmp2258 + _tmp1844 * _tmp2259;
    hessian_value_ptr[93] = _tmp1822 * _tmp2265 + _tmp1854 * _tmp2263;
    hessian_value_ptr[94] = _tmp1852 * _tmp2271 + _tmp1875 * _tmp2269;
    hessian_value_ptr[95] = _tmp1886 * _tmp2275 + _tmp1893 * _tmp2276;
    hessian_value_ptr[96] = _tmp1842 * _tmp2283 + _tmp1887 * _tmp2281;
    hessian_value_ptr[97] = _tmp1741 * _tmp2287 + _tmp1794 * _tmp2289;
    hessian_value_ptr[98] = std::pow(_tmp1908, Scalar(2)) + std::pow(_tmp1909, Scalar(2)) +
                            std::pow(_tmp1910, Scalar(2)) + std::pow(_tmp1914, Scalar(2)) +
                            std::pow(_tmp1915, Scalar(2)) + std::pow(_tmp1919, Scalar(2)) +
                            std::pow(_tmp1923, Scalar(2)) + std::pow(_tmp1924, Scalar(2)) +
                            std::pow(_tmp1928, Scalar(2)) + std::pow(_tmp1933, Scalar(2)) +
                            std::pow(_tmp1938, Scalar(2)) + std::pow(_tmp1940, Scalar(2)) +
                            std::pow(_tmp1946, Scalar(2)) + std::pow(_tmp1947, Scalar(2)) +
                            std::pow(_tmp1948, Scalar(2)) + std::pow(_tmp1953, Scalar(2)) +
                            std::pow(_tmp1960, Scalar(2)) + std::pow(_tmp1961, Scalar(2)) +
                            std::pow(_tmp1966, Scalar(2)) + std::pow(_tmp1970, Scalar(2)) +
                            std::pow(_tmp1971, Scalar(2)) + std::pow(_tmp1975, Scalar(2)) +
                            std::pow(_tmp1976, Scalar(2)) + std::pow(_tmp1980, Scalar(2)) +
                            std::pow(_tmp1981, Scalar(2)) + std::pow(_tmp1982, Scalar(2)) +
                            std::pow(_tmp1986, Scalar(2)) + std::pow(_tmp1991, Scalar(2)) +
                            std::pow(_tmp1995, Scalar(2)) + std::pow(_tmp2001, Scalar(2)) +
                            std::pow(_tmp2002, Scalar(2)) + std::pow(_tmp2003, Scalar(2)) +
                            std::pow(_tmp2004, Scalar(2)) + std::pow(_tmp2005, Scalar(2)) +
                            std::pow(_tmp2006, Scalar(2)) + std::pow(_tmp2007, Scalar(2)) +
                            std::pow(_tmp2008, Scalar(2)) + std::pow(_tmp2009, Scalar(2)) +
                            std::pow(_tmp2010, Scalar(2)) + std::pow(_tmp2014, Scalar(2)) +
                            std::pow(_tmp2015, Scalar(2)) + std::pow(_tmp2016, Scalar(2)) +
                            std::pow(_tmp2021, Scalar(2)) + std::pow(_tmp2023, Scalar(2)) +
                            std::pow(_tmp2025, Scalar(2)) + std::pow(_tmp2026, Scalar(2)) +
                            std::pow(_tmp2027, Scalar(2)) + std::pow(_tmp2028, Scalar(2)) +
                            std::pow(_tmp2029, Scalar(2)) + std::pow(_tmp2030, Scalar(2)) +
                            std::pow(_tmp2031, Scalar(2)) + std::pow(_tmp2032, Scalar(2));
    hessian_value_ptr[99] =
        _tmp1908 * _tmp2076 + _tmp1909 * _tmp2112 + _tmp1910 * _tmp2101 + _tmp1914 * _tmp2065 +
        _tmp1915 * _tmp2066 + _tmp1919 * _tmp2060 + _tmp1923 * _tmp2082 + _tmp1924 * _tmp2123 +
        _tmp1928 * _tmp2106 + _tmp1933 * _tmp2070 + _tmp1938 * _tmp2093 + _tmp1940 * _tmp2039 +
        _tmp1946 * _tmp2137 + _tmp1947 * _tmp2100 + _tmp1948 * _tmp2102 + _tmp1953 * _tmp2113 +
        _tmp1960 * _tmp2094 + _tmp1961 * _tmp2083 + _tmp1966 * _tmp2121 + _tmp1970 * _tmp2152 +
        _tmp1971 * _tmp2077 + _tmp1975 * _tmp2078 + _tmp1976 * _tmp2125 + _tmp1980 * _tmp2124 +
        _tmp1981 * _tmp2047 + _tmp1982 * _tmp2037 + _tmp1986 * _tmp2150 + _tmp1991 * _tmp2132 +
        _tmp1995 * _tmp2099 + _tmp2001 * _tmp2159 + _tmp2002 * _tmp2126 + _tmp2003 * _tmp2119 +
        _tmp2004 * _tmp2088 + _tmp2005 * _tmp2122 + _tmp2006 * _tmp2120 + _tmp2007 * _tmp2155 +
        _tmp2008 * _tmp2136 + _tmp2009 * _tmp2114 + _tmp2010 * _tmp2139 + _tmp2014 * _tmp2095 +
        _tmp2015 * _tmp2033 + _tmp2016 * _tmp2138 + _tmp2021 * _tmp2154 + _tmp2023 * _tmp2156 +
        _tmp2025 * _tmp2052 + _tmp2026 * _tmp2158 + _tmp2027 * _tmp2043 + _tmp2028 * _tmp2111 +
        _tmp2029 * _tmp2056 + _tmp2030 * _tmp2087 + _tmp2031 * _tmp2157 + _tmp2032 * _tmp2144;
    hessian_value_ptr[100] = _tmp2014 * _tmp2170 + _tmp2027 * _tmp2171;
    hessian_value_ptr[101] = _tmp1946 * _tmp2176 + _tmp2003 * _tmp2178;
    hessian_value_ptr[102] = _tmp1980 * _tmp2184 + _tmp1981 * _tmp2183;
    hessian_value_ptr[103] = _tmp1928 * _tmp2190 + _tmp1976 * _tmp2191;
    hessian_value_ptr[104] = _tmp1938 * _tmp2195 + _tmp2009 * _tmp2197;
    hessian_value_ptr[105] = _tmp1966 * _tmp2202 + _tmp1982 * _tmp2203;
    hessian_value_ptr[106] = _tmp1995 * _tmp2208 + _tmp2010 * _tmp2207;
    hessian_value_ptr[107] = _tmp2001 * _tmp2215 + _tmp2030 * _tmp2214;
    hessian_value_ptr[108] = _tmp1933 * _tmp2222 + _tmp2007 * _tmp2220;
    hessian_value_ptr[109] = _tmp1986 * _tmp2226 + _tmp2026 * _tmp2228;
    hessian_value_ptr[110] = _tmp2021 * _tmp2234 + _tmp2032 * _tmp2233;
    hessian_value_ptr[111] = _tmp1914 * _tmp2239 + _tmp2002 * _tmp2240;
    hessian_value_ptr[112] = _tmp1991 * _tmp2246 + _tmp2016 * _tmp2244;
    hessian_value_ptr[113] = _tmp1919 * _tmp2250 + _tmp1924 * _tmp2252;
    hessian_value_ptr[114] = _tmp1923 * _tmp2259 + _tmp1948 * _tmp2258;
    hessian_value_ptr[115] = _tmp1960 * _tmp2265 + _tmp2025 * _tmp2263;
    hessian_value_ptr[116] = _tmp1908 * _tmp2271 + _tmp2023 * _tmp2269;
    hessian_value_ptr[117] = _tmp1970 * _tmp2276 + _tmp2008 * _tmp2275;
    hessian_value_ptr[118] = _tmp1953 * _tmp2283 + _tmp2028 * _tmp2281;
    hessian_value_ptr[119] = _tmp1975 * _tmp2287 + _tmp2029 * _tmp2289;
    hessian_value_ptr[120] = std::pow(_tmp2033, Scalar(2)) + std::pow(_tmp2037, Scalar(2)) +
                             std::pow(_tmp2039, Scalar(2)) + std::pow(_tmp2043, Scalar(2)) +
                             std::pow(_tmp2047, Scalar(2)) + std::pow(_tmp2052, Scalar(2)) +
                             std::pow(_tmp2056, Scalar(2)) + std::pow(_tmp2060, Scalar(2)) +
                             std::pow(_tmp2065, Scalar(2)) + std::pow(_tmp2066, Scalar(2)) +
                             std::pow(_tmp2070, Scalar(2)) + std::pow(_tmp2076, Scalar(2)) +
                             std::pow(_tmp2077, Scalar(2)) + std::pow(_tmp2078, Scalar(2)) +
                             std::pow(_tmp2082, Scalar(2)) + std::pow(_tmp2083, Scalar(2)) +
                             std::pow(_tmp2087, Scalar(2)) + std::pow(_tmp2088, Scalar(2)) +
                             std::pow(_tmp2093, Scalar(2)) + std::pow(_tmp2094, Scalar(2)) +
                             std::pow(_tmp2095, Scalar(2)) + std::pow(_tmp2099, Scalar(2)) +
                             std::pow(_tmp2100, Scalar(2)) + std::pow(_tmp2101, Scalar(2)) +
                             std::pow(_tmp2102, Scalar(2)) + std::pow(_tmp2106, Scalar(2)) +
                             std::pow(_tmp2111, Scalar(2)) + std::pow(_tmp2112, Scalar(2)) +
                             std::pow(_tmp2113, Scalar(2)) + std::pow(_tmp2114, Scalar(2)) +
                             std::pow(_tmp2119, Scalar(2)) + std::pow(_tmp2120, Scalar(2)) +
                             std::pow(_tmp2121, Scalar(2)) + std::pow(_tmp2122, Scalar(2)) +
                             std::pow(_tmp2123, Scalar(2)) + std::pow(_tmp2124, Scalar(2)) +
                             std::pow(_tmp2125, Scalar(2)) + std::pow(_tmp2126, Scalar(2)) +
                             std::pow(_tmp2132, Scalar(2)) + std::pow(_tmp2136, Scalar(2)) +
                             std::pow(_tmp2137, Scalar(2)) + std::pow(_tmp2138, Scalar(2)) +
                             std::pow(_tmp2139, Scalar(2)) + std::pow(_tmp2144, Scalar(2)) +
                             std::pow(_tmp2150, Scalar(2)) + std::pow(_tmp2152, Scalar(2)) +
                             std::pow(_tmp2154, Scalar(2)) + std::pow(_tmp2155, Scalar(2)) +
                             std::pow(_tmp2156, Scalar(2)) + std::pow(_tmp2157, Scalar(2)) +
                             std::pow(_tmp2158, Scalar(2)) + std::pow(_tmp2159, Scalar(2));
    hessian_value_ptr[121] = _tmp2043 * _tmp2171 + _tmp2095 * _tmp2170;
    hessian_value_ptr[122] = _tmp2119 * _tmp2178 + _tmp2137 * _tmp2176;
    hessian_value_ptr[123] = _tmp2047 * _tmp2183 + _tmp2124 * _tmp2184;
    hessian_value_ptr[124] = _tmp2106 * _tmp2190 + _tmp2125 * _tmp2191;
    hessian_value_ptr[125] = _tmp2093 * _tmp2195 + _tmp2114 * _tmp2197;
    hessian_value_ptr[126] = _tmp2037 * _tmp2203 + _tmp2121 * _tmp2202;
    hessian_value_ptr[127] = _tmp2099 * _tmp2208 + _tmp2139 * _tmp2207;
    hessian_value_ptr[128] = _tmp2087 * _tmp2214 + _tmp2159 * _tmp2215;
    hessian_value_ptr[129] = _tmp2070 * _tmp2222 + _tmp2155 * _tmp2220;
    hessian_value_ptr[130] = _tmp2150 * _tmp2226 + _tmp2158 * _tmp2228;
    hessian_value_ptr[131] = _tmp2144 * _tmp2233 + _tmp2154 * _tmp2234;
    hessian_value_ptr[132] = _tmp2065 * _tmp2239 + _tmp2126 * _tmp2240;
    hessian_value_ptr[133] = _tmp2132 * _tmp2246 + _tmp2138 * _tmp2244;
    hessian_value_ptr[134] = _tmp2060 * _tmp2250 + _tmp2123 * _tmp2252;
    hessian_value_ptr[135] = _tmp2082 * _tmp2259 + _tmp2102 * _tmp2258;
    hessian_value_ptr[136] = _tmp2052 * _tmp2263 + _tmp2094 * _tmp2265;
    hessian_value_ptr[137] = _tmp2076 * _tmp2271 + _tmp2156 * _tmp2269;
    hessian_value_ptr[138] = _tmp2136 * _tmp2275 + _tmp2152 * _tmp2276;
    hessian_value_ptr[139] = _tmp2111 * _tmp2281 + _tmp2113 * _tmp2283;
    hessian_value_ptr[140] = _tmp2056 * _tmp2289 + _tmp2078 * _tmp2287;
    hessian_value_ptr[141] =
        _tmp2160 + std::pow(_tmp2170, Scalar(2)) + std::pow(_tmp2171, Scalar(2));
    hessian_value_ptr[142] =
        std::pow(_tmp2176, Scalar(2)) + _tmp2177 + std::pow(_tmp2178, Scalar(2));
    hessian_value_ptr[143] =
        _tmp2179 + std::pow(_tmp2183, Scalar(2)) + std::pow(_tmp2184, Scalar(2));
    hessian_value_ptr[144] =
        _tmp2185 + std::pow(_tmp2190, Scalar(2)) + std::pow(_tmp2191, Scalar(2));
    hessian_value_ptr[145] =
        std::pow(_tmp2195, Scalar(2)) + _tmp2196 + std::pow(_tmp2197, Scalar(2));
    hessian_value_ptr[146] =
        _tmp2198 + std::pow(_tmp2202, Scalar(2)) + std::pow(_tmp2203, Scalar(2));
    hessian_value_ptr[147] =
        std::pow(_tmp2207, Scalar(2)) + std::pow(_tmp2208, Scalar(2)) + _tmp2209;
    hessian_value_ptr[148] =
        _tmp2210 + std::pow(_tmp2214, Scalar(2)) + std::pow(_tmp2215, Scalar(2));
    hessian_value_ptr[149] =
        std::pow(_tmp2220, Scalar(2)) + _tmp2221 + std::pow(_tmp2222, Scalar(2));
    hessian_value_ptr[150] =
        std::pow(_tmp2226, Scalar(2)) + _tmp2227 + std::pow(_tmp2228, Scalar(2));
    hessian_value_ptr[151] =
        _tmp2229 + std::pow(_tmp2233, Scalar(2)) + std::pow(_tmp2234, Scalar(2));
    hessian_value_ptr[152] =
        _tmp2235 + std::pow(_tmp2239, Scalar(2)) + std::pow(_tmp2240, Scalar(2));
    hessian_value_ptr[153] =
        std::pow(_tmp2244, Scalar(2)) + _tmp2245 + std::pow(_tmp2246, Scalar(2));
    hessian_value_ptr[154] =
        std::pow(_tmp2250, Scalar(2)) + _tmp2251 + std::pow(_tmp2252, Scalar(2));
    hessian_value_ptr[155] =
        _tmp2253 + std::pow(_tmp2258, Scalar(2)) + std::pow(_tmp2259, Scalar(2));
    hessian_value_ptr[156] =
        std::pow(_tmp2263, Scalar(2)) + _tmp2264 + std::pow(_tmp2265, Scalar(2));
    hessian_value_ptr[157] =
        std::pow(_tmp2269, Scalar(2)) + _tmp2270 + std::pow(_tmp2271, Scalar(2));
    hessian_value_ptr[158] =
        std::pow(_tmp2275, Scalar(2)) + std::pow(_tmp2276, Scalar(2)) + _tmp2277;
    hessian_value_ptr[159] =
        std::pow(_tmp2281, Scalar(2)) + _tmp2282 + std::pow(_tmp2283, Scalar(2));
    hessian_value_ptr[160] =
        std::pow(_tmp2287, Scalar(2)) + _tmp2288 + std::pow(_tmp2289, Scalar(2));
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace bundle_adjustment_fixed_size
