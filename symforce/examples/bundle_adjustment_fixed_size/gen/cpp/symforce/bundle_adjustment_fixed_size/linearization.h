// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>
#include <Eigen/Sparse>

#include <sym/pose3.h>

namespace bundle_adjustment_fixed_size {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Computes the linearization of the residual around the given state,
 * and returns the relevant information about the resulting linear system.
 *
 * Input args: The state to linearize around
 *
 * Output args:
 *     residual (Eigen::Matrix*): The residual vector
 *     jacobian: (72x26) jacobian of residual wrt args views_1_pose (6), landmarks_0_ (1),
 *               landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1),
 *               landmarks_5_ (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1),
 *               landmarks_9_ (1), landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1),
 *               landmarks_13_ (1), landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1),
 *               landmarks_17_ (1), landmarks_18_ (1), landmarks_19_ (1)
 *     hessian: (26x26) Gauss-Newton hessian for args views_1_pose (6), landmarks_0_ (1),
 *              landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_
 *              (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1),
 *              landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1),
 *              landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1),
 *              landmarks_18_ (1), landmarks_19_ (1)
 *     rhs: (26x1) Gauss-Newton rhs for args views_1_pose (6), landmarks_0_ (1), landmarks_1_ (1),
 *          landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_ (1), landmarks_6_
 *          (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1), landmarks_10_ (1),
 *          landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1), landmarks_14_ (1),
 *          landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1), landmarks_18_ (1),
 *          landmarks_19_ (1)
 */
template <typename Scalar>
void Linearization(
    const Eigen::Matrix<Scalar, 4, 1>& views_0_calibration, const sym::Pose3<Scalar>& views_0_pose,
    const Eigen::Matrix<Scalar, 4, 1>& views_1_calibration, const sym::Pose3<Scalar>& views_1_pose,
    const sym::Pose3<Scalar>& priors_0_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_0_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_1_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_1_sqrt_info,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_target_coords, const Scalar matches_0_0_weight,
    const Scalar matches_0_0_inverse_range_prior,
    const Scalar matches_0_0_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_target_coords, const Scalar matches_0_1_weight,
    const Scalar matches_0_1_inverse_range_prior,
    const Scalar matches_0_1_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_target_coords, const Scalar matches_0_2_weight,
    const Scalar matches_0_2_inverse_range_prior,
    const Scalar matches_0_2_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_target_coords, const Scalar matches_0_3_weight,
    const Scalar matches_0_3_inverse_range_prior,
    const Scalar matches_0_3_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_target_coords, const Scalar matches_0_4_weight,
    const Scalar matches_0_4_inverse_range_prior,
    const Scalar matches_0_4_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_target_coords, const Scalar matches_0_5_weight,
    const Scalar matches_0_5_inverse_range_prior,
    const Scalar matches_0_5_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_target_coords, const Scalar matches_0_6_weight,
    const Scalar matches_0_6_inverse_range_prior,
    const Scalar matches_0_6_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_target_coords, const Scalar matches_0_7_weight,
    const Scalar matches_0_7_inverse_range_prior,
    const Scalar matches_0_7_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_target_coords, const Scalar matches_0_8_weight,
    const Scalar matches_0_8_inverse_range_prior,
    const Scalar matches_0_8_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_target_coords, const Scalar matches_0_9_weight,
    const Scalar matches_0_9_inverse_range_prior,
    const Scalar matches_0_9_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_target_coords, const Scalar matches_0_10_weight,
    const Scalar matches_0_10_inverse_range_prior,
    const Scalar matches_0_10_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_target_coords, const Scalar matches_0_11_weight,
    const Scalar matches_0_11_inverse_range_prior,
    const Scalar matches_0_11_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_target_coords, const Scalar matches_0_12_weight,
    const Scalar matches_0_12_inverse_range_prior,
    const Scalar matches_0_12_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_target_coords, const Scalar matches_0_13_weight,
    const Scalar matches_0_13_inverse_range_prior,
    const Scalar matches_0_13_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_target_coords, const Scalar matches_0_14_weight,
    const Scalar matches_0_14_inverse_range_prior,
    const Scalar matches_0_14_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_target_coords, const Scalar matches_0_15_weight,
    const Scalar matches_0_15_inverse_range_prior,
    const Scalar matches_0_15_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_target_coords, const Scalar matches_0_16_weight,
    const Scalar matches_0_16_inverse_range_prior,
    const Scalar matches_0_16_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_target_coords, const Scalar matches_0_17_weight,
    const Scalar matches_0_17_inverse_range_prior,
    const Scalar matches_0_17_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_target_coords, const Scalar matches_0_18_weight,
    const Scalar matches_0_18_inverse_range_prior,
    const Scalar matches_0_18_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_target_coords, const Scalar matches_0_19_weight,
    const Scalar matches_0_19_inverse_range_prior,
    const Scalar matches_0_19_inverse_range_prior_sigma, const Scalar landmarks_0_,
    const Scalar landmarks_1_, const Scalar landmarks_2_, const Scalar landmarks_3_,
    const Scalar landmarks_4_, const Scalar landmarks_5_, const Scalar landmarks_6_,
    const Scalar landmarks_7_, const Scalar landmarks_8_, const Scalar landmarks_9_,
    const Scalar landmarks_10_, const Scalar landmarks_11_, const Scalar landmarks_12_,
    const Scalar landmarks_13_, const Scalar landmarks_14_, const Scalar landmarks_15_,
    const Scalar landmarks_16_, const Scalar landmarks_17_, const Scalar landmarks_18_,
    const Scalar landmarks_19_, const Scalar costs_reprojection_error_gnc_scale,
    const Scalar costs_reprojection_error_gnc_mu, const Scalar epsilon,
    Eigen::Matrix<Scalar, 72, 1>* const residual = nullptr,
    Eigen::SparseMatrix<Scalar>* const jacobian = nullptr,
    Eigen::SparseMatrix<Scalar>* const hessian = nullptr,
    Eigen::Matrix<Scalar, 26, 1>* const rhs = nullptr) {
  // Total ops: 11013

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _views_0_pose = views_0_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_1_pose = views_1_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_0_target_T_src = priors_0_0_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_1_target_T_src = priors_0_1_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_0_target_T_src = priors_1_0_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_1_target_T_src = priors_1_1_target_T_src.Data();

  // Intermediate terms (2821)
  const Scalar _tmp0 = _views_0_pose[0] * _views_1_pose[3] + _views_0_pose[1] * _views_1_pose[2] -
                       _views_0_pose[2] * _views_1_pose[1] - _views_0_pose[3] * _views_1_pose[0];
  const Scalar _tmp1 = -_views_0_pose[0] * _views_1_pose[2] + _views_0_pose[1] * _views_1_pose[3] +
                       _views_0_pose[2] * _views_1_pose[0] - _views_0_pose[3] * _views_1_pose[1];
  const Scalar _tmp2 = _views_0_pose[0] * _views_1_pose[0] + _views_0_pose[1] * _views_1_pose[1] +
                       _views_0_pose[2] * _views_1_pose[2] + _views_0_pose[3] * _views_1_pose[3];
  const Scalar _tmp3 = _views_0_pose[0] * _views_1_pose[1] - _views_0_pose[1] * _views_1_pose[0] +
                       _views_0_pose[2] * _views_1_pose[3] - _views_0_pose[3] * _views_1_pose[2];
  const Scalar _tmp4 = -_priors_0_1_target_T_src[0] * _tmp1 + _priors_0_1_target_T_src[1] * _tmp0 +
                       _priors_0_1_target_T_src[2] * _tmp2 + _priors_0_1_target_T_src[3] * _tmp3;
  const Scalar _tmp5 = _priors_0_1_target_T_src[0] * _tmp0 + _priors_0_1_target_T_src[1] * _tmp1 +
                       _priors_0_1_target_T_src[2] * _tmp3;
  const Scalar _tmp6 = -_priors_0_1_target_T_src[3] * _tmp2;
  const Scalar _tmp7 = _tmp5 + _tmp6;
  const Scalar _tmp8 = epsilon - 1;
  const Scalar _tmp9 = -_tmp8;
  const Scalar _tmp10 = std::min<Scalar>(_tmp9, std::fabs(_tmp7));
  const Scalar _tmp11 =
      4 * (std::min<Scalar>(0, -(((_tmp7) > 0) - ((_tmp7) < 0))) + Scalar(1) / Scalar(2)) *
      std::acos(_tmp10) / std::sqrt(Scalar(1 - std::pow(_tmp10, Scalar(2))));
  const Scalar _tmp12 = _tmp11 * _tmp4;
  const Scalar _tmp13 = -_priors_0_1_target_T_src[0] * _tmp3 - _priors_0_1_target_T_src[1] * _tmp2 +
                        _priors_0_1_target_T_src[2] * _tmp0 - _priors_0_1_target_T_src[3] * _tmp1;
  const Scalar _tmp14 = _tmp11 * _tmp13;
  const Scalar _tmp15 = _priors_0_1_target_T_src[0] * _tmp2 - _priors_0_1_target_T_src[1] * _tmp3 +
                        _priors_0_1_target_T_src[2] * _tmp1 + _priors_0_1_target_T_src[3] * _tmp0;
  const Scalar _tmp16 = _tmp11 * _tmp15;
  const Scalar _tmp17 = std::pow(_views_0_pose[2], Scalar(2));
  const Scalar _tmp18 = std::pow(_views_0_pose[1], Scalar(2)) + Scalar(-1) / Scalar(2);
  const Scalar _tmp19 = _tmp17 + _tmp18;
  const Scalar _tmp20 = _views_0_pose[2] * _views_0_pose[3];
  const Scalar _tmp21 = _views_0_pose[0] * _views_0_pose[1];
  const Scalar _tmp22 = _tmp20 + _tmp21;
  const Scalar _tmp23 = _views_0_pose[0] * _views_0_pose[2];
  const Scalar _tmp24 = _views_0_pose[1] * _views_0_pose[3];
  const Scalar _tmp25 = _tmp23 - _tmp24;
  const Scalar _tmp26 = 2 * _views_1_pose[4];
  const Scalar _tmp27 = 2 * _views_1_pose[5];
  const Scalar _tmp28 = 2 * _views_1_pose[6];
  const Scalar _tmp29 = -_priors_0_1_target_T_src[4] - _tmp19 * _tmp26 +
                        2 * _tmp19 * _views_0_pose[4] + _tmp22 * _tmp27 -
                        2 * _tmp22 * _views_0_pose[5] + _tmp25 * _tmp28 -
                        2 * _tmp25 * _views_0_pose[6];
  const Scalar _tmp30 = std::pow(_views_0_pose[0], Scalar(2));
  const Scalar _tmp31 = _tmp18 + _tmp30;
  const Scalar _tmp32 = _tmp23 + _tmp24;
  const Scalar _tmp33 = _views_0_pose[1] * _views_0_pose[2];
  const Scalar _tmp34 = _views_0_pose[0] * _views_0_pose[3];
  const Scalar _tmp35 = _tmp33 - _tmp34;
  const Scalar _tmp36 = -_priors_0_1_target_T_src[6] + _tmp26 * _tmp32 + _tmp27 * _tmp35 -
                        _tmp28 * _tmp31 + 2 * _tmp31 * _views_0_pose[6] -
                        2 * _tmp32 * _views_0_pose[4] - 2 * _tmp35 * _views_0_pose[5];
  const Scalar _tmp37 = _tmp17 + _tmp30 + Scalar(-1) / Scalar(2);
  const Scalar _tmp38 = _tmp20 - _tmp21;
  const Scalar _tmp39 = _tmp33 + _tmp34;
  const Scalar _tmp40 = -_priors_0_1_target_T_src[5] - _tmp26 * _tmp38 - _tmp27 * _tmp37 +
                        _tmp28 * _tmp39 + 2 * _tmp37 * _views_0_pose[5] +
                        2 * _tmp38 * _views_0_pose[4] - 2 * _tmp39 * _views_0_pose[6];
  const Scalar _tmp41 = -_tmp12 * priors_0_1_sqrt_info(0, 2) + _tmp14 * priors_0_1_sqrt_info(0, 1) -
                        _tmp16 * priors_0_1_sqrt_info(0, 0) + _tmp29 * priors_0_1_sqrt_info(0, 3) +
                        _tmp36 * priors_0_1_sqrt_info(0, 5) + _tmp40 * priors_0_1_sqrt_info(0, 4);
  const Scalar _tmp42 = _tmp15 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp43 = -_tmp11 * _tmp42 - _tmp12 * priors_0_1_sqrt_info(1, 2) +
                        _tmp14 * priors_0_1_sqrt_info(1, 1) + _tmp29 * priors_0_1_sqrt_info(1, 3) +
                        _tmp36 * priors_0_1_sqrt_info(1, 5) + _tmp40 * priors_0_1_sqrt_info(1, 4);
  const Scalar _tmp44 = -_tmp12 * priors_0_1_sqrt_info(2, 2) + _tmp14 * priors_0_1_sqrt_info(2, 1) -
                        _tmp16 * priors_0_1_sqrt_info(2, 0) + _tmp29 * priors_0_1_sqrt_info(2, 3) +
                        _tmp36 * priors_0_1_sqrt_info(2, 5) + _tmp40 * priors_0_1_sqrt_info(2, 4);
  const Scalar _tmp45 = -_tmp12 * priors_0_1_sqrt_info(3, 2) + _tmp14 * priors_0_1_sqrt_info(3, 1) -
                        _tmp16 * priors_0_1_sqrt_info(3, 0) + _tmp29 * priors_0_1_sqrt_info(3, 3) +
                        _tmp36 * priors_0_1_sqrt_info(3, 5) + _tmp40 * priors_0_1_sqrt_info(3, 4);
  const Scalar _tmp46 = -_tmp12 * priors_0_1_sqrt_info(4, 2) + _tmp14 * priors_0_1_sqrt_info(4, 1) -
                        _tmp16 * priors_0_1_sqrt_info(4, 0) + _tmp29 * priors_0_1_sqrt_info(4, 3) +
                        _tmp36 * priors_0_1_sqrt_info(4, 5) + _tmp40 * priors_0_1_sqrt_info(4, 4);
  const Scalar _tmp47 = -_tmp12 * priors_0_1_sqrt_info(5, 2) + _tmp14 * priors_0_1_sqrt_info(5, 1) -
                        _tmp16 * priors_0_1_sqrt_info(5, 0) + _tmp29 * priors_0_1_sqrt_info(5, 3) +
                        _tmp36 * priors_0_1_sqrt_info(5, 5) + _tmp40 * priors_0_1_sqrt_info(5, 4);
  const Scalar _tmp48 = std::pow(_views_1_pose[2], Scalar(2));
  const Scalar _tmp49 = std::pow(_views_1_pose[0], Scalar(2));
  const Scalar _tmp50 = _tmp48 + _tmp49;
  const Scalar _tmp51 = _tmp50 + Scalar(-1) / Scalar(2);
  const Scalar _tmp52 = _views_1_pose[0] * _views_1_pose[3];
  const Scalar _tmp53 = _views_1_pose[1] * _views_1_pose[2];
  const Scalar _tmp54 = _tmp52 + _tmp53;
  const Scalar _tmp55 = _tmp54 * _views_1_pose[6];
  const Scalar _tmp56 = _views_1_pose[0] * _views_1_pose[1];
  const Scalar _tmp57 = _views_1_pose[2] * _views_1_pose[3];
  const Scalar _tmp58 = _tmp56 - _tmp57;
  const Scalar _tmp59 = _tmp58 * _views_1_pose[4];
  const Scalar _tmp60 = 2 * _views_0_pose[5];
  const Scalar _tmp61 = 2 * _views_0_pose[6];
  const Scalar _tmp62 = _tmp54 * _tmp61;
  const Scalar _tmp63 = 2 * _views_0_pose[4];
  const Scalar _tmp64 = _tmp58 * _tmp63;
  const Scalar _tmp65 = _tmp62 + _tmp64;
  const Scalar _tmp66 = -_priors_1_0_target_T_src[5] - _tmp51 * _tmp60 +
                        2 * _tmp51 * _views_1_pose[5] - 2 * _tmp55 - 2 * _tmp59 + _tmp65;
  const Scalar _tmp67 = _priors_1_0_target_T_src[3] * _tmp2;
  const Scalar _tmp68 = _priors_1_0_target_T_src[1] * _tmp1;
  const Scalar _tmp69 = _priors_1_0_target_T_src[2] * _tmp3;
  const Scalar _tmp70 = _priors_1_0_target_T_src[0] * _tmp0;
  const Scalar _tmp71 = _tmp69 + _tmp70;
  const Scalar _tmp72 = _tmp67 + _tmp68 + _tmp71;
  const Scalar _tmp73 = (((_tmp72) > 0) - ((_tmp72) < 0));
  const Scalar _tmp74 = std::min<Scalar>(0, _tmp73) + Scalar(1) / Scalar(2);
  const Scalar _tmp75 = _tmp74 * priors_1_0_sqrt_info(0, 1);
  const Scalar _tmp76 = _priors_1_0_target_T_src[1] * _tmp2;
  const Scalar _tmp77 = -_tmp76;
  const Scalar _tmp78 = _priors_1_0_target_T_src[3] * _tmp1;
  const Scalar _tmp79 = _priors_1_0_target_T_src[0] * _tmp3;
  const Scalar _tmp80 = _priors_1_0_target_T_src[2] * _tmp0;
  const Scalar _tmp81 = _tmp79 - _tmp80;
  const Scalar _tmp82 = _tmp77 + _tmp78 + _tmp81;
  const Scalar _tmp83 = std::fabs(_tmp72);
  const Scalar _tmp84 = std::min<Scalar>(_tmp83, _tmp9);
  const Scalar _tmp85 = std::pow(_tmp84, Scalar(2)) - 1;
  const Scalar _tmp86 = -_tmp85;
  const Scalar _tmp87 = std::acos(_tmp84);
  const Scalar _tmp88 = _tmp87 / std::sqrt(_tmp86);
  const Scalar _tmp89 = 4 * _tmp88;
  const Scalar _tmp90 = _tmp82 * _tmp89;
  const Scalar _tmp91 = _priors_1_0_target_T_src[0] * _tmp2;
  const Scalar _tmp92 = _priors_1_0_target_T_src[2] * _tmp1;
  const Scalar _tmp93 = -_tmp92;
  const Scalar _tmp94 = _priors_1_0_target_T_src[1] * _tmp3;
  const Scalar _tmp95 = _priors_1_0_target_T_src[3] * _tmp0;
  const Scalar _tmp96 = _tmp94 - _tmp95;
  const Scalar _tmp97 = _tmp91 + _tmp93 + _tmp96;
  const Scalar _tmp98 = _tmp89 * _tmp97;
  const Scalar _tmp99 = _tmp74 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp100 = _priors_1_0_target_T_src[0] * _tmp1;
  const Scalar _tmp101 = -_tmp100;
  const Scalar _tmp102 = _priors_1_0_target_T_src[1] * _tmp0;
  const Scalar _tmp103 = _priors_1_0_target_T_src[3] * _tmp3;
  const Scalar _tmp104 = _priors_1_0_target_T_src[2] * _tmp2;
  const Scalar _tmp105 = _tmp103 - _tmp104;
  const Scalar _tmp106 = _tmp101 + _tmp102 + _tmp105;
  const Scalar _tmp107 = _tmp106 * _tmp89;
  const Scalar _tmp108 = _tmp107 * _tmp74;
  const Scalar _tmp109 = std::pow(_views_1_pose[1], Scalar(2));
  const Scalar _tmp110 = _tmp109 + Scalar(-1) / Scalar(2);
  const Scalar _tmp111 = _tmp110 + _tmp49;
  const Scalar _tmp112 = _tmp52 - _tmp53;
  const Scalar _tmp113 = _tmp112 * _views_1_pose[5];
  const Scalar _tmp114 = _views_1_pose[0] * _views_1_pose[2];
  const Scalar _tmp115 = _views_1_pose[1] * _views_1_pose[3];
  const Scalar _tmp116 = _tmp114 + _tmp115;
  const Scalar _tmp117 = _tmp116 * _views_1_pose[4];
  const Scalar _tmp118 = _tmp112 * _tmp60;
  const Scalar _tmp119 = _tmp116 * _tmp63;
  const Scalar _tmp120 = -_tmp118 + _tmp119;
  const Scalar _tmp121 = -_priors_1_0_target_T_src[6] - _tmp111 * _tmp61 +
                         2 * _tmp111 * _views_1_pose[6] + 2 * _tmp113 - 2 * _tmp117 + _tmp120;
  const Scalar _tmp122 = _tmp110 + _tmp48;
  const Scalar _tmp123 = _tmp114 - _tmp115;
  const Scalar _tmp124 = _tmp123 * _views_1_pose[6];
  const Scalar _tmp125 = _tmp56 + _tmp57;
  const Scalar _tmp126 = _tmp125 * _views_1_pose[5];
  const Scalar _tmp127 = _tmp123 * _tmp61;
  const Scalar _tmp128 = _tmp125 * _tmp60;
  const Scalar _tmp129 = _tmp127 + _tmp128;
  const Scalar _tmp130 = -_priors_1_0_target_T_src[4] - _tmp122 * _tmp63 +
                         2 * _tmp122 * _views_1_pose[4] - 2 * _tmp124 - 2 * _tmp126 + _tmp129;
  const Scalar _tmp131 = _tmp108 * priors_1_0_sqrt_info(0, 2) +
                         _tmp121 * priors_1_0_sqrt_info(0, 5) +
                         _tmp130 * priors_1_0_sqrt_info(0, 3) +
                         _tmp66 * priors_1_0_sqrt_info(0, 4) + _tmp75 * _tmp90 - _tmp98 * _tmp99;
  const Scalar _tmp132 = _tmp74 * _tmp90;
  const Scalar _tmp133 = _tmp74 * _tmp98;
  const Scalar _tmp134 =
      _tmp108 * priors_1_0_sqrt_info(1, 2) + _tmp121 * priors_1_0_sqrt_info(1, 5) +
      _tmp130 * priors_1_0_sqrt_info(1, 3) + _tmp132 * priors_1_0_sqrt_info(1, 1) -
      _tmp133 * priors_1_0_sqrt_info(1, 0) + _tmp66 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp135 = _tmp74 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp136 = _tmp74 * priors_1_0_sqrt_info(2, 2);
  const Scalar _tmp137 = _tmp107 * _tmp136 + _tmp121 * priors_1_0_sqrt_info(2, 5) +
                         _tmp130 * priors_1_0_sqrt_info(2, 3) +
                         _tmp132 * priors_1_0_sqrt_info(2, 1) - _tmp135 * _tmp98 +
                         _tmp66 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp138 =
      _tmp108 * priors_1_0_sqrt_info(3, 2) + _tmp121 * priors_1_0_sqrt_info(3, 5) +
      _tmp130 * priors_1_0_sqrt_info(3, 3) + _tmp132 * priors_1_0_sqrt_info(3, 1) -
      _tmp133 * priors_1_0_sqrt_info(3, 0) + _tmp66 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp139 = _tmp74 * priors_1_0_sqrt_info(4, 2);
  const Scalar _tmp140 = _tmp107 * _tmp139 + _tmp121 * priors_1_0_sqrt_info(4, 5) +
                         _tmp130 * priors_1_0_sqrt_info(4, 3) +
                         _tmp132 * priors_1_0_sqrt_info(4, 1) -
                         _tmp133 * priors_1_0_sqrt_info(4, 0) + _tmp66 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp141 = _tmp74 * priors_1_0_sqrt_info(5, 2);
  const Scalar _tmp142 = _tmp107 * _tmp141 + _tmp121 * priors_1_0_sqrt_info(5, 5) +
                         _tmp130 * priors_1_0_sqrt_info(5, 3) +
                         _tmp132 * priors_1_0_sqrt_info(5, 1) -
                         _tmp133 * priors_1_0_sqrt_info(5, 0) + _tmp66 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp143 = -views_0_calibration(2, 0);
  const Scalar _tmp144 = _tmp143 + matches_0_0_source_coords(0, 0);
  const Scalar _tmp145 = std::pow(views_0_calibration(0, 0), Scalar(-2));
  const Scalar _tmp146 = -views_0_calibration(3, 0);
  const Scalar _tmp147 = _tmp146 + matches_0_0_source_coords(1, 0);
  const Scalar _tmp148 = std::pow(views_0_calibration(1, 0), Scalar(-2));
  const Scalar _tmp149 = std::pow(
      Scalar(std::pow(_tmp144, Scalar(2)) * _tmp145 + std::pow(_tmp147, Scalar(2)) * _tmp148 + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp150 = 2 * _tmp31;
  const Scalar _tmp151 = 2 / views_0_calibration(0, 0);
  const Scalar _tmp152 = _tmp151 * _tmp25;
  const Scalar _tmp153 = _tmp144 * _tmp149;
  const Scalar _tmp154 = 2 / views_0_calibration(1, 0);
  const Scalar _tmp155 = _tmp154 * _tmp39;
  const Scalar _tmp156 = _tmp147 * _tmp149;
  const Scalar _tmp157 = _views_0_pose[6] - _views_1_pose[6];
  const Scalar _tmp158 =
      -_tmp149 * _tmp150 + _tmp152 * _tmp153 + _tmp155 * _tmp156 + _tmp157 * landmarks_0_;
  const Scalar _tmp159 = 2 * _tmp35;
  const Scalar _tmp160 = _tmp154 * _tmp37;
  const Scalar _tmp161 = _tmp151 * _tmp22;
  const Scalar _tmp162 = _views_0_pose[5] - _views_1_pose[5];
  const Scalar _tmp163 =
      _tmp149 * _tmp159 + _tmp153 * _tmp161 - _tmp156 * _tmp160 + _tmp162 * landmarks_0_;
  const Scalar _tmp164 = 2 * _tmp32;
  const Scalar _tmp165 = _tmp151 * _tmp19;
  const Scalar _tmp166 = _tmp154 * _tmp38;
  const Scalar _tmp167 = _views_0_pose[4] - _views_1_pose[4];
  const Scalar _tmp168 =
      _tmp149 * _tmp164 - _tmp153 * _tmp165 - _tmp156 * _tmp166 + _tmp167 * landmarks_0_;
  const Scalar _tmp169 = _tmp112 * _tmp163 - _tmp116 * _tmp168;
  const Scalar _tmp170 = _tmp111 * _tmp158 + _tmp169;
  const Scalar _tmp171 = -2 * _tmp170;
  const Scalar _tmp172 = std::max<Scalar>(_tmp171, epsilon);
  const Scalar _tmp173 = Scalar(1.0) / (_tmp172);
  const Scalar _tmp174 = _tmp125 * _tmp163;
  const Scalar _tmp175 = _tmp123 * _tmp158;
  const Scalar _tmp176 = _tmp174 + _tmp175;
  const Scalar _tmp177 = -_tmp122 * _tmp168 + _tmp176;
  const Scalar _tmp178 = 2 * views_1_calibration(0, 0);
  const Scalar _tmp179 =
      _tmp173 * _tmp177 * _tmp178 - matches_0_0_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp180 = _tmp168 * _tmp58;
  const Scalar _tmp181 = _tmp158 * _tmp54;
  const Scalar _tmp182 = _tmp163 * _tmp51 - _tmp180 - _tmp181;
  const Scalar _tmp183 = _tmp173 * views_1_calibration(1, 0);
  const Scalar _tmp184 =
      -2 * _tmp182 * _tmp183 - matches_0_0_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp185 = std::pow(_tmp179, Scalar(2)) + std::pow(_tmp184, Scalar(2)) + epsilon;
  const Scalar _tmp186 = std::pow(_tmp185, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp187 = std::max<Scalar>(0, -(((_tmp170) > 0) - ((_tmp170) < 0)));
  const Scalar _tmp188 = std::pow(costs_reprojection_error_gnc_scale, Scalar(-2));
  const Scalar _tmp189 = -epsilon;
  const Scalar _tmp190 = Scalar(1.0) / (_tmp189 + costs_reprojection_error_gnc_mu - 1);
  const Scalar _tmp191 = epsilon + std::fabs(_tmp190);
  const Scalar _tmp192 = _tmp188 / _tmp191;
  const Scalar _tmp193 = _tmp185 * _tmp192 + 1;
  const Scalar _tmp194 = _tmp190 + 2;
  const Scalar _tmp195 = _tmp194 + 2 * epsilon *
                                       (std::min<Scalar>(0, (((_tmp194) > 0) - ((_tmp194) < 0))) +
                                        Scalar(1) / Scalar(2));
  const Scalar _tmp196 = (Scalar(1) / Scalar(2)) * _tmp195;
  const Scalar _tmp197 = 2 * _tmp191 / _tmp195;
  const Scalar _tmp198 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp193, _tmp196) - 1)));
  const Scalar _tmp199 = std::sqrt(matches_0_0_weight);
  const Scalar _tmp200 = _tmp187 * _tmp198 * _tmp199;
  const Scalar _tmp201 = _tmp186 * _tmp200;
  const Scalar _tmp202 = _tmp179 * _tmp201;
  const Scalar _tmp203 = _tmp184 * _tmp201;
  const Scalar _tmp204 = _tmp143 + matches_0_1_source_coords(0, 0);
  const Scalar _tmp205 = _tmp146 + matches_0_1_source_coords(1, 0);
  const Scalar _tmp206 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp204, Scalar(2)) + _tmp148 * std::pow(_tmp205, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp207 = _tmp204 * _tmp206;
  const Scalar _tmp208 = _tmp205 * _tmp206;
  const Scalar _tmp209 =
      -_tmp150 * _tmp206 + _tmp152 * _tmp207 + _tmp155 * _tmp208 + _tmp157 * landmarks_1_;
  const Scalar _tmp210 =
      _tmp159 * _tmp206 - _tmp160 * _tmp208 + _tmp161 * _tmp207 + _tmp162 * landmarks_1_;
  const Scalar _tmp211 =
      _tmp164 * _tmp206 - _tmp165 * _tmp207 - _tmp166 * _tmp208 + _tmp167 * landmarks_1_;
  const Scalar _tmp212 = _tmp112 * _tmp210 - _tmp116 * _tmp211;
  const Scalar _tmp213 = _tmp111 * _tmp209 + _tmp212;
  const Scalar _tmp214 = -2 * _tmp213;
  const Scalar _tmp215 = std::max<Scalar>(_tmp214, epsilon);
  const Scalar _tmp216 = Scalar(1.0) / (_tmp215);
  const Scalar _tmp217 = _tmp125 * _tmp210;
  const Scalar _tmp218 = _tmp123 * _tmp209;
  const Scalar _tmp219 = _tmp217 + _tmp218;
  const Scalar _tmp220 = -_tmp122 * _tmp211 + _tmp219;
  const Scalar _tmp221 =
      _tmp178 * _tmp216 * _tmp220 - matches_0_1_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp222 = _tmp211 * _tmp58;
  const Scalar _tmp223 = _tmp209 * _tmp54;
  const Scalar _tmp224 = _tmp210 * _tmp51 - _tmp222 - _tmp223;
  const Scalar _tmp225 = 2 * views_1_calibration(1, 0);
  const Scalar _tmp226 =
      -_tmp216 * _tmp224 * _tmp225 - matches_0_1_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp227 = std::pow(_tmp221, Scalar(2)) + std::pow(_tmp226, Scalar(2)) + epsilon;
  const Scalar _tmp228 = std::pow(_tmp227, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp229 = std::max<Scalar>(0, -(((_tmp213) > 0) - ((_tmp213) < 0)));
  const Scalar _tmp230 = std::sqrt(matches_0_1_weight);
  const Scalar _tmp231 = _tmp192 * _tmp227 + 1;
  const Scalar _tmp232 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp231, _tmp196) - 1)));
  const Scalar _tmp233 = _tmp229 * _tmp230 * _tmp232;
  const Scalar _tmp234 = _tmp228 * _tmp233;
  const Scalar _tmp235 = _tmp221 * _tmp234;
  const Scalar _tmp236 = _tmp226 * _tmp234;
  const Scalar _tmp237 = _tmp146 + matches_0_2_source_coords(1, 0);
  const Scalar _tmp238 = _tmp143 + matches_0_2_source_coords(0, 0);
  const Scalar _tmp239 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp238, Scalar(2)) + _tmp148 * std::pow(_tmp237, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp240 = _tmp238 * _tmp239;
  const Scalar _tmp241 = _tmp237 * _tmp239;
  const Scalar _tmp242 =
      _tmp164 * _tmp239 - _tmp165 * _tmp240 - _tmp166 * _tmp241 + _tmp167 * landmarks_2_;
  const Scalar _tmp243 =
      -_tmp150 * _tmp239 + _tmp152 * _tmp240 + _tmp155 * _tmp241 + _tmp157 * landmarks_2_;
  const Scalar _tmp244 = _tmp123 * _tmp243;
  const Scalar _tmp245 =
      _tmp159 * _tmp239 - _tmp160 * _tmp241 + _tmp161 * _tmp240 + _tmp162 * landmarks_2_;
  const Scalar _tmp246 = _tmp125 * _tmp245;
  const Scalar _tmp247 = -_tmp244 - _tmp246;
  const Scalar _tmp248 = _tmp122 * _tmp242 + _tmp247;
  const Scalar _tmp249 = -_tmp112 * _tmp245 + _tmp116 * _tmp242;
  const Scalar _tmp250 = -_tmp111 * _tmp243 + _tmp249;
  const Scalar _tmp251 = 2 * _tmp250;
  const Scalar _tmp252 = std::max<Scalar>(_tmp251, epsilon);
  const Scalar _tmp253 = Scalar(1.0) / (_tmp252);
  const Scalar _tmp254 = _tmp253 * views_1_calibration(0, 0);
  const Scalar _tmp255 =
      -2 * _tmp248 * _tmp254 - matches_0_2_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp256 = _tmp242 * _tmp58;
  const Scalar _tmp257 = _tmp243 * _tmp54;
  const Scalar _tmp258 = -_tmp245 * _tmp51 + _tmp256 + _tmp257;
  const Scalar _tmp259 =
      _tmp225 * _tmp253 * _tmp258 - matches_0_2_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp260 = std::pow(_tmp255, Scalar(2)) + std::pow(_tmp259, Scalar(2)) + epsilon;
  const Scalar _tmp261 = std::pow(_tmp260, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp262 = std::sqrt(matches_0_2_weight);
  const Scalar _tmp263 = std::max<Scalar>(0, (((_tmp250) > 0) - ((_tmp250) < 0)));
  const Scalar _tmp264 = _tmp192 * _tmp260 + 1;
  const Scalar _tmp265 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp264, _tmp196) - 1)));
  const Scalar _tmp266 = _tmp262 * _tmp263 * _tmp265;
  const Scalar _tmp267 = _tmp261 * _tmp266;
  const Scalar _tmp268 = _tmp255 * _tmp267;
  const Scalar _tmp269 = _tmp259 * _tmp267;
  const Scalar _tmp270 = _tmp143 + matches_0_3_source_coords(0, 0);
  const Scalar _tmp271 = _tmp146 + matches_0_3_source_coords(1, 0);
  const Scalar _tmp272 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp270, Scalar(2)) + _tmp148 * std::pow(_tmp271, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp273 = _tmp271 * _tmp272;
  const Scalar _tmp274 = _tmp270 * _tmp272;
  const Scalar _tmp275 =
      -_tmp150 * _tmp272 + _tmp152 * _tmp274 + _tmp155 * _tmp273 + _tmp157 * landmarks_3_;
  const Scalar _tmp276 =
      _tmp159 * _tmp272 - _tmp160 * _tmp273 + _tmp161 * _tmp274 + _tmp162 * landmarks_3_;
  const Scalar _tmp277 =
      _tmp164 * _tmp272 - _tmp165 * _tmp274 - _tmp166 * _tmp273 + _tmp167 * landmarks_3_;
  const Scalar _tmp278 = _tmp112 * _tmp276 - _tmp116 * _tmp277;
  const Scalar _tmp279 = _tmp111 * _tmp275 + _tmp278;
  const Scalar _tmp280 = -2 * _tmp279;
  const Scalar _tmp281 = std::max<Scalar>(_tmp280, epsilon);
  const Scalar _tmp282 = Scalar(1.0) / (_tmp281);
  const Scalar _tmp283 = _tmp125 * _tmp276;
  const Scalar _tmp284 = _tmp123 * _tmp275;
  const Scalar _tmp285 = _tmp283 + _tmp284;
  const Scalar _tmp286 = -_tmp122 * _tmp277 + _tmp285;
  const Scalar _tmp287 =
      _tmp178 * _tmp282 * _tmp286 - matches_0_3_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp288 = _tmp277 * _tmp58;
  const Scalar _tmp289 = _tmp275 * _tmp54;
  const Scalar _tmp290 = _tmp276 * _tmp51 - _tmp288 - _tmp289;
  const Scalar _tmp291 =
      -_tmp225 * _tmp282 * _tmp290 - matches_0_3_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp292 = std::pow(_tmp287, Scalar(2)) + std::pow(_tmp291, Scalar(2)) + epsilon;
  const Scalar _tmp293 = std::pow(_tmp292, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp294 = std::sqrt(matches_0_3_weight);
  const Scalar _tmp295 = std::max<Scalar>(0, -(((_tmp279) > 0) - ((_tmp279) < 0)));
  const Scalar _tmp296 = _tmp192 * _tmp292 + 1;
  const Scalar _tmp297 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp296, _tmp196) - 1)));
  const Scalar _tmp298 = _tmp294 * _tmp295 * _tmp297;
  const Scalar _tmp299 = _tmp293 * _tmp298;
  const Scalar _tmp300 = _tmp287 * _tmp299;
  const Scalar _tmp301 = _tmp291 * _tmp299;
  const Scalar _tmp302 = _tmp146 + matches_0_4_source_coords(1, 0);
  const Scalar _tmp303 = _tmp143 + matches_0_4_source_coords(0, 0);
  const Scalar _tmp304 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp303, Scalar(2)) + _tmp148 * std::pow(_tmp302, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp305 = _tmp303 * _tmp304;
  const Scalar _tmp306 = _tmp302 * _tmp304;
  const Scalar _tmp307 =
      _tmp164 * _tmp304 - _tmp165 * _tmp305 - _tmp166 * _tmp306 + _tmp167 * landmarks_4_;
  const Scalar _tmp308 =
      _tmp159 * _tmp304 - _tmp160 * _tmp306 + _tmp161 * _tmp305 + _tmp162 * landmarks_4_;
  const Scalar _tmp309 = _tmp125 * _tmp308;
  const Scalar _tmp310 =
      -_tmp150 * _tmp304 + _tmp152 * _tmp305 + _tmp155 * _tmp306 + _tmp157 * landmarks_4_;
  const Scalar _tmp311 = _tmp123 * _tmp310;
  const Scalar _tmp312 = -_tmp309 - _tmp311;
  const Scalar _tmp313 = _tmp122 * _tmp307 + _tmp312;
  const Scalar _tmp314 = -_tmp112 * _tmp308 + _tmp116 * _tmp307;
  const Scalar _tmp315 = -_tmp111 * _tmp310 + _tmp314;
  const Scalar _tmp316 = 2 * _tmp315;
  const Scalar _tmp317 = std::max<Scalar>(_tmp316, epsilon);
  const Scalar _tmp318 = Scalar(1.0) / (_tmp317);
  const Scalar _tmp319 = _tmp318 * views_1_calibration(0, 0);
  const Scalar _tmp320 =
      -2 * _tmp313 * _tmp319 - matches_0_4_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp321 = _tmp307 * _tmp58;
  const Scalar _tmp322 = _tmp310 * _tmp54;
  const Scalar _tmp323 = -_tmp308 * _tmp51 + _tmp321 + _tmp322;
  const Scalar _tmp324 =
      _tmp225 * _tmp318 * _tmp323 - matches_0_4_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp325 = std::pow(_tmp320, Scalar(2)) + std::pow(_tmp324, Scalar(2)) + epsilon;
  const Scalar _tmp326 = std::pow(_tmp325, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp327 = _tmp192 * _tmp325 + 1;
  const Scalar _tmp328 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp327, _tmp196) - 1)));
  const Scalar _tmp329 = std::sqrt(matches_0_4_weight);
  const Scalar _tmp330 = std::max<Scalar>(0, (((_tmp315) > 0) - ((_tmp315) < 0)));
  const Scalar _tmp331 = _tmp328 * _tmp329 * _tmp330;
  const Scalar _tmp332 = _tmp326 * _tmp331;
  const Scalar _tmp333 = _tmp320 * _tmp332;
  const Scalar _tmp334 = _tmp324 * _tmp332;
  const Scalar _tmp335 = _tmp146 + matches_0_5_source_coords(1, 0);
  const Scalar _tmp336 = _tmp143 + matches_0_5_source_coords(0, 0);
  const Scalar _tmp337 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp336, Scalar(2)) + _tmp148 * std::pow(_tmp335, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp338 = _tmp335 * _tmp337;
  const Scalar _tmp339 = _tmp336 * _tmp337;
  const Scalar _tmp340 =
      _tmp164 * _tmp337 - _tmp165 * _tmp339 - _tmp166 * _tmp338 + _tmp167 * landmarks_5_;
  const Scalar _tmp341 =
      _tmp159 * _tmp337 - _tmp160 * _tmp338 + _tmp161 * _tmp339 + _tmp162 * landmarks_5_;
  const Scalar _tmp342 = _tmp125 * _tmp341;
  const Scalar _tmp343 =
      -_tmp150 * _tmp337 + _tmp152 * _tmp339 + _tmp155 * _tmp338 + _tmp157 * landmarks_5_;
  const Scalar _tmp344 = _tmp123 * _tmp343;
  const Scalar _tmp345 = _tmp342 + _tmp344;
  const Scalar _tmp346 = -_tmp122 * _tmp340 + _tmp345;
  const Scalar _tmp347 = _tmp112 * _tmp341 - _tmp116 * _tmp340;
  const Scalar _tmp348 = _tmp111 * _tmp343 + _tmp347;
  const Scalar _tmp349 = -2 * _tmp348;
  const Scalar _tmp350 = std::max<Scalar>(_tmp349, epsilon);
  const Scalar _tmp351 = Scalar(1.0) / (_tmp350);
  const Scalar _tmp352 = _tmp351 * views_1_calibration(0, 0);
  const Scalar _tmp353 =
      2 * _tmp346 * _tmp352 - matches_0_5_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp354 = _tmp343 * _tmp54;
  const Scalar _tmp355 = _tmp340 * _tmp58;
  const Scalar _tmp356 = _tmp341 * _tmp51 - _tmp354 - _tmp355;
  const Scalar _tmp357 = _tmp351 * views_1_calibration(1, 0);
  const Scalar _tmp358 =
      -2 * _tmp356 * _tmp357 - matches_0_5_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp359 = std::pow(_tmp353, Scalar(2)) + std::pow(_tmp358, Scalar(2)) + epsilon;
  const Scalar _tmp360 = std::pow(_tmp359, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp361 = std::sqrt(matches_0_5_weight);
  const Scalar _tmp362 = _tmp192 * _tmp359 + 1;
  const Scalar _tmp363 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp362, _tmp196) - 1)));
  const Scalar _tmp364 = std::max<Scalar>(0, -(((_tmp348) > 0) - ((_tmp348) < 0)));
  const Scalar _tmp365 = _tmp361 * _tmp363 * _tmp364;
  const Scalar _tmp366 = _tmp360 * _tmp365;
  const Scalar _tmp367 = _tmp353 * _tmp366;
  const Scalar _tmp368 = _tmp358 * _tmp366;
  const Scalar _tmp369 = _tmp143 + matches_0_6_source_coords(0, 0);
  const Scalar _tmp370 = _tmp146 + matches_0_6_source_coords(1, 0);
  const Scalar _tmp371 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp369, Scalar(2)) + _tmp148 * std::pow(_tmp370, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp372 = _tmp369 * _tmp371;
  const Scalar _tmp373 = _tmp370 * _tmp371;
  const Scalar _tmp374 =
      -_tmp150 * _tmp371 + _tmp152 * _tmp372 + _tmp155 * _tmp373 + _tmp157 * landmarks_6_;
  const Scalar _tmp375 =
      _tmp164 * _tmp371 - _tmp165 * _tmp372 - _tmp166 * _tmp373 + _tmp167 * landmarks_6_;
  const Scalar _tmp376 =
      _tmp159 * _tmp371 - _tmp160 * _tmp373 + _tmp161 * _tmp372 + _tmp162 * landmarks_6_;
  const Scalar _tmp377 = -_tmp112 * _tmp376 + _tmp116 * _tmp375;
  const Scalar _tmp378 = -_tmp111 * _tmp374 + _tmp377;
  const Scalar _tmp379 = 2 * _tmp378;
  const Scalar _tmp380 = std::max<Scalar>(_tmp379, epsilon);
  const Scalar _tmp381 = Scalar(1.0) / (_tmp380);
  const Scalar _tmp382 = _tmp125 * _tmp376;
  const Scalar _tmp383 = _tmp123 * _tmp374;
  const Scalar _tmp384 = -_tmp382 - _tmp383;
  const Scalar _tmp385 = _tmp122 * _tmp375 + _tmp384;
  const Scalar _tmp386 =
      -_tmp178 * _tmp381 * _tmp385 - matches_0_6_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp387 = _tmp375 * _tmp58;
  const Scalar _tmp388 = _tmp374 * _tmp54;
  const Scalar _tmp389 = -_tmp376 * _tmp51 + _tmp387 + _tmp388;
  const Scalar _tmp390 =
      _tmp225 * _tmp381 * _tmp389 - matches_0_6_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp391 = std::pow(_tmp386, Scalar(2)) + std::pow(_tmp390, Scalar(2)) + epsilon;
  const Scalar _tmp392 = std::pow(_tmp391, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp393 = std::sqrt(matches_0_6_weight);
  const Scalar _tmp394 = std::max<Scalar>(0, (((_tmp378) > 0) - ((_tmp378) < 0)));
  const Scalar _tmp395 = _tmp192 * _tmp391 + 1;
  const Scalar _tmp396 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp395, _tmp196) - 1)));
  const Scalar _tmp397 = _tmp393 * _tmp394 * _tmp396;
  const Scalar _tmp398 = _tmp392 * _tmp397;
  const Scalar _tmp399 = _tmp386 * _tmp398;
  const Scalar _tmp400 = _tmp390 * _tmp398;
  const Scalar _tmp401 = _tmp146 + matches_0_7_source_coords(1, 0);
  const Scalar _tmp402 = _tmp143 + matches_0_7_source_coords(0, 0);
  const Scalar _tmp403 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp402, Scalar(2)) + _tmp148 * std::pow(_tmp401, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp404 = _tmp402 * _tmp403;
  const Scalar _tmp405 = _tmp401 * _tmp403;
  const Scalar _tmp406 =
      -_tmp150 * _tmp403 + _tmp152 * _tmp404 + _tmp155 * _tmp405 + _tmp157 * landmarks_7_;
  const Scalar _tmp407 =
      _tmp159 * _tmp403 - _tmp160 * _tmp405 + _tmp161 * _tmp404 + _tmp162 * landmarks_7_;
  const Scalar _tmp408 =
      _tmp164 * _tmp403 - _tmp165 * _tmp404 - _tmp166 * _tmp405 + _tmp167 * landmarks_7_;
  const Scalar _tmp409 = _tmp112 * _tmp407 - _tmp116 * _tmp408;
  const Scalar _tmp410 = _tmp111 * _tmp406 + _tmp409;
  const Scalar _tmp411 = -2 * _tmp410;
  const Scalar _tmp412 = std::max<Scalar>(_tmp411, epsilon);
  const Scalar _tmp413 = Scalar(1.0) / (_tmp412);
  const Scalar _tmp414 = _tmp125 * _tmp407;
  const Scalar _tmp415 = _tmp123 * _tmp406;
  const Scalar _tmp416 = _tmp414 + _tmp415;
  const Scalar _tmp417 = -_tmp122 * _tmp408 + _tmp416;
  const Scalar _tmp418 =
      _tmp178 * _tmp413 * _tmp417 - matches_0_7_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp419 = _tmp408 * _tmp58;
  const Scalar _tmp420 = _tmp406 * _tmp54;
  const Scalar _tmp421 = _tmp407 * _tmp51 - _tmp419 - _tmp420;
  const Scalar _tmp422 =
      -_tmp225 * _tmp413 * _tmp421 - matches_0_7_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp423 = std::pow(_tmp418, Scalar(2)) + std::pow(_tmp422, Scalar(2)) + epsilon;
  const Scalar _tmp424 = std::pow(_tmp423, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp425 = std::sqrt(matches_0_7_weight);
  const Scalar _tmp426 = std::max<Scalar>(0, -(((_tmp410) > 0) - ((_tmp410) < 0)));
  const Scalar _tmp427 = _tmp192 * _tmp423 + 1;
  const Scalar _tmp428 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp427, _tmp196) - 1)));
  const Scalar _tmp429 = _tmp425 * _tmp426 * _tmp428;
  const Scalar _tmp430 = _tmp424 * _tmp429;
  const Scalar _tmp431 = _tmp418 * _tmp430;
  const Scalar _tmp432 = _tmp422 * _tmp430;
  const Scalar _tmp433 = _tmp146 + matches_0_8_source_coords(1, 0);
  const Scalar _tmp434 = _tmp143 + matches_0_8_source_coords(0, 0);
  const Scalar _tmp435 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp434, Scalar(2)) + _tmp148 * std::pow(_tmp433, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp436 = _tmp434 * _tmp435;
  const Scalar _tmp437 = _tmp433 * _tmp435;
  const Scalar _tmp438 =
      -_tmp150 * _tmp435 + _tmp152 * _tmp436 + _tmp155 * _tmp437 + _tmp157 * landmarks_8_;
  const Scalar _tmp439 =
      _tmp159 * _tmp435 - _tmp160 * _tmp437 + _tmp161 * _tmp436 + _tmp162 * landmarks_8_;
  const Scalar _tmp440 =
      _tmp164 * _tmp435 - _tmp165 * _tmp436 - _tmp166 * _tmp437 + _tmp167 * landmarks_8_;
  const Scalar _tmp441 = _tmp112 * _tmp439 - _tmp116 * _tmp440;
  const Scalar _tmp442 = _tmp111 * _tmp438 + _tmp441;
  const Scalar _tmp443 = -2 * _tmp442;
  const Scalar _tmp444 = std::max<Scalar>(_tmp443, epsilon);
  const Scalar _tmp445 = Scalar(1.0) / (_tmp444);
  const Scalar _tmp446 = _tmp125 * _tmp439;
  const Scalar _tmp447 = _tmp123 * _tmp438;
  const Scalar _tmp448 = _tmp446 + _tmp447;
  const Scalar _tmp449 = -_tmp122 * _tmp440 + _tmp448;
  const Scalar _tmp450 =
      _tmp178 * _tmp445 * _tmp449 - matches_0_8_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp451 = _tmp440 * _tmp58;
  const Scalar _tmp452 = _tmp438 * _tmp54;
  const Scalar _tmp453 = _tmp439 * _tmp51 - _tmp451 - _tmp452;
  const Scalar _tmp454 =
      -_tmp225 * _tmp445 * _tmp453 - matches_0_8_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp455 = std::pow(_tmp450, Scalar(2)) + std::pow(_tmp454, Scalar(2)) + epsilon;
  const Scalar _tmp456 = std::pow(_tmp455, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp457 = std::sqrt(matches_0_8_weight);
  const Scalar _tmp458 = _tmp192 * _tmp455 + 1;
  const Scalar _tmp459 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp458, _tmp196) - 1)));
  const Scalar _tmp460 = std::max<Scalar>(0, -(((_tmp442) > 0) - ((_tmp442) < 0)));
  const Scalar _tmp461 = _tmp457 * _tmp459 * _tmp460;
  const Scalar _tmp462 = _tmp456 * _tmp461;
  const Scalar _tmp463 = _tmp450 * _tmp462;
  const Scalar _tmp464 = _tmp454 * _tmp462;
  const Scalar _tmp465 = _tmp146 + matches_0_9_source_coords(1, 0);
  const Scalar _tmp466 = _tmp143 + matches_0_9_source_coords(0, 0);
  const Scalar _tmp467 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp466, Scalar(2)) + _tmp148 * std::pow(_tmp465, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp468 = _tmp466 * _tmp467;
  const Scalar _tmp469 = _tmp465 * _tmp467;
  const Scalar _tmp470 =
      -_tmp150 * _tmp467 + _tmp152 * _tmp468 + _tmp155 * _tmp469 + _tmp157 * landmarks_9_;
  const Scalar _tmp471 = _tmp123 * _tmp470;
  const Scalar _tmp472 =
      _tmp159 * _tmp467 - _tmp160 * _tmp469 + _tmp161 * _tmp468 + _tmp162 * landmarks_9_;
  const Scalar _tmp473 = _tmp125 * _tmp472;
  const Scalar _tmp474 =
      _tmp164 * _tmp467 - _tmp165 * _tmp468 - _tmp166 * _tmp469 + _tmp167 * landmarks_9_;
  const Scalar _tmp475 = -_tmp122 * _tmp474 + _tmp471 + _tmp473;
  const Scalar _tmp476 = _tmp112 * _tmp472;
  const Scalar _tmp477 = _tmp116 * _tmp474;
  const Scalar _tmp478 = _tmp476 - _tmp477;
  const Scalar _tmp479 = _tmp111 * _tmp470 + _tmp478;
  const Scalar _tmp480 = -2 * _tmp479;
  const Scalar _tmp481 = std::max<Scalar>(_tmp480, epsilon);
  const Scalar _tmp482 = Scalar(1.0) / (_tmp481);
  const Scalar _tmp483 = _tmp482 * views_1_calibration(0, 0);
  const Scalar _tmp484 =
      2 * _tmp475 * _tmp483 - matches_0_9_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp485 = _tmp470 * _tmp54 + _tmp474 * _tmp58;
  const Scalar _tmp486 = -_tmp472 * _tmp51 + _tmp485;
  const Scalar _tmp487 = _tmp482 * views_1_calibration(1, 0);
  const Scalar _tmp488 =
      2 * _tmp486 * _tmp487 - matches_0_9_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp489 = std::pow(_tmp484, Scalar(2)) + std::pow(_tmp488, Scalar(2)) + epsilon;
  const Scalar _tmp490 = std::pow(_tmp489, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp491 = std::sqrt(matches_0_9_weight);
  const Scalar _tmp492 = std::max<Scalar>(0, -(((_tmp479) > 0) - ((_tmp479) < 0)));
  const Scalar _tmp493 = _tmp192 * _tmp489 + 1;
  const Scalar _tmp494 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp493, _tmp196) - 1)));
  const Scalar _tmp495 = _tmp491 * _tmp492 * _tmp494;
  const Scalar _tmp496 = _tmp490 * _tmp495;
  const Scalar _tmp497 = _tmp484 * _tmp496;
  const Scalar _tmp498 = _tmp488 * _tmp496;
  const Scalar _tmp499 = _tmp146 + matches_0_10_source_coords(1, 0);
  const Scalar _tmp500 = _tmp143 + matches_0_10_source_coords(0, 0);
  const Scalar _tmp501 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp500, Scalar(2)) + _tmp148 * std::pow(_tmp499, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp502 = _tmp499 * _tmp501;
  const Scalar _tmp503 = _tmp500 * _tmp501;
  const Scalar _tmp504 =
      -_tmp150 * _tmp501 + _tmp152 * _tmp503 + _tmp155 * _tmp502 + _tmp157 * landmarks_10_;
  const Scalar _tmp505 = _tmp123 * _tmp504;
  const Scalar _tmp506 =
      _tmp159 * _tmp501 - _tmp160 * _tmp502 + _tmp161 * _tmp503 + _tmp162 * landmarks_10_;
  const Scalar _tmp507 = _tmp125 * _tmp506;
  const Scalar _tmp508 =
      _tmp164 * _tmp501 - _tmp165 * _tmp503 - _tmp166 * _tmp502 + _tmp167 * landmarks_10_;
  const Scalar _tmp509 = -_tmp122 * _tmp508 + _tmp505 + _tmp507;
  const Scalar _tmp510 = _tmp112 * _tmp506;
  const Scalar _tmp511 = _tmp116 * _tmp508;
  const Scalar _tmp512 = _tmp510 - _tmp511;
  const Scalar _tmp513 = _tmp111 * _tmp504 + _tmp512;
  const Scalar _tmp514 = -2 * _tmp513;
  const Scalar _tmp515 = std::max<Scalar>(_tmp514, epsilon);
  const Scalar _tmp516 = Scalar(1.0) / (_tmp515);
  const Scalar _tmp517 = _tmp516 * views_1_calibration(0, 0);
  const Scalar _tmp518 =
      2 * _tmp509 * _tmp517 - matches_0_10_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp519 = _tmp504 * _tmp54 + _tmp508 * _tmp58;
  const Scalar _tmp520 = -_tmp506 * _tmp51 + _tmp519;
  const Scalar _tmp521 = _tmp516 * views_1_calibration(1, 0);
  const Scalar _tmp522 =
      2 * _tmp520 * _tmp521 - matches_0_10_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp523 = std::pow(_tmp518, Scalar(2)) + std::pow(_tmp522, Scalar(2)) + epsilon;
  const Scalar _tmp524 = std::pow(_tmp523, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp525 = std::max<Scalar>(0, -(((_tmp513) > 0) - ((_tmp513) < 0)));
  const Scalar _tmp526 = std::sqrt(matches_0_10_weight);
  const Scalar _tmp527 = _tmp192 * _tmp523 + 1;
  const Scalar _tmp528 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp527, _tmp196) - 1)));
  const Scalar _tmp529 = _tmp525 * _tmp526 * _tmp528;
  const Scalar _tmp530 = _tmp524 * _tmp529;
  const Scalar _tmp531 = _tmp518 * _tmp530;
  const Scalar _tmp532 = _tmp522 * _tmp530;
  const Scalar _tmp533 = _tmp146 + matches_0_11_source_coords(1, 0);
  const Scalar _tmp534 = _tmp143 + matches_0_11_source_coords(0, 0);
  const Scalar _tmp535 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp534, Scalar(2)) + _tmp148 * std::pow(_tmp533, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp536 = _tmp534 * _tmp535;
  const Scalar _tmp537 = _tmp533 * _tmp535;
  const Scalar _tmp538 =
      -_tmp150 * _tmp535 + _tmp152 * _tmp536 + _tmp155 * _tmp537 + _tmp157 * landmarks_11_;
  const Scalar _tmp539 =
      _tmp164 * _tmp535 - _tmp165 * _tmp536 - _tmp166 * _tmp537 + _tmp167 * landmarks_11_;
  const Scalar _tmp540 =
      _tmp159 * _tmp535 - _tmp160 * _tmp537 + _tmp161 * _tmp536 + _tmp162 * landmarks_11_;
  const Scalar _tmp541 = -_tmp112 * _tmp540 + _tmp116 * _tmp539;
  const Scalar _tmp542 = -_tmp111 * _tmp538 + _tmp541;
  const Scalar _tmp543 = 2 * _tmp542;
  const Scalar _tmp544 = std::max<Scalar>(_tmp543, epsilon);
  const Scalar _tmp545 = Scalar(1.0) / (_tmp544);
  const Scalar _tmp546 = _tmp123 * _tmp538;
  const Scalar _tmp547 = _tmp125 * _tmp540;
  const Scalar _tmp548 = -_tmp546 - _tmp547;
  const Scalar _tmp549 = _tmp122 * _tmp539 + _tmp548;
  const Scalar _tmp550 =
      -_tmp178 * _tmp545 * _tmp549 - matches_0_11_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp551 = _tmp539 * _tmp58;
  const Scalar _tmp552 = _tmp538 * _tmp54;
  const Scalar _tmp553 = -_tmp51 * _tmp540 + _tmp551 + _tmp552;
  const Scalar _tmp554 =
      _tmp225 * _tmp545 * _tmp553 - matches_0_11_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp555 = std::pow(_tmp550, Scalar(2)) + std::pow(_tmp554, Scalar(2)) + epsilon;
  const Scalar _tmp556 = std::pow(_tmp555, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp557 = _tmp192 * _tmp555 + 1;
  const Scalar _tmp558 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp557, _tmp196) - 1)));
  const Scalar _tmp559 = std::sqrt(matches_0_11_weight);
  const Scalar _tmp560 = std::max<Scalar>(0, (((_tmp542) > 0) - ((_tmp542) < 0)));
  const Scalar _tmp561 = _tmp558 * _tmp559 * _tmp560;
  const Scalar _tmp562 = _tmp556 * _tmp561;
  const Scalar _tmp563 = _tmp550 * _tmp562;
  const Scalar _tmp564 = _tmp554 * _tmp562;
  const Scalar _tmp565 = _tmp146 + matches_0_12_source_coords(1, 0);
  const Scalar _tmp566 = _tmp143 + matches_0_12_source_coords(0, 0);
  const Scalar _tmp567 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp566, Scalar(2)) + _tmp148 * std::pow(_tmp565, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp568 = _tmp565 * _tmp567;
  const Scalar _tmp569 = _tmp566 * _tmp567;
  const Scalar _tmp570 =
      -_tmp150 * _tmp567 + _tmp152 * _tmp569 + _tmp155 * _tmp568 + _tmp157 * landmarks_12_;
  const Scalar _tmp571 = _tmp123 * _tmp570;
  const Scalar _tmp572 =
      _tmp164 * _tmp567 - _tmp165 * _tmp569 - _tmp166 * _tmp568 + _tmp167 * landmarks_12_;
  const Scalar _tmp573 =
      _tmp159 * _tmp567 - _tmp160 * _tmp568 + _tmp161 * _tmp569 + _tmp162 * landmarks_12_;
  const Scalar _tmp574 = _tmp125 * _tmp573;
  const Scalar _tmp575 = -_tmp122 * _tmp572 + _tmp571 + _tmp574;
  const Scalar _tmp576 = _tmp116 * _tmp572;
  const Scalar _tmp577 = _tmp112 * _tmp573;
  const Scalar _tmp578 = -_tmp576 + _tmp577;
  const Scalar _tmp579 = _tmp111 * _tmp570 + _tmp578;
  const Scalar _tmp580 = -2 * _tmp579;
  const Scalar _tmp581 = std::max<Scalar>(_tmp580, epsilon);
  const Scalar _tmp582 = Scalar(1.0) / (_tmp581);
  const Scalar _tmp583 = _tmp582 * views_1_calibration(0, 0);
  const Scalar _tmp584 =
      2 * _tmp575 * _tmp583 - matches_0_12_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp585 = _tmp54 * _tmp570 + _tmp572 * _tmp58;
  const Scalar _tmp586 = -_tmp51 * _tmp573 + _tmp585;
  const Scalar _tmp587 = _tmp582 * views_1_calibration(1, 0);
  const Scalar _tmp588 =
      2 * _tmp586 * _tmp587 - matches_0_12_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp589 = std::pow(_tmp584, Scalar(2)) + std::pow(_tmp588, Scalar(2)) + epsilon;
  const Scalar _tmp590 = std::pow(_tmp589, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp591 = std::max<Scalar>(0, -(((_tmp579) > 0) - ((_tmp579) < 0)));
  const Scalar _tmp592 = std::sqrt(matches_0_12_weight);
  const Scalar _tmp593 = _tmp192 * _tmp589 + 1;
  const Scalar _tmp594 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp593, _tmp196) - 1)));
  const Scalar _tmp595 = _tmp591 * _tmp592 * _tmp594;
  const Scalar _tmp596 = _tmp590 * _tmp595;
  const Scalar _tmp597 = _tmp584 * _tmp596;
  const Scalar _tmp598 = _tmp588 * _tmp596;
  const Scalar _tmp599 = _tmp146 + matches_0_13_source_coords(1, 0);
  const Scalar _tmp600 = _tmp143 + matches_0_13_source_coords(0, 0);
  const Scalar _tmp601 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp600, Scalar(2)) + _tmp148 * std::pow(_tmp599, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp602 = _tmp600 * _tmp601;
  const Scalar _tmp603 = _tmp599 * _tmp601;
  const Scalar _tmp604 =
      -_tmp150 * _tmp601 + _tmp152 * _tmp602 + _tmp155 * _tmp603 + _tmp157 * landmarks_13_;
  const Scalar _tmp605 = _tmp123 * _tmp604;
  const Scalar _tmp606 =
      _tmp159 * _tmp601 - _tmp160 * _tmp603 + _tmp161 * _tmp602 + _tmp162 * landmarks_13_;
  const Scalar _tmp607 = _tmp125 * _tmp606;
  const Scalar _tmp608 =
      _tmp164 * _tmp601 - _tmp165 * _tmp602 - _tmp166 * _tmp603 + _tmp167 * landmarks_13_;
  const Scalar _tmp609 = -_tmp122 * _tmp608 + _tmp605 + _tmp607;
  const Scalar _tmp610 = _tmp112 * _tmp606;
  const Scalar _tmp611 = _tmp116 * _tmp608;
  const Scalar _tmp612 = _tmp610 - _tmp611;
  const Scalar _tmp613 = _tmp111 * _tmp604 + _tmp612;
  const Scalar _tmp614 = -2 * _tmp613;
  const Scalar _tmp615 = std::max<Scalar>(_tmp614, epsilon);
  const Scalar _tmp616 = Scalar(1.0) / (_tmp615);
  const Scalar _tmp617 = _tmp616 * views_1_calibration(0, 0);
  const Scalar _tmp618 =
      2 * _tmp609 * _tmp617 - matches_0_13_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp619 = _tmp54 * _tmp604 + _tmp58 * _tmp608;
  const Scalar _tmp620 = -_tmp51 * _tmp606 + _tmp619;
  const Scalar _tmp621 = _tmp616 * views_1_calibration(1, 0);
  const Scalar _tmp622 =
      2 * _tmp620 * _tmp621 - matches_0_13_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp623 = std::pow(_tmp618, Scalar(2)) + std::pow(_tmp622, Scalar(2)) + epsilon;
  const Scalar _tmp624 = std::pow(_tmp623, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp625 = std::max<Scalar>(0, -(((_tmp613) > 0) - ((_tmp613) < 0)));
  const Scalar _tmp626 = std::sqrt(matches_0_13_weight);
  const Scalar _tmp627 = _tmp192 * _tmp623 + 1;
  const Scalar _tmp628 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp627, _tmp196) - 1)));
  const Scalar _tmp629 = _tmp625 * _tmp626 * _tmp628;
  const Scalar _tmp630 = _tmp624 * _tmp629;
  const Scalar _tmp631 = _tmp618 * _tmp630;
  const Scalar _tmp632 = _tmp622 * _tmp630;
  const Scalar _tmp633 = _tmp146 + matches_0_14_source_coords(1, 0);
  const Scalar _tmp634 = _tmp143 + matches_0_14_source_coords(0, 0);
  const Scalar _tmp635 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp634, Scalar(2)) + _tmp148 * std::pow(_tmp633, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp636 = _tmp633 * _tmp635;
  const Scalar _tmp637 = _tmp634 * _tmp635;
  const Scalar _tmp638 =
      -_tmp150 * _tmp635 + _tmp152 * _tmp637 + _tmp155 * _tmp636 + _tmp157 * landmarks_14_;
  const Scalar _tmp639 =
      _tmp164 * _tmp635 - _tmp165 * _tmp637 - _tmp166 * _tmp636 + _tmp167 * landmarks_14_;
  const Scalar _tmp640 =
      _tmp159 * _tmp635 - _tmp160 * _tmp636 + _tmp161 * _tmp637 + _tmp162 * landmarks_14_;
  const Scalar _tmp641 = -_tmp112 * _tmp640 + _tmp116 * _tmp639;
  const Scalar _tmp642 = -_tmp111 * _tmp638 + _tmp641;
  const Scalar _tmp643 = 2 * _tmp642;
  const Scalar _tmp644 = std::max<Scalar>(_tmp643, epsilon);
  const Scalar _tmp645 = Scalar(1.0) / (_tmp644);
  const Scalar _tmp646 = _tmp123 * _tmp638;
  const Scalar _tmp647 = _tmp125 * _tmp640;
  const Scalar _tmp648 = -_tmp646 - _tmp647;
  const Scalar _tmp649 = _tmp122 * _tmp639 + _tmp648;
  const Scalar _tmp650 =
      -_tmp178 * _tmp645 * _tmp649 - matches_0_14_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp651 = _tmp58 * _tmp639;
  const Scalar _tmp652 = _tmp54 * _tmp638;
  const Scalar _tmp653 = -_tmp51 * _tmp640 + _tmp651 + _tmp652;
  const Scalar _tmp654 =
      _tmp225 * _tmp645 * _tmp653 - matches_0_14_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp655 = std::pow(_tmp650, Scalar(2)) + std::pow(_tmp654, Scalar(2)) + epsilon;
  const Scalar _tmp656 = std::pow(_tmp655, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp657 = std::sqrt(matches_0_14_weight);
  const Scalar _tmp658 = _tmp192 * _tmp655 + 1;
  const Scalar _tmp659 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp658, _tmp196) - 1)));
  const Scalar _tmp660 = std::max<Scalar>(0, (((_tmp642) > 0) - ((_tmp642) < 0)));
  const Scalar _tmp661 = _tmp657 * _tmp659 * _tmp660;
  const Scalar _tmp662 = _tmp656 * _tmp661;
  const Scalar _tmp663 = _tmp650 * _tmp662;
  const Scalar _tmp664 = _tmp654 * _tmp662;
  const Scalar _tmp665 = _tmp146 + matches_0_15_source_coords(1, 0);
  const Scalar _tmp666 = _tmp143 + matches_0_15_source_coords(0, 0);
  const Scalar _tmp667 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp666, Scalar(2)) + _tmp148 * std::pow(_tmp665, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp668 = _tmp666 * _tmp667;
  const Scalar _tmp669 = _tmp665 * _tmp667;
  const Scalar _tmp670 =
      _tmp164 * _tmp667 - _tmp165 * _tmp668 - _tmp166 * _tmp669 + _tmp167 * landmarks_15_;
  const Scalar _tmp671 =
      _tmp159 * _tmp667 - _tmp160 * _tmp669 + _tmp161 * _tmp668 + _tmp162 * landmarks_15_;
  const Scalar _tmp672 = _tmp125 * _tmp671;
  const Scalar _tmp673 =
      -_tmp150 * _tmp667 + _tmp152 * _tmp668 + _tmp155 * _tmp669 + _tmp157 * landmarks_15_;
  const Scalar _tmp674 = _tmp123 * _tmp673;
  const Scalar _tmp675 = _tmp672 + _tmp674;
  const Scalar _tmp676 = -_tmp122 * _tmp670 + _tmp675;
  const Scalar _tmp677 = _tmp112 * _tmp671 - _tmp116 * _tmp670;
  const Scalar _tmp678 = _tmp111 * _tmp673 + _tmp677;
  const Scalar _tmp679 = -2 * _tmp678;
  const Scalar _tmp680 = std::max<Scalar>(_tmp679, epsilon);
  const Scalar _tmp681 = Scalar(1.0) / (_tmp680);
  const Scalar _tmp682 = _tmp681 * views_1_calibration(0, 0);
  const Scalar _tmp683 =
      2 * _tmp676 * _tmp682 - matches_0_15_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp684 = _tmp54 * _tmp673;
  const Scalar _tmp685 = _tmp58 * _tmp670;
  const Scalar _tmp686 = _tmp51 * _tmp671 - _tmp684 - _tmp685;
  const Scalar _tmp687 =
      -_tmp225 * _tmp681 * _tmp686 - matches_0_15_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp688 = std::pow(_tmp683, Scalar(2)) + std::pow(_tmp687, Scalar(2)) + epsilon;
  const Scalar _tmp689 = std::pow(_tmp688, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp690 = _tmp192 * _tmp688 + 1;
  const Scalar _tmp691 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp690, _tmp196) - 1)));
  const Scalar _tmp692 = std::sqrt(matches_0_15_weight);
  const Scalar _tmp693 = std::max<Scalar>(0, -(((_tmp678) > 0) - ((_tmp678) < 0)));
  const Scalar _tmp694 = _tmp691 * _tmp692 * _tmp693;
  const Scalar _tmp695 = _tmp689 * _tmp694;
  const Scalar _tmp696 = _tmp683 * _tmp695;
  const Scalar _tmp697 = _tmp687 * _tmp695;
  const Scalar _tmp698 = _tmp146 + matches_0_16_source_coords(1, 0);
  const Scalar _tmp699 = _tmp143 + matches_0_16_source_coords(0, 0);
  const Scalar _tmp700 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp699, Scalar(2)) + _tmp148 * std::pow(_tmp698, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp701 = _tmp698 * _tmp700;
  const Scalar _tmp702 = _tmp699 * _tmp700;
  const Scalar _tmp703 =
      -_tmp150 * _tmp700 + _tmp152 * _tmp702 + _tmp155 * _tmp701 + _tmp157 * landmarks_16_;
  const Scalar _tmp704 =
      _tmp159 * _tmp700 - _tmp160 * _tmp701 + _tmp161 * _tmp702 + _tmp162 * landmarks_16_;
  const Scalar _tmp705 =
      _tmp164 * _tmp700 - _tmp165 * _tmp702 - _tmp166 * _tmp701 + _tmp167 * landmarks_16_;
  const Scalar _tmp706 = _tmp112 * _tmp704 - _tmp116 * _tmp705;
  const Scalar _tmp707 = _tmp111 * _tmp703 + _tmp706;
  const Scalar _tmp708 = -2 * _tmp707;
  const Scalar _tmp709 = std::max<Scalar>(_tmp708, epsilon);
  const Scalar _tmp710 = Scalar(1.0) / (_tmp709);
  const Scalar _tmp711 = _tmp125 * _tmp704;
  const Scalar _tmp712 = _tmp123 * _tmp703;
  const Scalar _tmp713 = _tmp711 + _tmp712;
  const Scalar _tmp714 = -_tmp122 * _tmp705 + _tmp713;
  const Scalar _tmp715 =
      _tmp178 * _tmp710 * _tmp714 - matches_0_16_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp716 = _tmp58 * _tmp705;
  const Scalar _tmp717 = _tmp54 * _tmp703;
  const Scalar _tmp718 = _tmp51 * _tmp704 - _tmp716 - _tmp717;
  const Scalar _tmp719 =
      -_tmp225 * _tmp710 * _tmp718 - matches_0_16_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp720 = std::pow(_tmp715, Scalar(2)) + std::pow(_tmp719, Scalar(2)) + epsilon;
  const Scalar _tmp721 = std::pow(_tmp720, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp722 = std::max<Scalar>(0, -(((_tmp707) > 0) - ((_tmp707) < 0)));
  const Scalar _tmp723 = std::sqrt(matches_0_16_weight);
  const Scalar _tmp724 = _tmp192 * _tmp720 + 1;
  const Scalar _tmp725 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp724, _tmp196) - 1)));
  const Scalar _tmp726 = _tmp722 * _tmp723 * _tmp725;
  const Scalar _tmp727 = _tmp721 * _tmp726;
  const Scalar _tmp728 = _tmp715 * _tmp727;
  const Scalar _tmp729 = _tmp719 * _tmp727;
  const Scalar _tmp730 = _tmp146 + matches_0_17_source_coords(1, 0);
  const Scalar _tmp731 = _tmp143 + matches_0_17_source_coords(0, 0);
  const Scalar _tmp732 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp731, Scalar(2)) + _tmp148 * std::pow(_tmp730, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp733 = _tmp730 * _tmp732;
  const Scalar _tmp734 = _tmp731 * _tmp732;
  const Scalar _tmp735 =
      -_tmp150 * _tmp732 + _tmp152 * _tmp734 + _tmp155 * _tmp733 + _tmp157 * landmarks_17_;
  const Scalar _tmp736 = _tmp123 * _tmp735;
  const Scalar _tmp737 =
      _tmp164 * _tmp732 - _tmp165 * _tmp734 - _tmp166 * _tmp733 + _tmp167 * landmarks_17_;
  const Scalar _tmp738 =
      _tmp159 * _tmp732 - _tmp160 * _tmp733 + _tmp161 * _tmp734 + _tmp162 * landmarks_17_;
  const Scalar _tmp739 = _tmp125 * _tmp738;
  const Scalar _tmp740 = -_tmp122 * _tmp737 + _tmp736 + _tmp739;
  const Scalar _tmp741 = _tmp116 * _tmp737;
  const Scalar _tmp742 = _tmp112 * _tmp738;
  const Scalar _tmp743 = -_tmp741 + _tmp742;
  const Scalar _tmp744 = _tmp111 * _tmp735 + _tmp743;
  const Scalar _tmp745 = -2 * _tmp744;
  const Scalar _tmp746 = std::max<Scalar>(_tmp745, epsilon);
  const Scalar _tmp747 = Scalar(1.0) / (_tmp746);
  const Scalar _tmp748 = _tmp747 * views_1_calibration(0, 0);
  const Scalar _tmp749 =
      2 * _tmp740 * _tmp748 - matches_0_17_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp750 = _tmp54 * _tmp735 + _tmp58 * _tmp737;
  const Scalar _tmp751 = -_tmp51 * _tmp738 + _tmp750;
  const Scalar _tmp752 = _tmp747 * views_1_calibration(1, 0);
  const Scalar _tmp753 =
      2 * _tmp751 * _tmp752 - matches_0_17_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp754 = std::pow(_tmp749, Scalar(2)) + std::pow(_tmp753, Scalar(2)) + epsilon;
  const Scalar _tmp755 = std::pow(_tmp754, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp756 = std::sqrt(matches_0_17_weight);
  const Scalar _tmp757 = _tmp192 * _tmp754 + 1;
  const Scalar _tmp758 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp757, _tmp196) - 1)));
  const Scalar _tmp759 = std::max<Scalar>(0, -(((_tmp744) > 0) - ((_tmp744) < 0)));
  const Scalar _tmp760 = _tmp756 * _tmp758 * _tmp759;
  const Scalar _tmp761 = _tmp755 * _tmp760;
  const Scalar _tmp762 = _tmp749 * _tmp761;
  const Scalar _tmp763 = _tmp753 * _tmp761;
  const Scalar _tmp764 = _tmp146 + matches_0_18_source_coords(1, 0);
  const Scalar _tmp765 = _tmp143 + matches_0_18_source_coords(0, 0);
  const Scalar _tmp766 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp765, Scalar(2)) + _tmp148 * std::pow(_tmp764, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp767 = _tmp764 * _tmp766;
  const Scalar _tmp768 = _tmp765 * _tmp766;
  const Scalar _tmp769 =
      -_tmp150 * _tmp766 + _tmp152 * _tmp768 + _tmp155 * _tmp767 + _tmp157 * landmarks_18_;
  const Scalar _tmp770 = _tmp123 * _tmp769;
  const Scalar _tmp771 =
      _tmp159 * _tmp766 - _tmp160 * _tmp767 + _tmp161 * _tmp768 + _tmp162 * landmarks_18_;
  const Scalar _tmp772 = _tmp125 * _tmp771;
  const Scalar _tmp773 =
      _tmp164 * _tmp766 - _tmp165 * _tmp768 - _tmp166 * _tmp767 + _tmp167 * landmarks_18_;
  const Scalar _tmp774 = -_tmp122 * _tmp773 + _tmp770 + _tmp772;
  const Scalar _tmp775 = _tmp112 * _tmp771;
  const Scalar _tmp776 = _tmp116 * _tmp773;
  const Scalar _tmp777 = _tmp775 - _tmp776;
  const Scalar _tmp778 = _tmp111 * _tmp769 + _tmp777;
  const Scalar _tmp779 = -2 * _tmp778;
  const Scalar _tmp780 = std::max<Scalar>(_tmp779, epsilon);
  const Scalar _tmp781 = Scalar(1.0) / (_tmp780);
  const Scalar _tmp782 = _tmp781 * views_1_calibration(0, 0);
  const Scalar _tmp783 =
      2 * _tmp774 * _tmp782 - matches_0_18_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp784 = _tmp54 * _tmp769 + _tmp58 * _tmp773;
  const Scalar _tmp785 = -_tmp51 * _tmp771 + _tmp784;
  const Scalar _tmp786 = _tmp781 * views_1_calibration(1, 0);
  const Scalar _tmp787 =
      2 * _tmp785 * _tmp786 - matches_0_18_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp788 = std::pow(_tmp783, Scalar(2)) + std::pow(_tmp787, Scalar(2)) + epsilon;
  const Scalar _tmp789 = std::pow(_tmp788, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp790 = _tmp192 * _tmp788 + 1;
  const Scalar _tmp791 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp790, _tmp196) - 1)));
  const Scalar _tmp792 = std::sqrt(matches_0_18_weight);
  const Scalar _tmp793 = std::max<Scalar>(0, -(((_tmp778) > 0) - ((_tmp778) < 0)));
  const Scalar _tmp794 = _tmp791 * _tmp792 * _tmp793;
  const Scalar _tmp795 = _tmp789 * _tmp794;
  const Scalar _tmp796 = _tmp783 * _tmp795;
  const Scalar _tmp797 = _tmp787 * _tmp795;
  const Scalar _tmp798 = _tmp146 + matches_0_19_source_coords(1, 0);
  const Scalar _tmp799 = _tmp143 + matches_0_19_source_coords(0, 0);
  const Scalar _tmp800 = std::pow(
      Scalar(_tmp145 * std::pow(_tmp799, Scalar(2)) + _tmp148 * std::pow(_tmp798, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp801 = _tmp798 * _tmp800;
  const Scalar _tmp802 = _tmp799 * _tmp800;
  const Scalar _tmp803 =
      -_tmp150 * _tmp800 + _tmp152 * _tmp802 + _tmp155 * _tmp801 + _tmp157 * landmarks_19_;
  const Scalar _tmp804 = _tmp123 * _tmp803;
  const Scalar _tmp805 =
      _tmp164 * _tmp800 - _tmp165 * _tmp802 - _tmp166 * _tmp801 + _tmp167 * landmarks_19_;
  const Scalar _tmp806 =
      _tmp159 * _tmp800 - _tmp160 * _tmp801 + _tmp161 * _tmp802 + _tmp162 * landmarks_19_;
  const Scalar _tmp807 = _tmp125 * _tmp806;
  const Scalar _tmp808 = -_tmp122 * _tmp805 + _tmp804 + _tmp807;
  const Scalar _tmp809 = _tmp116 * _tmp805;
  const Scalar _tmp810 = _tmp112 * _tmp806;
  const Scalar _tmp811 = -_tmp809 + _tmp810;
  const Scalar _tmp812 = _tmp111 * _tmp803 + _tmp811;
  const Scalar _tmp813 = -2 * _tmp812;
  const Scalar _tmp814 = std::max<Scalar>(_tmp813, epsilon);
  const Scalar _tmp815 = Scalar(1.0) / (_tmp814);
  const Scalar _tmp816 = _tmp815 * views_1_calibration(0, 0);
  const Scalar _tmp817 =
      2 * _tmp808 * _tmp816 - matches_0_19_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp818 = _tmp54 * _tmp803 + _tmp58 * _tmp805;
  const Scalar _tmp819 = -_tmp51 * _tmp806 + _tmp818;
  const Scalar _tmp820 = _tmp815 * views_1_calibration(1, 0);
  const Scalar _tmp821 =
      2 * _tmp819 * _tmp820 - matches_0_19_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp822 = std::pow(_tmp817, Scalar(2)) + std::pow(_tmp821, Scalar(2)) + epsilon;
  const Scalar _tmp823 = std::pow(_tmp822, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp824 = std::max<Scalar>(0, -(((_tmp812) > 0) - ((_tmp812) < 0)));
  const Scalar _tmp825 = std::sqrt(matches_0_19_weight);
  const Scalar _tmp826 = _tmp192 * _tmp822 + 1;
  const Scalar _tmp827 = std::sqrt(Scalar(_tmp197 * (std::pow(_tmp826, _tmp196) - 1)));
  const Scalar _tmp828 = _tmp824 * _tmp825 * _tmp827;
  const Scalar _tmp829 = _tmp823 * _tmp828;
  const Scalar _tmp830 = _tmp817 * _tmp829;
  const Scalar _tmp831 = _tmp821 * _tmp829;
  const Scalar _tmp832 = -landmarks_0_ + matches_0_0_inverse_range_prior;
  const Scalar _tmp833 = epsilon + matches_0_0_inverse_range_prior_sigma;
  const Scalar _tmp834 = matches_0_0_weight / _tmp833;
  const Scalar _tmp835 = -landmarks_1_ + matches_0_1_inverse_range_prior;
  const Scalar _tmp836 = epsilon + matches_0_1_inverse_range_prior_sigma;
  const Scalar _tmp837 = matches_0_1_weight / _tmp836;
  const Scalar _tmp838 = -landmarks_2_ + matches_0_2_inverse_range_prior;
  const Scalar _tmp839 = epsilon + matches_0_2_inverse_range_prior_sigma;
  const Scalar _tmp840 = matches_0_2_weight / _tmp839;
  const Scalar _tmp841 = -landmarks_3_ + matches_0_3_inverse_range_prior;
  const Scalar _tmp842 = epsilon + matches_0_3_inverse_range_prior_sigma;
  const Scalar _tmp843 = matches_0_3_weight / _tmp842;
  const Scalar _tmp844 = -landmarks_4_ + matches_0_4_inverse_range_prior;
  const Scalar _tmp845 = epsilon + matches_0_4_inverse_range_prior_sigma;
  const Scalar _tmp846 = matches_0_4_weight / _tmp845;
  const Scalar _tmp847 = -landmarks_5_ + matches_0_5_inverse_range_prior;
  const Scalar _tmp848 = epsilon + matches_0_5_inverse_range_prior_sigma;
  const Scalar _tmp849 = matches_0_5_weight / _tmp848;
  const Scalar _tmp850 = -landmarks_6_ + matches_0_6_inverse_range_prior;
  const Scalar _tmp851 = epsilon + matches_0_6_inverse_range_prior_sigma;
  const Scalar _tmp852 = matches_0_6_weight / _tmp851;
  const Scalar _tmp853 = -landmarks_7_ + matches_0_7_inverse_range_prior;
  const Scalar _tmp854 = epsilon + matches_0_7_inverse_range_prior_sigma;
  const Scalar _tmp855 = matches_0_7_weight / _tmp854;
  const Scalar _tmp856 = -landmarks_8_ + matches_0_8_inverse_range_prior;
  const Scalar _tmp857 = epsilon + matches_0_8_inverse_range_prior_sigma;
  const Scalar _tmp858 = matches_0_8_weight / _tmp857;
  const Scalar _tmp859 = -landmarks_9_ + matches_0_9_inverse_range_prior;
  const Scalar _tmp860 = epsilon + matches_0_9_inverse_range_prior_sigma;
  const Scalar _tmp861 = matches_0_9_weight / _tmp860;
  const Scalar _tmp862 = -landmarks_10_ + matches_0_10_inverse_range_prior;
  const Scalar _tmp863 = epsilon + matches_0_10_inverse_range_prior_sigma;
  const Scalar _tmp864 = matches_0_10_weight / _tmp863;
  const Scalar _tmp865 = -landmarks_11_ + matches_0_11_inverse_range_prior;
  const Scalar _tmp866 = epsilon + matches_0_11_inverse_range_prior_sigma;
  const Scalar _tmp867 = matches_0_11_weight / _tmp866;
  const Scalar _tmp868 = -landmarks_12_ + matches_0_12_inverse_range_prior;
  const Scalar _tmp869 = epsilon + matches_0_12_inverse_range_prior_sigma;
  const Scalar _tmp870 = matches_0_12_weight / _tmp869;
  const Scalar _tmp871 = -landmarks_13_ + matches_0_13_inverse_range_prior;
  const Scalar _tmp872 = epsilon + matches_0_13_inverse_range_prior_sigma;
  const Scalar _tmp873 = matches_0_13_weight / _tmp872;
  const Scalar _tmp874 = -landmarks_14_ + matches_0_14_inverse_range_prior;
  const Scalar _tmp875 = epsilon + matches_0_14_inverse_range_prior_sigma;
  const Scalar _tmp876 = matches_0_14_weight / _tmp875;
  const Scalar _tmp877 = -landmarks_15_ + matches_0_15_inverse_range_prior;
  const Scalar _tmp878 = epsilon + matches_0_15_inverse_range_prior_sigma;
  const Scalar _tmp879 = matches_0_15_weight / _tmp878;
  const Scalar _tmp880 = -landmarks_16_ + matches_0_16_inverse_range_prior;
  const Scalar _tmp881 = epsilon + matches_0_16_inverse_range_prior_sigma;
  const Scalar _tmp882 = matches_0_16_weight / _tmp881;
  const Scalar _tmp883 = -landmarks_17_ + matches_0_17_inverse_range_prior;
  const Scalar _tmp884 = epsilon + matches_0_17_inverse_range_prior_sigma;
  const Scalar _tmp885 = matches_0_17_weight / _tmp884;
  const Scalar _tmp886 = -landmarks_18_ + matches_0_18_inverse_range_prior;
  const Scalar _tmp887 = epsilon + matches_0_18_inverse_range_prior_sigma;
  const Scalar _tmp888 = matches_0_18_weight / _tmp887;
  const Scalar _tmp889 = -landmarks_19_ + matches_0_19_inverse_range_prior;
  const Scalar _tmp890 = epsilon + matches_0_19_inverse_range_prior_sigma;
  const Scalar _tmp891 = matches_0_19_weight / _tmp890;
  const Scalar _tmp892 = _tmp429 / (_tmp423 * std::sqrt(_tmp423));
  const Scalar _tmp893 = std::pow(_views_1_pose[3], Scalar(2));
  const Scalar _tmp894 = -_tmp893;
  const Scalar _tmp895 = -_tmp109;
  const Scalar _tmp896 = _tmp50 + _tmp894 + _tmp895;
  const Scalar _tmp897 = (Scalar(1) / Scalar(2)) * _tmp896;
  const Scalar _tmp898 = -_tmp407 * _tmp897 + _tmp419 + _tmp420;
  const Scalar _tmp899 =
      ((((_tmp189 + _tmp411) > 0) - ((_tmp189 + _tmp411) < 0)) + 1) / std::pow(_tmp412, Scalar(2));
  const Scalar _tmp900 = _tmp421 * _tmp899;
  const Scalar _tmp901 = _tmp900 * views_1_calibration(1, 0);
  const Scalar _tmp902 = -_tmp48 + _tmp49;
  const Scalar _tmp903 = _tmp109 + _tmp894 + _tmp902;
  const Scalar _tmp904 = (Scalar(1) / Scalar(2)) * _tmp903;
  const Scalar _tmp905 = _tmp413 * (_tmp406 * _tmp904 + _tmp409);
  const Scalar _tmp906 = _tmp898 * _tmp901 + _tmp905 * views_1_calibration(1, 0);
  const Scalar _tmp907 = _tmp898 * views_1_calibration(0, 0);
  const Scalar _tmp908 = _tmp418 * _tmp907;
  const Scalar _tmp909 = _tmp417 * _tmp899;
  const Scalar _tmp910 = _tmp422 * _tmp906 - _tmp908 * _tmp909;
  const Scalar _tmp911 = _tmp422 * _tmp910;
  const Scalar _tmp912 = (Scalar(1) / Scalar(2)) * _tmp195 - 1;
  const Scalar _tmp913 =
      _tmp188 * _tmp424 * _tmp425 * _tmp426 * std::pow(_tmp427, _tmp912) / _tmp428;
  const Scalar _tmp914 = -_tmp430 * _tmp906 + _tmp892 * _tmp911 - _tmp911 * _tmp913;
  const Scalar _tmp915 = 2 * _tmp914;
  const Scalar _tmp916 = -_tmp771 * _tmp897 + _tmp784;
  const Scalar _tmp917 = _tmp783 * _tmp916;
  const Scalar _tmp918 =
      ((((_tmp189 + _tmp779) > 0) - ((_tmp189 + _tmp779) < 0)) + 1) / std::pow(_tmp780, Scalar(2));
  const Scalar _tmp919 = _tmp774 * _tmp918;
  const Scalar _tmp920 = _tmp919 * views_1_calibration(0, 0);
  const Scalar _tmp921 = _tmp769 * _tmp904;
  const Scalar _tmp922 = _tmp785 * _tmp918;
  const Scalar _tmp923 = _tmp922 * views_1_calibration(1, 0);
  const Scalar _tmp924 = _tmp786 * (-_tmp775 + _tmp776 - _tmp921) + _tmp916 * _tmp923;
  const Scalar _tmp925 = _tmp787 * _tmp924 + _tmp917 * _tmp920;
  const Scalar _tmp926 = _tmp787 * _tmp925;
  const Scalar _tmp927 =
      _tmp188 * _tmp789 * std::pow(_tmp790, _tmp912) * _tmp792 * _tmp793 / _tmp791;
  const Scalar _tmp928 = _tmp794 / (_tmp788 * std::sqrt(_tmp788));
  const Scalar _tmp929 = _tmp795 * _tmp924 + _tmp926 * _tmp927 - _tmp926 * _tmp928;
  const Scalar _tmp930 = 2 * _tmp929;
  const Scalar _tmp931 =
      ((((_tmp189 + _tmp745) > 0) - ((_tmp189 + _tmp745) < 0)) + 1) / std::pow(_tmp746, Scalar(2));
  const Scalar _tmp932 = _tmp740 * _tmp931;
  const Scalar _tmp933 = _tmp932 * views_1_calibration(0, 0);
  const Scalar _tmp934 = -_tmp738 * _tmp897 + _tmp750;
  const Scalar _tmp935 = _tmp761 * _tmp934;
  const Scalar _tmp936 = _tmp751 * _tmp931;
  const Scalar _tmp937 = _tmp936 * views_1_calibration(1, 0);
  const Scalar _tmp938 = _tmp735 * _tmp904;
  const Scalar _tmp939 = _tmp752 * (_tmp741 - _tmp742 - _tmp938) + _tmp934 * _tmp937;
  const Scalar _tmp940 = _tmp749 * _tmp934;
  const Scalar _tmp941 = _tmp753 * _tmp939 + _tmp933 * _tmp940;
  const Scalar _tmp942 = _tmp760 / (_tmp754 * std::sqrt(_tmp754));
  const Scalar _tmp943 = _tmp749 * _tmp942;
  const Scalar _tmp944 =
      _tmp188 * _tmp755 * _tmp756 * std::pow(_tmp757, _tmp912) * _tmp759 / _tmp758;
  const Scalar _tmp945 = _tmp749 * _tmp944;
  const Scalar _tmp946 = _tmp933 * _tmp935 - _tmp941 * _tmp943 + _tmp941 * _tmp945;
  const Scalar _tmp947 = 2 * _tmp946;
  const Scalar _tmp948 = _tmp418 * _tmp913;
  const Scalar _tmp949 = _tmp418 * _tmp892;
  const Scalar _tmp950 = _tmp430 * _tmp907;
  const Scalar _tmp951 = -_tmp909 * _tmp950 + _tmp910 * _tmp948 - _tmp910 * _tmp949;
  const Scalar _tmp952 = 2 * _tmp951;
  const Scalar _tmp953 = _tmp79 + _tmp80;
  const Scalar _tmp954 = _tmp76 + _tmp78 + _tmp953;
  const Scalar _tmp955 = 2 * _tmp88;
  const Scalar _tmp956 = _tmp74 * _tmp955;
  const Scalar _tmp957 = _tmp954 * _tmp956;
  const Scalar _tmp958 = _tmp73 * ((((_tmp8 + _tmp83) > 0) - ((_tmp8 + _tmp83) < 0)) - 1);
  const Scalar _tmp959 = _tmp958 / _tmp85;
  const Scalar _tmp960 = _tmp74 * _tmp959;
  const Scalar _tmp961 = -_tmp91;
  const Scalar _tmp962 = _tmp94 + _tmp95;
  const Scalar _tmp963 = _tmp93 + _tmp961 + _tmp962;
  const Scalar _tmp964 = _tmp106 * _tmp963;
  const Scalar _tmp965 = _tmp960 * _tmp964;
  const Scalar _tmp966 = -_tmp102;
  const Scalar _tmp967 = _tmp103 + _tmp104;
  const Scalar _tmp968 = _tmp101 + _tmp966 + _tmp967;
  const Scalar _tmp969 = _tmp956 * _tmp968;
  const Scalar _tmp970 = _tmp82 * _tmp963;
  const Scalar _tmp971 = _tmp84 * _tmp87 * _tmp958 / (_tmp86 * std::sqrt(_tmp86));
  const Scalar _tmp972 = _tmp74 * _tmp971;
  const Scalar _tmp973 = _tmp970 * _tmp972;
  const Scalar _tmp974 = _tmp964 * _tmp972;
  const Scalar _tmp975 = _tmp963 * _tmp97;
  const Scalar _tmp976 = _tmp972 * _tmp975;
  const Scalar _tmp977 = -_tmp67;
  const Scalar _tmp978 = _tmp69 - _tmp70;
  const Scalar _tmp979 = _tmp68 + _tmp977 + _tmp978;
  const Scalar _tmp980 = _tmp956 * _tmp979;
  const Scalar _tmp981 = 2 * _tmp113;
  const Scalar _tmp982 = 2 * _tmp117;
  const Scalar _tmp983 = _tmp903 * _views_1_pose[6];
  const Scalar _tmp984 = _tmp903 * _views_0_pose[6];
  const Scalar _tmp985 = _tmp120 + _tmp981 - _tmp982 + _tmp983 - _tmp984;
  const Scalar _tmp986 = 2 * _tmp55;
  const Scalar _tmp987 = 2 * _tmp59;
  const Scalar _tmp988 = _tmp896 * _views_1_pose[5];
  const Scalar _tmp989 = _tmp896 * _views_0_pose[5];
  const Scalar _tmp990 = -_tmp62 - _tmp64 + _tmp986 + _tmp987 - _tmp988 + _tmp989;
  const Scalar _tmp991 = _tmp960 * _tmp975;
  const Scalar _tmp992 = _tmp960 * _tmp970;
  const Scalar _tmp993 =
      -_tmp957 * priors_1_0_sqrt_info(1, 2) - _tmp965 * priors_1_0_sqrt_info(1, 2) +
      _tmp969 * priors_1_0_sqrt_info(1, 1) - _tmp973 * priors_1_0_sqrt_info(1, 1) -
      _tmp974 * priors_1_0_sqrt_info(1, 2) + _tmp976 * priors_1_0_sqrt_info(1, 0) +
      _tmp980 * priors_1_0_sqrt_info(1, 0) + _tmp985 * priors_1_0_sqrt_info(1, 4) +
      _tmp990 * priors_1_0_sqrt_info(1, 5) + _tmp991 * priors_1_0_sqrt_info(1, 0) -
      _tmp992 * priors_1_0_sqrt_info(1, 1);
  const Scalar _tmp994 = _tmp795 * _tmp916;
  const Scalar _tmp995 = _tmp783 * _tmp928;
  const Scalar _tmp996 = _tmp783 * _tmp927;
  const Scalar _tmp997 = _tmp920 * _tmp994 - _tmp925 * _tmp995 + _tmp925 * _tmp996;
  const Scalar _tmp998 = 2 * _tmp997;
  const Scalar _tmp999 = _tmp376 * _tmp897 - _tmp387 - _tmp388;
  const Scalar _tmp1000 =
      ((((_tmp189 + _tmp379) > 0) - ((_tmp189 + _tmp379) < 0)) + 1) / std::pow(_tmp380, Scalar(2));
  const Scalar _tmp1001 = _tmp1000 * _tmp389;
  const Scalar _tmp1002 = _tmp1001 * views_1_calibration(1, 0);
  const Scalar _tmp1003 = _tmp381 * (-_tmp374 * _tmp904 + _tmp377);
  const Scalar _tmp1004 = _tmp1002 * _tmp999 - _tmp1003 * views_1_calibration(1, 0);
  const Scalar _tmp1005 = _tmp999 * views_1_calibration(0, 0);
  const Scalar _tmp1006 = _tmp1005 * _tmp386;
  const Scalar _tmp1007 = _tmp1000 * _tmp385;
  const Scalar _tmp1008 = _tmp1004 * _tmp390 - _tmp1006 * _tmp1007;
  const Scalar _tmp1009 = _tmp1008 * _tmp390;
  const Scalar _tmp1010 =
      _tmp188 * _tmp392 * _tmp393 * _tmp394 * std::pow(_tmp395, _tmp912) / _tmp396;
  const Scalar _tmp1011 = _tmp397 / (_tmp391 * std::sqrt(_tmp391));
  const Scalar _tmp1012 = _tmp1004 * _tmp398 + _tmp1009 * _tmp1010 - _tmp1009 * _tmp1011;
  const Scalar _tmp1013 = 2 * _tmp1012;
  const Scalar _tmp1014 = _tmp74 * priors_1_0_sqrt_info(3, 1);
  const Scalar _tmp1015 = _tmp955 * _tmp968;
  const Scalar _tmp1016 = _tmp1014 * _tmp971;
  const Scalar _tmp1017 = _tmp959 * _tmp970;
  const Scalar _tmp1018 =
      _tmp1014 * _tmp1015 - _tmp1014 * _tmp1017 - _tmp1016 * _tmp970 -
      _tmp957 * priors_1_0_sqrt_info(3, 2) - _tmp965 * priors_1_0_sqrt_info(3, 2) -
      _tmp974 * priors_1_0_sqrt_info(3, 2) + _tmp976 * priors_1_0_sqrt_info(3, 0) +
      _tmp980 * priors_1_0_sqrt_info(3, 0) + _tmp985 * priors_1_0_sqrt_info(3, 4) +
      _tmp990 * priors_1_0_sqrt_info(3, 5) + _tmp991 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1019 = _tmp803 * _tmp904;
  const Scalar _tmp1020 = -_tmp806 * _tmp897 + _tmp818;
  const Scalar _tmp1021 =
      ((((_tmp189 + _tmp813) > 0) - ((_tmp189 + _tmp813) < 0)) + 1) / std::pow(_tmp814, Scalar(2));
  const Scalar _tmp1022 = _tmp1021 * _tmp819;
  const Scalar _tmp1023 = _tmp1022 * views_1_calibration(1, 0);
  const Scalar _tmp1024 = _tmp1020 * _tmp1023 + _tmp820 * (-_tmp1019 + _tmp809 - _tmp810);
  const Scalar _tmp1025 = _tmp1020 * _tmp817;
  const Scalar _tmp1026 = _tmp1021 * _tmp808;
  const Scalar _tmp1027 = _tmp1026 * views_1_calibration(0, 0);
  const Scalar _tmp1028 = _tmp1024 * _tmp821 + _tmp1025 * _tmp1027;
  const Scalar _tmp1029 =
      _tmp188 * _tmp823 * _tmp824 * _tmp825 * std::pow(_tmp826, _tmp912) / _tmp827;
  const Scalar _tmp1030 = _tmp1029 * _tmp821;
  const Scalar _tmp1031 = _tmp828 / (_tmp822 * std::sqrt(_tmp822));
  const Scalar _tmp1032 = _tmp1031 * _tmp821;
  const Scalar _tmp1033 = _tmp1024 * _tmp829 + _tmp1028 * _tmp1030 - _tmp1028 * _tmp1032;
  const Scalar _tmp1034 = 2 * _tmp1033;
  const Scalar _tmp1035 = _tmp470 * _tmp904;
  const Scalar _tmp1036 = -_tmp472 * _tmp897 + _tmp485;
  const Scalar _tmp1037 =
      ((((_tmp189 + _tmp480) > 0) - ((_tmp189 + _tmp480) < 0)) + 1) / std::pow(_tmp481, Scalar(2));
  const Scalar _tmp1038 = _tmp1036 * _tmp1037;
  const Scalar _tmp1039 = _tmp486 * views_1_calibration(1, 0);
  const Scalar _tmp1040 = _tmp1038 * _tmp1039 + _tmp487 * (-_tmp1035 - _tmp476 + _tmp477);
  const Scalar _tmp1041 = _tmp1036 * _tmp484;
  const Scalar _tmp1042 = _tmp1037 * _tmp475;
  const Scalar _tmp1043 = _tmp1042 * views_1_calibration(0, 0);
  const Scalar _tmp1044 = _tmp1040 * _tmp488 + _tmp1041 * _tmp1043;
  const Scalar _tmp1045 = _tmp495 / (_tmp489 * std::sqrt(_tmp489));
  const Scalar _tmp1046 = _tmp1045 * _tmp488;
  const Scalar _tmp1047 =
      _tmp188 * _tmp490 * _tmp491 * _tmp492 * std::pow(_tmp493, _tmp912) / _tmp494;
  const Scalar _tmp1048 = _tmp1047 * _tmp488;
  const Scalar _tmp1049 = _tmp1040 * _tmp496 - _tmp1044 * _tmp1046 + _tmp1044 * _tmp1048;
  const Scalar _tmp1050 = 2 * _tmp1049;
  const Scalar _tmp1051 = _tmp1020 * _tmp829;
  const Scalar _tmp1052 = _tmp1031 * _tmp817;
  const Scalar _tmp1053 = _tmp1029 * _tmp817;
  const Scalar _tmp1054 = _tmp1027 * _tmp1051 - _tmp1028 * _tmp1052 + _tmp1028 * _tmp1053;
  const Scalar _tmp1055 = 2 * _tmp1054;
  const Scalar _tmp1056 = _tmp5 + _tmp6;
  const Scalar _tmp1057 = (((_tmp1056) > 0) - ((_tmp1056) < 0));
  const Scalar _tmp1058 = std::min<Scalar>(0, -_tmp1057) + Scalar(1) / Scalar(2);
  const Scalar _tmp1059 = std::fabs(_tmp1056);
  const Scalar _tmp1060 = std::min<Scalar>(_tmp1059, _tmp9);
  const Scalar _tmp1061 = std::pow(_tmp1060, Scalar(2)) - 1;
  const Scalar _tmp1062 = _tmp1057 * ((((_tmp1059 + _tmp8) > 0) - ((_tmp1059 + _tmp8) < 0)) - 1);
  const Scalar _tmp1063 = _tmp1062 / _tmp1061;
  const Scalar _tmp1064 = _tmp1063 * _tmp13;
  const Scalar _tmp1065 = _tmp1064 * _tmp15;
  const Scalar _tmp1066 = _tmp1058 * _tmp1065;
  const Scalar _tmp1067 = std::pow(_tmp15, Scalar(2));
  const Scalar _tmp1068 = std::acos(_tmp1060);
  const Scalar _tmp1069 = -_tmp1061;
  const Scalar _tmp1070 = _tmp1060 * _tmp1062 / (_tmp1069 * std::sqrt(_tmp1069));
  const Scalar _tmp1071 = _tmp1068 * _tmp1070;
  const Scalar _tmp1072 = _tmp1058 * _tmp1071;
  const Scalar _tmp1073 = _tmp1067 * _tmp1072;
  const Scalar _tmp1074 = 2 / std::sqrt(_tmp1069);
  const Scalar _tmp1075 = _tmp1068 * _tmp1074;
  const Scalar _tmp1076 = _tmp1075 * _tmp13;
  const Scalar _tmp1077 = _tmp1058 * _tmp1076;
  const Scalar _tmp1078 = _tmp13 * _tmp15;
  const Scalar _tmp1079 = _tmp1072 * _tmp1078;
  const Scalar _tmp1080 = _tmp1063 * _tmp1067;
  const Scalar _tmp1081 = _tmp1058 * _tmp1080;
  const Scalar _tmp1082 = _tmp1063 * _tmp4;
  const Scalar _tmp1083 = _tmp1082 * _tmp15;
  const Scalar _tmp1084 = _tmp1058 * _tmp1083;
  const Scalar _tmp1085 = _tmp1075 * _tmp4;
  const Scalar _tmp1086 = _tmp1058 * _tmp1085;
  const Scalar _tmp1087 = _tmp1056 * _tmp1074;
  const Scalar _tmp1088 = _tmp1068 * _tmp1087;
  const Scalar _tmp1089 = _tmp1058 * _tmp1088;
  const Scalar _tmp1090 = _tmp15 * _tmp4;
  const Scalar _tmp1091 = _tmp1072 * _tmp1090;
  const Scalar _tmp1092 =
      _tmp1066 * priors_0_1_sqrt_info(4, 1) - _tmp1073 * priors_0_1_sqrt_info(4, 0) -
      _tmp1077 * priors_0_1_sqrt_info(4, 2) + _tmp1079 * priors_0_1_sqrt_info(4, 1) -
      _tmp1081 * priors_0_1_sqrt_info(4, 0) - _tmp1084 * priors_0_1_sqrt_info(4, 2) -
      _tmp1086 * priors_0_1_sqrt_info(4, 1) - _tmp1089 * priors_0_1_sqrt_info(4, 0) -
      _tmp1091 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp1093 = _tmp1045 * _tmp484;
  const Scalar _tmp1094 = _tmp1047 * _tmp484;
  const Scalar _tmp1095 = _tmp1038 * _tmp475 * _tmp496 * views_1_calibration(0, 0) -
                          _tmp1044 * _tmp1093 + _tmp1044 * _tmp1094;
  const Scalar _tmp1096 = 2 * _tmp1095;
  const Scalar _tmp1097 = _tmp1058 * priors_0_1_sqrt_info(2, 1);
  const Scalar _tmp1098 = _tmp1071 * _tmp1078;
  const Scalar _tmp1099 =
      _tmp1065 * _tmp1097 - _tmp1073 * priors_0_1_sqrt_info(2, 0) -
      _tmp1077 * priors_0_1_sqrt_info(2, 2) - _tmp1081 * priors_0_1_sqrt_info(2, 0) -
      _tmp1084 * priors_0_1_sqrt_info(2, 2) - _tmp1086 * priors_0_1_sqrt_info(2, 1) -
      _tmp1089 * priors_0_1_sqrt_info(2, 0) - _tmp1091 * priors_0_1_sqrt_info(2, 2) +
      _tmp1097 * _tmp1098;
  const Scalar _tmp1100 =
      ((((_tmp189 + _tmp679) > 0) - ((_tmp189 + _tmp679) < 0)) + 1) / std::pow(_tmp680, Scalar(2));
  const Scalar _tmp1101 = _tmp1100 * _tmp676;
  const Scalar _tmp1102 = _tmp1101 * views_1_calibration(0, 0);
  const Scalar _tmp1103 = -_tmp671 * _tmp897 + _tmp684 + _tmp685;
  const Scalar _tmp1104 = _tmp1103 * _tmp695;
  const Scalar _tmp1105 = _tmp681 * (_tmp673 * _tmp904 + _tmp677);
  const Scalar _tmp1106 = _tmp1100 * _tmp686;
  const Scalar _tmp1107 = _tmp1106 * views_1_calibration(1, 0);
  const Scalar _tmp1108 = _tmp1103 * _tmp1107 + _tmp1105 * views_1_calibration(1, 0);
  const Scalar _tmp1109 = _tmp1103 * _tmp683;
  const Scalar _tmp1110 = -_tmp1102 * _tmp1109 + _tmp1108 * _tmp687;
  const Scalar _tmp1111 = _tmp694 / (_tmp688 * std::sqrt(_tmp688));
  const Scalar _tmp1112 = _tmp1111 * _tmp683;
  const Scalar _tmp1113 =
      _tmp188 * _tmp689 * std::pow(_tmp690, _tmp912) * _tmp692 * _tmp693 / _tmp691;
  const Scalar _tmp1114 = _tmp1113 * _tmp683;
  const Scalar _tmp1115 = _tmp1102 * _tmp1104 + _tmp1110 * _tmp1112 - _tmp1110 * _tmp1114;
  const Scalar _tmp1116 = 2 * _tmp1115;
  const Scalar _tmp1117 = _tmp645 * (-_tmp638 * _tmp904 + _tmp641);
  const Scalar _tmp1118 = _tmp640 * _tmp897 - _tmp651 - _tmp652;
  const Scalar _tmp1119 =
      ((((_tmp189 + _tmp643) > 0) - ((_tmp189 + _tmp643) < 0)) + 1) / std::pow(_tmp644, Scalar(2));
  const Scalar _tmp1120 = _tmp1119 * _tmp653;
  const Scalar _tmp1121 = _tmp1120 * views_1_calibration(1, 0);
  const Scalar _tmp1122 = _tmp1117 * views_1_calibration(1, 0) - _tmp1118 * _tmp1121;
  const Scalar _tmp1123 = _tmp1118 * views_1_calibration(0, 0);
  const Scalar _tmp1124 = _tmp1123 * _tmp650;
  const Scalar _tmp1125 = _tmp1119 * _tmp649;
  const Scalar _tmp1126 = _tmp1122 * _tmp654 + _tmp1124 * _tmp1125;
  const Scalar _tmp1127 = _tmp661 / (_tmp655 * std::sqrt(_tmp655));
  const Scalar _tmp1128 = _tmp1127 * _tmp654;
  const Scalar _tmp1129 =
      _tmp188 * _tmp656 * _tmp657 * std::pow(_tmp658, _tmp912) * _tmp660 / _tmp659;
  const Scalar _tmp1130 = _tmp1129 * _tmp654;
  const Scalar _tmp1131 = _tmp1122 * _tmp662 - _tmp1126 * _tmp1128 + _tmp1126 * _tmp1130;
  const Scalar _tmp1132 = 2 * _tmp1131;
  const Scalar _tmp1133 = -_tmp573 * _tmp897 + _tmp585;
  const Scalar _tmp1134 =
      ((((_tmp189 + _tmp580) > 0) - ((_tmp189 + _tmp580) < 0)) + 1) / std::pow(_tmp581, Scalar(2));
  const Scalar _tmp1135 = _tmp1134 * _tmp586;
  const Scalar _tmp1136 = _tmp1135 * views_1_calibration(1, 0);
  const Scalar _tmp1137 = _tmp570 * _tmp904;
  const Scalar _tmp1138 = _tmp1133 * _tmp1136 + _tmp587 * (-_tmp1137 + _tmp576 - _tmp577);
  const Scalar _tmp1139 = _tmp1133 * _tmp584;
  const Scalar _tmp1140 = _tmp1134 * _tmp575;
  const Scalar _tmp1141 = _tmp1140 * views_1_calibration(0, 0);
  const Scalar _tmp1142 = _tmp1138 * _tmp588 + _tmp1139 * _tmp1141;
  const Scalar _tmp1143 = _tmp595 / (_tmp589 * std::sqrt(_tmp589));
  const Scalar _tmp1144 = _tmp1143 * _tmp588;
  const Scalar _tmp1145 =
      _tmp188 * _tmp590 * _tmp591 * _tmp592 * std::pow(_tmp593, _tmp912) / _tmp594;
  const Scalar _tmp1146 = _tmp1145 * _tmp588;
  const Scalar _tmp1147 = _tmp1138 * _tmp596 - _tmp1142 * _tmp1144 + _tmp1142 * _tmp1146;
  const Scalar _tmp1148 = 2 * _tmp1147;
  const Scalar _tmp1149 = -_tmp341 * _tmp897 + _tmp354 + _tmp355;
  const Scalar _tmp1150 = _tmp1149 * _tmp353;
  const Scalar _tmp1151 =
      ((((_tmp189 + _tmp349) > 0) - ((_tmp189 + _tmp349) < 0)) + 1) / std::pow(_tmp350, Scalar(2));
  const Scalar _tmp1152 = _tmp1151 * _tmp346;
  const Scalar _tmp1153 = _tmp1152 * views_1_calibration(0, 0);
  const Scalar _tmp1154 = _tmp351 * (_tmp343 * _tmp904 + _tmp347);
  const Scalar _tmp1155 = _tmp1151 * _tmp356;
  const Scalar _tmp1156 = _tmp1155 * views_1_calibration(1, 0);
  const Scalar _tmp1157 = _tmp1149 * _tmp1156 + _tmp1154 * views_1_calibration(1, 0);
  const Scalar _tmp1158 = _tmp1150 * _tmp1153 - _tmp1157 * _tmp358;
  const Scalar _tmp1159 =
      _tmp188 * _tmp360 * _tmp361 * std::pow(_tmp362, _tmp912) * _tmp364 / _tmp363;
  const Scalar _tmp1160 = _tmp1159 * _tmp353;
  const Scalar _tmp1161 = _tmp365 / (_tmp359 * std::sqrt(_tmp359));
  const Scalar _tmp1162 = _tmp1161 * _tmp353;
  const Scalar _tmp1163 = _tmp1149 * _tmp366;
  const Scalar _tmp1164 = _tmp1153 * _tmp1163 + _tmp1158 * _tmp1160 - _tmp1158 * _tmp1162;
  const Scalar _tmp1165 = 2 * _tmp1164;
  const Scalar _tmp1166 = _tmp753 * _tmp942;
  const Scalar _tmp1167 = _tmp753 * _tmp944;
  const Scalar _tmp1168 = _tmp1166 * _tmp941 - _tmp1167 * _tmp941 - _tmp761 * _tmp939;
  const Scalar _tmp1169 = 2 * _tmp1168;
  const Scalar _tmp1170 = -_tmp163 * _tmp897 + _tmp180 + _tmp181;
  const Scalar _tmp1171 =
      ((((_tmp171 + _tmp189) > 0) - ((_tmp171 + _tmp189) < 0)) + 1) / std::pow(_tmp172, Scalar(2));
  const Scalar _tmp1172 = _tmp1171 * _tmp182;
  const Scalar _tmp1173 = _tmp1172 * views_1_calibration(1, 0);
  const Scalar _tmp1174 = _tmp173 * (_tmp158 * _tmp904 + _tmp169);
  const Scalar _tmp1175 = _tmp1170 * _tmp1173 + _tmp1174 * views_1_calibration(1, 0);
  const Scalar _tmp1176 = _tmp1170 * views_1_calibration(0, 0);
  const Scalar _tmp1177 = _tmp1176 * _tmp179;
  const Scalar _tmp1178 = _tmp1171 * _tmp177;
  const Scalar _tmp1179 = -_tmp1175 * _tmp184 + _tmp1177 * _tmp1178;
  const Scalar _tmp1180 =
      _tmp186 * _tmp187 * _tmp188 * std::pow(_tmp193, _tmp912) * _tmp199 / _tmp198;
  const Scalar _tmp1181 = _tmp1180 * _tmp184;
  const Scalar _tmp1182 = _tmp200 / (_tmp185 * std::sqrt(_tmp185));
  const Scalar _tmp1183 = _tmp1182 * _tmp184;
  const Scalar _tmp1184 = _tmp1175 * _tmp201 - _tmp1179 * _tmp1181 + _tmp1179 * _tmp1183;
  const Scalar _tmp1185 = 2 * _tmp1184;
  const Scalar _tmp1186 = _tmp1058 * priors_0_1_sqrt_info(3, 2);
  const Scalar _tmp1187 = _tmp1058 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp1188 = _tmp1058 * priors_0_1_sqrt_info(3, 0);
  const Scalar _tmp1189 = _tmp1068 * _tmp1188;
  const Scalar _tmp1190 = _tmp1070 * _tmp1189;
  const Scalar _tmp1191 = _tmp1071 * _tmp1090;
  const Scalar _tmp1192 = _tmp1066 * priors_0_1_sqrt_info(3, 1) - _tmp1067 * _tmp1190 -
                          _tmp1076 * _tmp1186 - _tmp1080 * _tmp1188 - _tmp1083 * _tmp1186 -
                          _tmp1086 * priors_0_1_sqrt_info(3, 1) - _tmp1087 * _tmp1189 +
                          _tmp1098 * _tmp1187 - _tmp1186 * _tmp1191;
  const Scalar _tmp1193 = _tmp1161 * _tmp358;
  const Scalar _tmp1194 = _tmp1159 * _tmp358;
  const Scalar _tmp1195 = _tmp1157 * _tmp366 + _tmp1158 * _tmp1193 - _tmp1158 * _tmp1194;
  const Scalar _tmp1196 = 2 * _tmp1195;
  const Scalar _tmp1197 = -_tmp506 * _tmp897 + _tmp519;
  const Scalar _tmp1198 =
      ((((_tmp189 + _tmp514) > 0) - ((_tmp189 + _tmp514) < 0)) + 1) / std::pow(_tmp515, Scalar(2));
  const Scalar _tmp1199 = _tmp1198 * _tmp520;
  const Scalar _tmp1200 = _tmp1199 * views_1_calibration(1, 0);
  const Scalar _tmp1201 = _tmp504 * _tmp904;
  const Scalar _tmp1202 = _tmp1197 * _tmp1200 + _tmp521 * (-_tmp1201 - _tmp510 + _tmp511);
  const Scalar _tmp1203 = _tmp1197 * _tmp518;
  const Scalar _tmp1204 = _tmp1198 * _tmp509;
  const Scalar _tmp1205 = _tmp1204 * views_1_calibration(0, 0);
  const Scalar _tmp1206 = _tmp1202 * _tmp522 + _tmp1203 * _tmp1205;
  const Scalar _tmp1207 =
      _tmp188 * _tmp524 * _tmp525 * _tmp526 * std::pow(_tmp527, _tmp912) / _tmp528;
  const Scalar _tmp1208 = _tmp1207 * _tmp522;
  const Scalar _tmp1209 = _tmp529 / (_tmp523 * std::sqrt(_tmp523));
  const Scalar _tmp1210 = _tmp1209 * _tmp522;
  const Scalar _tmp1211 = _tmp1202 * _tmp530 + _tmp1206 * _tmp1208 - _tmp1206 * _tmp1210;
  const Scalar _tmp1212 = 2 * _tmp1211;
  const Scalar _tmp1213 = -_tmp276 * _tmp897 + _tmp288 + _tmp289;
  const Scalar _tmp1214 = _tmp1213 * views_1_calibration(0, 0);
  const Scalar _tmp1215 = _tmp1214 * _tmp287;
  const Scalar _tmp1216 =
      ((((_tmp189 + _tmp280) > 0) - ((_tmp189 + _tmp280) < 0)) + 1) / std::pow(_tmp281, Scalar(2));
  const Scalar _tmp1217 = _tmp1216 * _tmp286;
  const Scalar _tmp1218 = _tmp1216 * _tmp290;
  const Scalar _tmp1219 = _tmp1218 * views_1_calibration(1, 0);
  const Scalar _tmp1220 = _tmp282 * (_tmp275 * _tmp904 + _tmp278);
  const Scalar _tmp1221 = _tmp1213 * _tmp1219 + _tmp1220 * views_1_calibration(1, 0);
  const Scalar _tmp1222 = _tmp1215 * _tmp1217 - _tmp1221 * _tmp291;
  const Scalar _tmp1223 = _tmp298 / (_tmp292 * std::sqrt(_tmp292));
  const Scalar _tmp1224 = _tmp1223 * _tmp291;
  const Scalar _tmp1225 =
      _tmp188 * _tmp293 * _tmp294 * _tmp295 * std::pow(_tmp296, _tmp912) / _tmp297;
  const Scalar _tmp1226 = _tmp1225 * _tmp291;
  const Scalar _tmp1227 = _tmp1221 * _tmp299 + _tmp1222 * _tmp1224 - _tmp1222 * _tmp1226;
  const Scalar _tmp1228 = 2 * _tmp1227;
  const Scalar _tmp1229 = _tmp1010 * _tmp386;
  const Scalar _tmp1230 = _tmp1011 * _tmp386;
  const Scalar _tmp1231 = _tmp1005 * _tmp398;
  const Scalar _tmp1232 = -_tmp1007 * _tmp1231 + _tmp1008 * _tmp1229 - _tmp1008 * _tmp1230;
  const Scalar _tmp1233 = 2 * _tmp1232;
  const Scalar _tmp1234 = _tmp540 * _tmp897 - _tmp551 - _tmp552;
  const Scalar _tmp1235 =
      ((((_tmp189 + _tmp543) > 0) - ((_tmp189 + _tmp543) < 0)) + 1) / std::pow(_tmp544, Scalar(2));
  const Scalar _tmp1236 = _tmp1235 * _tmp553;
  const Scalar _tmp1237 = _tmp1236 * views_1_calibration(1, 0);
  const Scalar _tmp1238 = _tmp545 * (-_tmp538 * _tmp904 + _tmp541);
  const Scalar _tmp1239 = _tmp1234 * _tmp1237 - _tmp1238 * views_1_calibration(1, 0);
  const Scalar _tmp1240 = _tmp1234 * views_1_calibration(0, 0);
  const Scalar _tmp1241 = _tmp1240 * _tmp550;
  const Scalar _tmp1242 = _tmp1235 * _tmp549;
  const Scalar _tmp1243 = _tmp1239 * _tmp554 - _tmp1241 * _tmp1242;
  const Scalar _tmp1244 =
      _tmp188 * _tmp556 * std::pow(_tmp557, _tmp912) * _tmp559 * _tmp560 / _tmp558;
  const Scalar _tmp1245 = _tmp1244 * _tmp554;
  const Scalar _tmp1246 = _tmp561 / (_tmp555 * std::sqrt(_tmp555));
  const Scalar _tmp1247 = _tmp1243 * _tmp1246;
  const Scalar _tmp1248 = _tmp1239 * _tmp562 + _tmp1243 * _tmp1245 - _tmp1247 * _tmp554;
  const Scalar _tmp1249 = 2 * _tmp1248;
  const Scalar _tmp1250 = -_tmp210 * _tmp897 + _tmp222 + _tmp223;
  const Scalar _tmp1251 =
      ((((_tmp189 + _tmp214) > 0) - ((_tmp189 + _tmp214) < 0)) + 1) / std::pow(_tmp215, Scalar(2));
  const Scalar _tmp1252 = _tmp1251 * _tmp224;
  const Scalar _tmp1253 = _tmp1252 * views_1_calibration(1, 0);
  const Scalar _tmp1254 = _tmp216 * (_tmp209 * _tmp904 + _tmp212);
  const Scalar _tmp1255 = _tmp1250 * _tmp1253 + _tmp1254 * views_1_calibration(1, 0);
  const Scalar _tmp1256 = _tmp1250 * views_1_calibration(0, 0);
  const Scalar _tmp1257 = _tmp1256 * _tmp221;
  const Scalar _tmp1258 = _tmp1251 * _tmp220;
  const Scalar _tmp1259 = _tmp1255 * _tmp226 - _tmp1257 * _tmp1258;
  const Scalar _tmp1260 =
      _tmp188 * _tmp228 * _tmp229 * _tmp230 * std::pow(_tmp231, _tmp912) / _tmp232;
  const Scalar _tmp1261 = _tmp1260 * _tmp226;
  const Scalar _tmp1262 = _tmp233 / (_tmp227 * std::sqrt(_tmp227));
  const Scalar _tmp1263 = _tmp1262 * _tmp226;
  const Scalar _tmp1264 = _tmp1255 * _tmp234 + _tmp1259 * _tmp1261 - _tmp1259 * _tmp1263;
  const Scalar _tmp1265 = 2 * _tmp1264;
  const Scalar _tmp1266 = _tmp1133 * _tmp596;
  const Scalar _tmp1267 = _tmp1143 * _tmp584;
  const Scalar _tmp1268 = _tmp1145 * _tmp584;
  const Scalar _tmp1269 = _tmp1141 * _tmp1266 - _tmp1142 * _tmp1267 + _tmp1142 * _tmp1268;
  const Scalar _tmp1270 = 2 * _tmp1269;
  const Scalar _tmp1271 = _tmp954 * _tmp955;
  const Scalar _tmp1272 = _tmp959 * _tmp964;
  const Scalar _tmp1273 = _tmp136 * _tmp971;
  const Scalar _tmp1274 = _tmp955 * _tmp979;
  const Scalar _tmp1275 = _tmp135 * _tmp971;
  const Scalar _tmp1276 = _tmp972 * priors_1_0_sqrt_info(2, 1);
  const Scalar _tmp1277 = _tmp959 * _tmp975;
  const Scalar _tmp1278 =
      -_tmp1271 * _tmp136 - _tmp1272 * _tmp136 - _tmp1273 * _tmp964 + _tmp1274 * _tmp135 +
      _tmp1275 * _tmp975 - _tmp1276 * _tmp970 + _tmp1277 * _tmp135 +
      _tmp969 * priors_1_0_sqrt_info(2, 1) + _tmp985 * priors_1_0_sqrt_info(2, 4) +
      _tmp990 * priors_1_0_sqrt_info(2, 5) - _tmp992 * priors_1_0_sqrt_info(2, 1);
  const Scalar _tmp1279 = _tmp1244 * _tmp550;
  const Scalar _tmp1280 = _tmp1240 * _tmp562;
  const Scalar _tmp1281 = -_tmp1242 * _tmp1280 + _tmp1243 * _tmp1279 - _tmp1247 * _tmp550;
  const Scalar _tmp1282 = 2 * _tmp1281;
  const Scalar _tmp1283 = _tmp318 * (-_tmp310 * _tmp904 + _tmp314);
  const Scalar _tmp1284 = _tmp308 * _tmp897 - _tmp321 - _tmp322;
  const Scalar _tmp1285 =
      ((((_tmp189 + _tmp316) > 0) - ((_tmp189 + _tmp316) < 0)) + 1) / std::pow(_tmp317, Scalar(2));
  const Scalar _tmp1286 = _tmp1285 * _tmp323;
  const Scalar _tmp1287 = _tmp1286 * views_1_calibration(1, 0);
  const Scalar _tmp1288 = _tmp1283 * views_1_calibration(1, 0) - _tmp1284 * _tmp1287;
  const Scalar _tmp1289 = _tmp1284 * _tmp320;
  const Scalar _tmp1290 = _tmp1285 * _tmp313;
  const Scalar _tmp1291 = _tmp1290 * views_1_calibration(0, 0);
  const Scalar _tmp1292 = _tmp1288 * _tmp324 + _tmp1289 * _tmp1291;
  const Scalar _tmp1293 =
      _tmp188 * _tmp326 * std::pow(_tmp327, _tmp912) * _tmp329 * _tmp330 / _tmp328;
  const Scalar _tmp1294 = _tmp1293 * _tmp320;
  const Scalar _tmp1295 = _tmp1284 * _tmp332;
  const Scalar _tmp1296 = _tmp331 / (_tmp325 * std::sqrt(_tmp325));
  const Scalar _tmp1297 = _tmp1296 * _tmp320;
  const Scalar _tmp1298 = _tmp1291 * _tmp1295 + _tmp1292 * _tmp1294 - _tmp1292 * _tmp1297;
  const Scalar _tmp1299 = 2 * _tmp1298;
  const Scalar _tmp1300 = _tmp245 * _tmp897 - _tmp256 - _tmp257;
  const Scalar _tmp1301 =
      ((((_tmp189 + _tmp251) > 0) - ((_tmp189 + _tmp251) < 0)) + 1) / std::pow(_tmp252, Scalar(2));
  const Scalar _tmp1302 = _tmp1301 * _tmp258;
  const Scalar _tmp1303 = _tmp1302 * views_1_calibration(1, 0);
  const Scalar _tmp1304 = _tmp253 * (-_tmp243 * _tmp904 + _tmp249);
  const Scalar _tmp1305 = _tmp1300 * _tmp1303 - _tmp1304 * views_1_calibration(1, 0);
  const Scalar _tmp1306 = _tmp1300 * _tmp255;
  const Scalar _tmp1307 = _tmp1301 * _tmp248;
  const Scalar _tmp1308 = _tmp1307 * views_1_calibration(0, 0);
  const Scalar _tmp1309 = _tmp1305 * _tmp259 - _tmp1306 * _tmp1308;
  const Scalar _tmp1310 = _tmp266 / (_tmp260 * std::sqrt(_tmp260));
  const Scalar _tmp1311 = _tmp1310 * _tmp255;
  const Scalar _tmp1312 = _tmp1300 * _tmp267;
  const Scalar _tmp1313 =
      _tmp188 * _tmp261 * _tmp262 * _tmp263 * std::pow(_tmp264, _tmp912) / _tmp265;
  const Scalar _tmp1314 = _tmp1313 * _tmp255;
  const Scalar _tmp1315 = _tmp1308 * _tmp1312 + _tmp1309 * _tmp1311 - _tmp1309 * _tmp1314;
  const Scalar _tmp1316 = 2 * _tmp1315;
  const Scalar _tmp1317 = _tmp972 * priors_1_0_sqrt_info(0, 2);
  const Scalar _tmp1318 = _tmp75 * _tmp971;
  const Scalar _tmp1319 = _tmp971 * _tmp99;
  const Scalar _tmp1320 =
      _tmp1015 * _tmp75 - _tmp1017 * _tmp75 + _tmp1274 * _tmp99 + _tmp1277 * _tmp99 -
      _tmp1317 * _tmp964 - _tmp1318 * _tmp970 + _tmp1319 * _tmp975 -
      _tmp957 * priors_1_0_sqrt_info(0, 2) - _tmp965 * priors_1_0_sqrt_info(0, 2) +
      _tmp985 * priors_1_0_sqrt_info(0, 4) + _tmp990 * priors_1_0_sqrt_info(0, 5);
  const Scalar _tmp1321 = _tmp141 * _tmp971;
  const Scalar _tmp1322 =
      -_tmp1271 * _tmp141 - _tmp1272 * _tmp141 - _tmp1321 * _tmp964 +
      _tmp969 * priors_1_0_sqrt_info(5, 1) - _tmp973 * priors_1_0_sqrt_info(5, 1) +
      _tmp976 * priors_1_0_sqrt_info(5, 0) + _tmp980 * priors_1_0_sqrt_info(5, 0) +
      _tmp985 * priors_1_0_sqrt_info(5, 4) + _tmp990 * priors_1_0_sqrt_info(5, 5) +
      _tmp991 * priors_1_0_sqrt_info(5, 0) - _tmp992 * priors_1_0_sqrt_info(5, 1);
  const Scalar _tmp1323 = _tmp461 / (_tmp455 * std::sqrt(_tmp455));
  const Scalar _tmp1324 = _tmp445 * (_tmp438 * _tmp904 + _tmp441);
  const Scalar _tmp1325 = -_tmp439 * _tmp897 + _tmp451 + _tmp452;
  const Scalar _tmp1326 =
      ((((_tmp189 + _tmp443) > 0) - ((_tmp189 + _tmp443) < 0)) + 1) / std::pow(_tmp444, Scalar(2));
  const Scalar _tmp1327 = _tmp1326 * _tmp453;
  const Scalar _tmp1328 = _tmp1327 * views_1_calibration(1, 0);
  const Scalar _tmp1329 = _tmp1324 * views_1_calibration(1, 0) + _tmp1325 * _tmp1328;
  const Scalar _tmp1330 = _tmp1325 * views_1_calibration(0, 0);
  const Scalar _tmp1331 = _tmp1330 * _tmp450;
  const Scalar _tmp1332 = _tmp1326 * _tmp449;
  const Scalar _tmp1333 = _tmp1329 * _tmp454 - _tmp1331 * _tmp1332;
  const Scalar _tmp1334 = _tmp1333 * _tmp450;
  const Scalar _tmp1335 = _tmp1330 * _tmp462;
  const Scalar _tmp1336 =
      _tmp188 * _tmp456 * _tmp457 * std::pow(_tmp458, _tmp912) * _tmp460 / _tmp459;
  const Scalar _tmp1337 = _tmp1323 * _tmp1334 + _tmp1332 * _tmp1335 - _tmp1334 * _tmp1336;
  const Scalar _tmp1338 = 2 * _tmp1337;
  const Scalar _tmp1339 = _tmp1207 * _tmp518;
  const Scalar _tmp1340 = _tmp1209 * _tmp518;
  const Scalar _tmp1341 = _tmp1197 * _tmp530;
  const Scalar _tmp1342 = _tmp1205 * _tmp1341 + _tmp1206 * _tmp1339 - _tmp1206 * _tmp1340;
  const Scalar _tmp1343 = 2 * _tmp1342;
  const Scalar _tmp1344 = _tmp1296 * _tmp324;
  const Scalar _tmp1345 = _tmp1293 * _tmp324;
  const Scalar _tmp1346 = -_tmp1288 * _tmp332 + _tmp1292 * _tmp1344 - _tmp1292 * _tmp1345;
  const Scalar _tmp1347 = 2 * _tmp1346;
  const Scalar _tmp1348 = _tmp1058 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp1349 = _tmp1065 * _tmp1348 - _tmp1073 * priors_0_1_sqrt_info(0, 0) -
                          _tmp1077 * priors_0_1_sqrt_info(0, 2) -
                          _tmp1081 * priors_0_1_sqrt_info(0, 0) -
                          _tmp1084 * priors_0_1_sqrt_info(0, 2) - _tmp1085 * _tmp1348 -
                          _tmp1089 * priors_0_1_sqrt_info(0, 0) -
                          _tmp1091 * priors_0_1_sqrt_info(0, 2) + _tmp1098 * _tmp1348;
  const Scalar _tmp1350 = _tmp1313 * _tmp259;
  const Scalar _tmp1351 = _tmp1310 * _tmp259;
  const Scalar _tmp1352 = _tmp1305 * _tmp267 + _tmp1309 * _tmp1350 - _tmp1309 * _tmp1351;
  const Scalar _tmp1353 = 2 * _tmp1352;
  const Scalar _tmp1354 = _tmp1262 * _tmp221;
  const Scalar _tmp1355 = _tmp1256 * _tmp234;
  const Scalar _tmp1356 = _tmp1260 * _tmp221;
  const Scalar _tmp1357 = _tmp1258 * _tmp1355 + _tmp1259 * _tmp1354 - _tmp1259 * _tmp1356;
  const Scalar _tmp1358 = 2 * _tmp1357;
  const Scalar _tmp1359 = _tmp1336 * _tmp454;
  const Scalar _tmp1360 = _tmp1323 * _tmp454;
  const Scalar _tmp1361 = _tmp1329 * _tmp462 + _tmp1333 * _tmp1359 - _tmp1333 * _tmp1360;
  const Scalar _tmp1362 = 2 * _tmp1361;
  const Scalar _tmp1363 = -_tmp704 * _tmp897 + _tmp716 + _tmp717;
  const Scalar _tmp1364 = _tmp1363 * views_1_calibration(0, 0);
  const Scalar _tmp1365 = _tmp1364 * _tmp715;
  const Scalar _tmp1366 =
      ((((_tmp189 + _tmp708) > 0) - ((_tmp189 + _tmp708) < 0)) + 1) / std::pow(_tmp709, Scalar(2));
  const Scalar _tmp1367 = _tmp1366 * _tmp714;
  const Scalar _tmp1368 = _tmp710 * (_tmp703 * _tmp904 + _tmp706);
  const Scalar _tmp1369 = _tmp1366 * _tmp718;
  const Scalar _tmp1370 = _tmp1369 * views_1_calibration(1, 0);
  const Scalar _tmp1371 = _tmp1363 * _tmp1370 + _tmp1368 * views_1_calibration(1, 0);
  const Scalar _tmp1372 = _tmp1365 * _tmp1367 - _tmp1371 * _tmp719;
  const Scalar _tmp1373 = _tmp1372 * _tmp715;
  const Scalar _tmp1374 =
      _tmp188 * _tmp721 * _tmp722 * _tmp723 * std::pow(_tmp724, _tmp912) / _tmp725;
  const Scalar _tmp1375 = _tmp726 / (_tmp720 * std::sqrt(_tmp720));
  const Scalar _tmp1376 = _tmp1364 * _tmp727;
  const Scalar _tmp1377 = _tmp1367 * _tmp1376 + _tmp1373 * _tmp1374 - _tmp1373 * _tmp1375;
  const Scalar _tmp1378 = 2 * _tmp1377;
  const Scalar _tmp1379 = _tmp1111 * _tmp687;
  const Scalar _tmp1380 = _tmp1113 * _tmp687;
  const Scalar _tmp1381 = _tmp1108 * _tmp695 - _tmp1110 * _tmp1379 + _tmp1110 * _tmp1380;
  const Scalar _tmp1382 = 2 * _tmp1381;
  const Scalar _tmp1383 = _tmp139 * _tmp971;
  const Scalar _tmp1384 =
      -_tmp1271 * _tmp139 - _tmp1272 * _tmp139 - _tmp1383 * _tmp964 +
      _tmp969 * priors_1_0_sqrt_info(4, 1) - _tmp973 * priors_1_0_sqrt_info(4, 1) +
      _tmp976 * priors_1_0_sqrt_info(4, 0) + _tmp980 * priors_1_0_sqrt_info(4, 0) +
      _tmp985 * priors_1_0_sqrt_info(4, 4) + _tmp990 * priors_1_0_sqrt_info(4, 5) +
      _tmp991 * priors_1_0_sqrt_info(4, 0) - _tmp992 * priors_1_0_sqrt_info(4, 1);
  const Scalar _tmp1385 = _tmp1058 * priors_0_1_sqrt_info(5, 0);
  const Scalar _tmp1386 = _tmp1071 * _tmp1385;
  const Scalar _tmp1387 =
      _tmp1066 * priors_0_1_sqrt_info(5, 1) - _tmp1067 * _tmp1386 -
      _tmp1077 * priors_0_1_sqrt_info(5, 2) + _tmp1079 * priors_0_1_sqrt_info(5, 1) -
      _tmp1081 * priors_0_1_sqrt_info(5, 0) - _tmp1084 * priors_0_1_sqrt_info(5, 2) -
      _tmp1086 * priors_0_1_sqrt_info(5, 1) - _tmp1089 * priors_0_1_sqrt_info(5, 0) -
      _tmp1091 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp1388 = _tmp1058 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp1389 = _tmp1058 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp1390 = _tmp1065 * _tmp1388 - _tmp1073 * priors_0_1_sqrt_info(1, 0) -
                          _tmp1077 * priors_0_1_sqrt_info(1, 2) -
                          _tmp1081 * priors_0_1_sqrt_info(1, 0) - _tmp1083 * _tmp1389 -
                          _tmp1085 * _tmp1388 - _tmp1089 * priors_0_1_sqrt_info(1, 0) +
                          _tmp1098 * _tmp1388 - _tmp1191 * _tmp1389;
  const Scalar _tmp1391 = _tmp1225 * _tmp287;
  const Scalar _tmp1392 = _tmp1214 * _tmp299;
  const Scalar _tmp1393 = _tmp1223 * _tmp287;
  const Scalar _tmp1394 = _tmp1217 * _tmp1392 + _tmp1222 * _tmp1391 - _tmp1222 * _tmp1393;
  const Scalar _tmp1395 = 2 * _tmp1394;
  const Scalar _tmp1396 = _tmp1127 * _tmp650;
  const Scalar _tmp1397 = _tmp1129 * _tmp650;
  const Scalar _tmp1398 = _tmp1123 * _tmp662;
  const Scalar _tmp1399 = -_tmp1125 * _tmp1398 + _tmp1126 * _tmp1396 - _tmp1126 * _tmp1397;
  const Scalar _tmp1400 = 2 * _tmp1399;
  const Scalar _tmp1401 = _tmp1182 * _tmp179;
  const Scalar _tmp1402 = _tmp1180 * _tmp179;
  const Scalar _tmp1403 = _tmp1176 * _tmp201;
  const Scalar _tmp1404 = -_tmp1178 * _tmp1403 + _tmp1179 * _tmp1401 - _tmp1179 * _tmp1402;
  const Scalar _tmp1405 = 2 * _tmp1404;
  const Scalar _tmp1406 = _tmp1375 * _tmp719;
  const Scalar _tmp1407 = _tmp1374 * _tmp719;
  const Scalar _tmp1408 = _tmp1371 * _tmp727 + _tmp1372 * _tmp1406 - _tmp1372 * _tmp1407;
  const Scalar _tmp1409 = 2 * _tmp1408;
  const Scalar _tmp1410 = -_tmp606 * _tmp897 + _tmp619;
  const Scalar _tmp1411 =
      ((((_tmp189 + _tmp614) > 0) - ((_tmp189 + _tmp614) < 0)) + 1) / std::pow(_tmp615, Scalar(2));
  const Scalar _tmp1412 = _tmp1411 * _tmp620;
  const Scalar _tmp1413 = _tmp1412 * views_1_calibration(1, 0);
  const Scalar _tmp1414 = _tmp604 * _tmp904;
  const Scalar _tmp1415 = _tmp1410 * _tmp1413 + _tmp621 * (-_tmp1414 - _tmp610 + _tmp611);
  const Scalar _tmp1416 = _tmp1410 * _tmp618;
  const Scalar _tmp1417 = _tmp1411 * _tmp609;
  const Scalar _tmp1418 = _tmp1417 * views_1_calibration(0, 0);
  const Scalar _tmp1419 = _tmp1415 * _tmp622 + _tmp1416 * _tmp1418;
  const Scalar _tmp1420 = _tmp629 / (_tmp623 * std::sqrt(_tmp623));
  const Scalar _tmp1421 = _tmp1420 * _tmp618;
  const Scalar _tmp1422 =
      _tmp188 * _tmp624 * _tmp625 * _tmp626 * std::pow(_tmp627, _tmp912) / _tmp628;
  const Scalar _tmp1423 = _tmp1422 * _tmp618;
  const Scalar _tmp1424 = _tmp1410 * _tmp630;
  const Scalar _tmp1425 = -_tmp1418 * _tmp1424 + _tmp1419 * _tmp1421 - _tmp1419 * _tmp1423;
  const Scalar _tmp1426 = 2 * _tmp1425;
  const Scalar _tmp1427 = _tmp1419 * _tmp622;
  const Scalar _tmp1428 = _tmp1415 * _tmp630 - _tmp1420 * _tmp1427 + _tmp1422 * _tmp1427;
  const Scalar _tmp1429 = 2 * _tmp1428;
  const Scalar _tmp1430 = _tmp893 + _tmp895 + _tmp902;
  const Scalar _tmp1431 = (Scalar(1) / Scalar(2)) * _tmp1430;
  const Scalar _tmp1432 = _tmp1431 * _tmp211;
  const Scalar _tmp1433 = -_tmp1432 - _tmp217 - _tmp218;
  const Scalar _tmp1434 = _tmp226 * views_1_calibration(1, 0);
  const Scalar _tmp1435 = _tmp1258 * views_1_calibration(0, 0);
  const Scalar _tmp1436 = _tmp1254 * views_1_calibration(0, 0) + _tmp1433 * _tmp1435;
  const Scalar _tmp1437 = _tmp1252 * _tmp1433 * _tmp1434 - _tmp1436 * _tmp221;
  const Scalar _tmp1438 = _tmp1437 * _tmp226;
  const Scalar _tmp1439 =
      -_tmp1253 * _tmp1433 * _tmp234 - _tmp1260 * _tmp1438 + _tmp1262 * _tmp1438;
  const Scalar _tmp1440 = 2 * _tmp1439;
  const Scalar _tmp1441 = _tmp955 * (_tmp92 + _tmp96 + _tmp961);
  const Scalar _tmp1442 = _tmp1441 * _tmp74;
  const Scalar _tmp1443 = _tmp955 * (_tmp100 + _tmp102 + _tmp967);
  const Scalar _tmp1444 = _tmp1443 * _tmp74;
  const Scalar _tmp1445 = -_tmp78;
  const Scalar _tmp1446 = _tmp1445 + _tmp76 + _tmp81;
  const Scalar _tmp1447 = _tmp106 * _tmp1446;
  const Scalar _tmp1448 = _tmp1447 * _tmp959;
  const Scalar _tmp1449 = _tmp1446 * _tmp82;
  const Scalar _tmp1450 = _tmp1449 * _tmp960;
  const Scalar _tmp1451 = _tmp1449 * _tmp972;
  const Scalar _tmp1452 = _tmp118 - _tmp119 - _tmp981 + _tmp982 - _tmp983 + _tmp984;
  const Scalar _tmp1453 = 2 * _tmp124;
  const Scalar _tmp1454 = 2 * _tmp126;
  const Scalar _tmp1455 = _tmp1430 * _views_1_pose[4];
  const Scalar _tmp1456 = _tmp1430 * _views_0_pose[4];
  const Scalar _tmp1457 = _tmp129 - _tmp1453 - _tmp1454 - _tmp1455 + _tmp1456;
  const Scalar _tmp1458 = _tmp1446 * _tmp97;
  const Scalar _tmp1459 = _tmp1458 * _tmp972;
  const Scalar _tmp1460 = -_tmp68;
  const Scalar _tmp1461 = _tmp955 * (_tmp1460 + _tmp71 + _tmp977);
  const Scalar _tmp1462 = _tmp1461 * _tmp74;
  const Scalar _tmp1463 = _tmp1458 * _tmp960;
  const Scalar _tmp1464 =
      _tmp1383 * _tmp1447 + _tmp139 * _tmp1448 - _tmp1442 * priors_1_0_sqrt_info(4, 2) -
      _tmp1444 * priors_1_0_sqrt_info(4, 0) + _tmp1450 * priors_1_0_sqrt_info(4, 1) +
      _tmp1451 * priors_1_0_sqrt_info(4, 1) + _tmp1452 * priors_1_0_sqrt_info(4, 3) +
      _tmp1457 * priors_1_0_sqrt_info(4, 5) - _tmp1459 * priors_1_0_sqrt_info(4, 0) +
      _tmp1462 * priors_1_0_sqrt_info(4, 1) - _tmp1463 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1465 = std::pow(_tmp13, Scalar(2));
  const Scalar _tmp1466 = _tmp1071 * _tmp1465;
  const Scalar _tmp1467 = _tmp1064 * _tmp4;
  const Scalar _tmp1468 = _tmp1058 * _tmp1467;
  const Scalar _tmp1469 = _tmp1075 * _tmp15;
  const Scalar _tmp1470 = _tmp1058 * _tmp1469;
  const Scalar _tmp1471 = _tmp1063 * _tmp1465;
  const Scalar _tmp1472 = _tmp13 * _tmp4;
  const Scalar _tmp1473 = _tmp1072 * _tmp1472;
  const Scalar _tmp1474 =
      _tmp1066 * priors_0_1_sqrt_info(0, 0) + _tmp1079 * priors_0_1_sqrt_info(0, 0) +
      _tmp1086 * priors_0_1_sqrt_info(0, 0) - _tmp1089 * priors_0_1_sqrt_info(0, 1) -
      _tmp1348 * _tmp1466 - _tmp1348 * _tmp1471 + _tmp1468 * priors_0_1_sqrt_info(0, 2) -
      _tmp1470 * priors_0_1_sqrt_info(0, 2) + _tmp1473 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp1475 = _tmp1058 * _tmp42;
  const Scalar _tmp1476 = _tmp1071 * _tmp1475;
  const Scalar _tmp1477 = _tmp1071 * _tmp1472;
  const Scalar _tmp1478 = _tmp1064 * _tmp1475 + _tmp1086 * priors_0_1_sqrt_info(1, 0) -
                          _tmp1089 * priors_0_1_sqrt_info(1, 1) + _tmp13 * _tmp1476 -
                          _tmp1388 * _tmp1466 - _tmp1388 * _tmp1471 + _tmp1389 * _tmp1467 +
                          _tmp1389 * _tmp1477 - _tmp1470 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp1479 = _tmp1431 * _tmp705;
  const Scalar _tmp1480 = -_tmp1479 - _tmp711 - _tmp712;
  const Scalar _tmp1481 = _tmp719 * views_1_calibration(1, 0);
  const Scalar _tmp1482 = _tmp1367 * views_1_calibration(0, 0);
  const Scalar _tmp1483 = _tmp1368 * views_1_calibration(0, 0) + _tmp1480 * _tmp1482;
  const Scalar _tmp1484 = _tmp1369 * _tmp1480 * _tmp1481 - _tmp1483 * _tmp715;
  const Scalar _tmp1485 = _tmp1374 * _tmp1484;
  const Scalar _tmp1486 = -_tmp1370 * _tmp1480 * _tmp727 + _tmp1406 * _tmp1484 - _tmp1485 * _tmp719;
  const Scalar _tmp1487 = 2 * _tmp1486;
  const Scalar _tmp1488 = _tmp1431 * _tmp408;
  const Scalar _tmp1489 = -_tmp1488 - _tmp414 - _tmp415;
  const Scalar _tmp1490 = _tmp422 * views_1_calibration(1, 0);
  const Scalar _tmp1491 = _tmp909 * views_1_calibration(0, 0);
  const Scalar _tmp1492 = _tmp1489 * _tmp1491 + _tmp905 * views_1_calibration(0, 0);
  const Scalar _tmp1493 = _tmp1489 * _tmp1490 * _tmp900 - _tmp1492 * _tmp418;
  const Scalar _tmp1494 = -_tmp1492 * _tmp430 + _tmp1493 * _tmp948 - _tmp1493 * _tmp949;
  const Scalar _tmp1495 = 2 * _tmp1494;
  const Scalar _tmp1496 = _tmp1431 * _tmp539;
  const Scalar _tmp1497 = _tmp1496 + _tmp546 + _tmp547;
  const Scalar _tmp1498 = _tmp554 * views_1_calibration(1, 0);
  const Scalar _tmp1499 = _tmp1242 * views_1_calibration(0, 0);
  const Scalar _tmp1500 = -_tmp1238 * views_1_calibration(0, 0) + _tmp1497 * _tmp1499;
  const Scalar _tmp1501 = _tmp1236 * _tmp1497 * _tmp1498 - _tmp1500 * _tmp550;
  const Scalar _tmp1502 = _tmp1246 * _tmp550;
  const Scalar _tmp1503 = _tmp1279 * _tmp1501 - _tmp1500 * _tmp562 - _tmp1501 * _tmp1502;
  const Scalar _tmp1504 = 2 * _tmp1503;
  const Scalar _tmp1505 = _tmp422 * _tmp892;
  const Scalar _tmp1506 = _tmp422 * _tmp913;
  const Scalar _tmp1507 = -_tmp1489 * _tmp430 * _tmp901 + _tmp1493 * _tmp1505 - _tmp1493 * _tmp1506;
  const Scalar _tmp1508 = 2 * _tmp1507;
  const Scalar _tmp1509 = _tmp1431 * _tmp440;
  const Scalar _tmp1510 = -_tmp1509 - _tmp446 - _tmp447;
  const Scalar _tmp1511 = _tmp1332 * views_1_calibration(0, 0);
  const Scalar _tmp1512 = _tmp1324 * views_1_calibration(0, 0) + _tmp1510 * _tmp1511;
  const Scalar _tmp1513 = _tmp454 * views_1_calibration(1, 0);
  const Scalar _tmp1514 = -_tmp1327 * _tmp1510 * _tmp1513 + _tmp1512 * _tmp450;
  const Scalar _tmp1515 = _tmp1323 * _tmp450;
  const Scalar _tmp1516 = _tmp1336 * _tmp450;
  const Scalar _tmp1517 = -_tmp1512 * _tmp462 + _tmp1514 * _tmp1515 - _tmp1514 * _tmp1516;
  const Scalar _tmp1518 = 2 * _tmp1517;
  const Scalar _tmp1519 = _tmp1375 * _tmp715;
  const Scalar _tmp1520 = -_tmp1483 * _tmp727 - _tmp1484 * _tmp1519 + _tmp1485 * _tmp715;
  const Scalar _tmp1521 = 2 * _tmp1520;
  const Scalar _tmp1522 = _tmp1458 * _tmp959;
  const Scalar _tmp1523 =
      _tmp1273 * _tmp1447 - _tmp1275 * _tmp1458 + _tmp1276 * _tmp1449 - _tmp135 * _tmp1443 -
      _tmp135 * _tmp1522 + _tmp136 * _tmp1448 - _tmp1442 * priors_1_0_sqrt_info(2, 2) +
      _tmp1450 * priors_1_0_sqrt_info(2, 1) + _tmp1452 * priors_1_0_sqrt_info(2, 3) +
      _tmp1457 * priors_1_0_sqrt_info(2, 5) + _tmp1462 * priors_1_0_sqrt_info(2, 1);
  const Scalar _tmp1524 = _tmp1431 * _tmp168;
  const Scalar _tmp1525 = -_tmp1524 - _tmp174 - _tmp175;
  const Scalar _tmp1526 = _tmp1173 * _tmp1525;
  const Scalar _tmp1527 = _tmp1178 * views_1_calibration(0, 0);
  const Scalar _tmp1528 = _tmp1174 * views_1_calibration(0, 0) + _tmp1525 * _tmp1527;
  const Scalar _tmp1529 = -_tmp1526 * _tmp184 + _tmp1528 * _tmp179;
  const Scalar _tmp1530 = -_tmp1181 * _tmp1529 + _tmp1183 * _tmp1529 + _tmp1526 * _tmp201;
  const Scalar _tmp1531 = 2 * _tmp1530;
  const Scalar _tmp1532 = -_tmp1431 * _tmp737 - _tmp736 - _tmp739;
  const Scalar _tmp1533 = _tmp1532 * _tmp933 + _tmp748 * (_tmp743 + _tmp938);
  const Scalar _tmp1534 = _tmp1532 * _tmp753;
  const Scalar _tmp1535 = _tmp1533 * _tmp749 + _tmp1534 * _tmp937;
  const Scalar _tmp1536 = _tmp1532 * _tmp761;
  const Scalar _tmp1537 = -_tmp1166 * _tmp1535 + _tmp1167 * _tmp1535 + _tmp1536 * _tmp937;
  const Scalar _tmp1538 = 2 * _tmp1537;
  const Scalar _tmp1539 = -_tmp1431 * _tmp508 - _tmp505 - _tmp507;
  const Scalar _tmp1540 = _tmp1205 * _tmp1539 + _tmp517 * (_tmp1201 + _tmp512);
  const Scalar _tmp1541 = _tmp1539 * _tmp522;
  const Scalar _tmp1542 = _tmp1200 * _tmp1541 + _tmp1540 * _tmp518;
  const Scalar _tmp1543 = -_tmp1339 * _tmp1542 + _tmp1340 * _tmp1542 - _tmp1540 * _tmp530;
  const Scalar _tmp1544 = 2 * _tmp1543;
  const Scalar _tmp1545 = -_tmp1354 * _tmp1437 + _tmp1356 * _tmp1437 - _tmp1436 * _tmp234;
  const Scalar _tmp1546 = 2 * _tmp1545;
  const Scalar _tmp1547 = -_tmp1431 * _tmp474 - _tmp471 - _tmp473;
  const Scalar _tmp1548 = _tmp1043 * _tmp1547 + _tmp483 * (_tmp1035 + _tmp478);
  const Scalar _tmp1549 = _tmp1547 * _tmp488;
  const Scalar _tmp1550 = _tmp1037 * _tmp1039;
  const Scalar _tmp1551 = _tmp1548 * _tmp484 + _tmp1549 * _tmp1550;
  const Scalar _tmp1552 = _tmp1547 * _tmp496;
  const Scalar _tmp1553 = _tmp1046 * _tmp1551 - _tmp1048 * _tmp1551 - _tmp1550 * _tmp1552;
  const Scalar _tmp1554 = 2 * _tmp1553;
  const Scalar _tmp1555 = -_tmp1401 * _tmp1529 + _tmp1402 * _tmp1529 + _tmp1528 * _tmp201;
  const Scalar _tmp1556 = 2 * _tmp1555;
  const Scalar _tmp1557 = _tmp1431 * _tmp340;
  const Scalar _tmp1558 = -_tmp1557 - _tmp342 - _tmp344;
  const Scalar _tmp1559 = _tmp1156 * _tmp1558;
  const Scalar _tmp1560 = _tmp1153 * _tmp1558 + _tmp1154 * views_1_calibration(0, 0);
  const Scalar _tmp1561 = -_tmp1559 * _tmp358 + _tmp1560 * _tmp353;
  const Scalar _tmp1562 = _tmp1193 * _tmp1561 - _tmp1194 * _tmp1561 + _tmp1559 * _tmp366;
  const Scalar _tmp1563 = 2 * _tmp1562;
  const Scalar _tmp1564 = _tmp1431 * _tmp242;
  const Scalar _tmp1565 = _tmp1564 + _tmp244 + _tmp246;
  const Scalar _tmp1566 = _tmp259 * views_1_calibration(1, 0);
  const Scalar _tmp1567 = -_tmp1304 * views_1_calibration(0, 0) + _tmp1308 * _tmp1565;
  const Scalar _tmp1568 = _tmp1302 * _tmp1565 * _tmp1566 - _tmp1567 * _tmp255;
  const Scalar _tmp1569 = -_tmp1311 * _tmp1568 + _tmp1314 * _tmp1568 - _tmp1567 * _tmp267;
  const Scalar _tmp1570 = 2 * _tmp1569;
  const Scalar _tmp1571 = -_tmp1431 * _tmp608 - _tmp605 - _tmp607;
  const Scalar _tmp1572 = _tmp1418 * _tmp1571 + _tmp617 * (_tmp1414 + _tmp612);
  const Scalar _tmp1573 = _tmp1571 * _tmp622;
  const Scalar _tmp1574 = _tmp1413 * _tmp1573 + _tmp1572 * _tmp618;
  const Scalar _tmp1575 = _tmp1420 * _tmp622;
  const Scalar _tmp1576 = _tmp1571 * _tmp630;
  const Scalar _tmp1577 = _tmp1422 * _tmp622;
  const Scalar _tmp1578 = -_tmp1413 * _tmp1576 + _tmp1574 * _tmp1575 - _tmp1574 * _tmp1577;
  const Scalar _tmp1579 = 2 * _tmp1578;
  const Scalar _tmp1580 = _tmp1447 * _tmp972;
  const Scalar _tmp1581 = _tmp1447 * _tmp960;
  const Scalar _tmp1582 = _tmp1449 * _tmp959;
  const Scalar _tmp1583 =
      _tmp1014 * _tmp1461 + _tmp1014 * _tmp1582 + _tmp1016 * _tmp1449 -
      _tmp1442 * priors_1_0_sqrt_info(3, 2) - _tmp1444 * priors_1_0_sqrt_info(3, 0) +
      _tmp1452 * priors_1_0_sqrt_info(3, 3) + _tmp1457 * priors_1_0_sqrt_info(3, 5) -
      _tmp1459 * priors_1_0_sqrt_info(3, 0) - _tmp1463 * priors_1_0_sqrt_info(3, 0) +
      _tmp1580 * priors_1_0_sqrt_info(3, 2) + _tmp1581 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp1584 = -_tmp1431 * _tmp805 - _tmp804 - _tmp807;
  const Scalar _tmp1585 = _tmp1584 * _tmp829;
  const Scalar _tmp1586 = _tmp1027 * _tmp1584 + _tmp816 * (_tmp1019 + _tmp811);
  const Scalar _tmp1587 = _tmp1584 * _tmp821;
  const Scalar _tmp1588 = _tmp1023 * _tmp1587 + _tmp1586 * _tmp817;
  const Scalar _tmp1589 = _tmp1023 * _tmp1585 + _tmp1030 * _tmp1588 - _tmp1032 * _tmp1588;
  const Scalar _tmp1590 = 2 * _tmp1589;
  const Scalar _tmp1591 = _tmp1431 * _tmp375;
  const Scalar _tmp1592 = _tmp1591 + _tmp382 + _tmp383;
  const Scalar _tmp1593 = _tmp1002 * _tmp1592;
  const Scalar _tmp1594 = _tmp1007 * views_1_calibration(0, 0);
  const Scalar _tmp1595 = -_tmp1003 * views_1_calibration(0, 0) + _tmp1592 * _tmp1594;
  const Scalar _tmp1596 = _tmp1593 * _tmp390 - _tmp1595 * _tmp386;
  const Scalar _tmp1597 = _tmp1011 * _tmp390;
  const Scalar _tmp1598 = _tmp1010 * _tmp390;
  const Scalar _tmp1599 = -_tmp1593 * _tmp398 + _tmp1596 * _tmp1597 - _tmp1596 * _tmp1598;
  const Scalar _tmp1600 = 2 * _tmp1599;
  const Scalar _tmp1601 =
      _tmp1066 * priors_0_1_sqrt_info(2, 0) + _tmp1079 * priors_0_1_sqrt_info(2, 0) +
      _tmp1086 * priors_0_1_sqrt_info(2, 0) - _tmp1089 * priors_0_1_sqrt_info(2, 1) -
      _tmp1097 * _tmp1466 - _tmp1097 * _tmp1471 + _tmp1468 * priors_0_1_sqrt_info(2, 2) -
      _tmp1470 * priors_0_1_sqrt_info(2, 2) + _tmp1473 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp1602 = _tmp1431 * _tmp307;
  const Scalar _tmp1603 = _tmp1602 + _tmp309 + _tmp311;
  const Scalar _tmp1604 = _tmp1283 * views_1_calibration(0, 0) - _tmp1291 * _tmp1603;
  const Scalar _tmp1605 = _tmp324 * views_1_calibration(1, 0);
  const Scalar _tmp1606 = _tmp1286 * _tmp1603 * _tmp1605 + _tmp1604 * _tmp320;
  const Scalar _tmp1607 = _tmp1296 * _tmp1606;
  const Scalar _tmp1608 = _tmp1294 * _tmp1606 + _tmp1604 * _tmp332 - _tmp1607 * _tmp320;
  const Scalar _tmp1609 = 2 * _tmp1608;
  const Scalar _tmp1610 = -_tmp1431 * _tmp773 - _tmp770 - _tmp772;
  const Scalar _tmp1611 = _tmp1610 * _tmp787;
  const Scalar _tmp1612 = _tmp1610 * _tmp920 + _tmp782 * (_tmp777 + _tmp921);
  const Scalar _tmp1613 = _tmp1611 * _tmp923 + _tmp1612 * _tmp783;
  const Scalar _tmp1614 = _tmp787 * _tmp928;
  const Scalar _tmp1615 = _tmp787 * _tmp927;
  const Scalar _tmp1616 = _tmp1610 * _tmp795;
  const Scalar _tmp1617 = _tmp1613 * _tmp1614 - _tmp1613 * _tmp1615 - _tmp1616 * _tmp923;
  const Scalar _tmp1618 = 2 * _tmp1617;
  const Scalar _tmp1619 = _tmp1431 * _tmp639;
  const Scalar _tmp1620 = _tmp1619 + _tmp646 + _tmp647;
  const Scalar _tmp1621 = _tmp654 * views_1_calibration(1, 0);
  const Scalar _tmp1622 = _tmp1125 * views_1_calibration(0, 0);
  const Scalar _tmp1623 = _tmp1117 * views_1_calibration(0, 0) - _tmp1620 * _tmp1622;
  const Scalar _tmp1624 = _tmp1120 * _tmp1620 * _tmp1621 + _tmp1623 * _tmp650;
  const Scalar _tmp1625 =
      -_tmp1121 * _tmp1620 * _tmp662 + _tmp1128 * _tmp1624 - _tmp1130 * _tmp1624;
  const Scalar _tmp1626 = 2 * _tmp1625;
  const Scalar _tmp1627 = -_tmp1421 * _tmp1574 + _tmp1423 * _tmp1574 + _tmp1572 * _tmp630;
  const Scalar _tmp1628 = 2 * _tmp1627;
  const Scalar _tmp1629 = _tmp1431 * _tmp670;
  const Scalar _tmp1630 = -_tmp1629 - _tmp672 - _tmp674;
  const Scalar _tmp1631 = _tmp1102 * _tmp1630 + _tmp1105 * views_1_calibration(0, 0);
  const Scalar _tmp1632 = _tmp1107 * _tmp1630;
  const Scalar _tmp1633 = _tmp1631 * _tmp683 - _tmp1632 * _tmp687;
  const Scalar _tmp1634 = _tmp1379 * _tmp1633 - _tmp1380 * _tmp1633 + _tmp1632 * _tmp695;
  const Scalar _tmp1635 = 2 * _tmp1634;
  const Scalar _tmp1636 = _tmp1303 * _tmp1565 * _tmp267 + _tmp1350 * _tmp1568 - _tmp1351 * _tmp1568;
  const Scalar _tmp1637 = 2 * _tmp1636;
  const Scalar _tmp1638 = _tmp1328 * _tmp1510 * _tmp462 - _tmp1359 * _tmp1514 + _tmp1360 * _tmp1514;
  const Scalar _tmp1639 = 2 * _tmp1638;
  const Scalar _tmp1640 = _tmp1287 * _tmp1603 * _tmp332 + _tmp1345 * _tmp1606 - _tmp1607 * _tmp324;
  const Scalar _tmp1641 = 2 * _tmp1640;
  const Scalar _tmp1642 = _tmp1588 * _tmp817;
  const Scalar _tmp1643 = -_tmp1029 * _tmp1642 + _tmp1031 * _tmp1642 - _tmp1586 * _tmp829;
  const Scalar _tmp1644 = 2 * _tmp1643;
  const Scalar _tmp1645 = -_tmp1431 * _tmp572 - _tmp571 - _tmp574;
  const Scalar _tmp1646 = _tmp1645 * _tmp596;
  const Scalar _tmp1647 = _tmp1141 * _tmp1645 + _tmp583 * (_tmp1137 + _tmp578);
  const Scalar _tmp1648 = _tmp1645 * _tmp588;
  const Scalar _tmp1649 = _tmp1136 * _tmp1648 + _tmp1647 * _tmp584;
  const Scalar _tmp1650 = _tmp1136 * _tmp1646 - _tmp1144 * _tmp1649 + _tmp1146 * _tmp1649;
  const Scalar _tmp1651 = 2 * _tmp1650;
  const Scalar _tmp1652 = _tmp1229 * _tmp1596 - _tmp1230 * _tmp1596 - _tmp1595 * _tmp398;
  const Scalar _tmp1653 = 2 * _tmp1652;
  const Scalar _tmp1654 = _tmp1074 * _tmp1189;
  const Scalar _tmp1655 = _tmp1058 * _tmp1471;
  const Scalar _tmp1656 = _tmp1065 * _tmp1188 + _tmp1078 * _tmp1190 -
                          _tmp1089 * priors_0_1_sqrt_info(3, 1) + _tmp1186 * _tmp1467 -
                          _tmp1186 * _tmp1469 + _tmp1186 * _tmp1477 - _tmp1187 * _tmp1466 +
                          _tmp1654 * _tmp4 - _tmp1655 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp1657 = _tmp1246 * _tmp554;
  const Scalar _tmp1658 = _tmp1237 * _tmp1497 * _tmp562 + _tmp1245 * _tmp1501 - _tmp1501 * _tmp1657;
  const Scalar _tmp1659 = 2 * _tmp1658;
  const Scalar _tmp1660 =
      _tmp1321 * _tmp1447 - _tmp141 * _tmp1441 + _tmp141 * _tmp1448 -
      _tmp1444 * priors_1_0_sqrt_info(5, 0) + _tmp1450 * priors_1_0_sqrt_info(5, 1) +
      _tmp1451 * priors_1_0_sqrt_info(5, 1) + _tmp1452 * priors_1_0_sqrt_info(5, 3) +
      _tmp1457 * priors_1_0_sqrt_info(5, 5) - _tmp1459 * priors_1_0_sqrt_info(5, 0) +
      _tmp1462 * priors_1_0_sqrt_info(5, 1) - _tmp1463 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1661 = _tmp1649 * _tmp584;
  const Scalar _tmp1662 = _tmp1143 * _tmp1661 - _tmp1145 * _tmp1661 - _tmp1647 * _tmp596;
  const Scalar _tmp1663 = 2 * _tmp1662;
  const Scalar _tmp1664 = _tmp1093 * _tmp1551 - _tmp1094 * _tmp1551 - _tmp1548 * _tmp496;
  const Scalar _tmp1665 = 2 * _tmp1664;
  const Scalar _tmp1666 = -_tmp1112 * _tmp1633 + _tmp1114 * _tmp1633 + _tmp1631 * _tmp695;
  const Scalar _tmp1667 = 2 * _tmp1666;
  const Scalar _tmp1668 = _tmp1539 * _tmp530;
  const Scalar _tmp1669 = _tmp1200 * _tmp1668 + _tmp1208 * _tmp1542 - _tmp1210 * _tmp1542;
  const Scalar _tmp1670 = 2 * _tmp1669;
  const Scalar _tmp1671 = _tmp1396 * _tmp1624 - _tmp1397 * _tmp1624 - _tmp1623 * _tmp662;
  const Scalar _tmp1672 = 2 * _tmp1671;
  const Scalar _tmp1673 = _tmp1058 * _tmp1466;
  const Scalar _tmp1674 =
      _tmp1065 * _tmp1385 + _tmp1078 * _tmp1386 + _tmp1086 * priors_0_1_sqrt_info(5, 0) -
      _tmp1089 * priors_0_1_sqrt_info(5, 1) + _tmp1468 * priors_0_1_sqrt_info(5, 2) -
      _tmp1470 * priors_0_1_sqrt_info(5, 2) + _tmp1473 * priors_0_1_sqrt_info(5, 2) -
      _tmp1655 * priors_0_1_sqrt_info(5, 1) - _tmp1673 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp1675 = _tmp1612 * _tmp795 - _tmp1613 * _tmp995 + _tmp1613 * _tmp996;
  const Scalar _tmp1676 = 2 * _tmp1675;
  const Scalar _tmp1677 = _tmp1431 * _tmp277;
  const Scalar _tmp1678 = -_tmp1677 - _tmp283 - _tmp284;
  const Scalar _tmp1679 = _tmp291 * views_1_calibration(1, 0);
  const Scalar _tmp1680 = _tmp1217 * views_1_calibration(0, 0);
  const Scalar _tmp1681 = _tmp1220 * views_1_calibration(0, 0) + _tmp1678 * _tmp1680;
  const Scalar _tmp1682 = _tmp1218 * _tmp1678 * _tmp1679 - _tmp1681 * _tmp287;
  const Scalar _tmp1683 = _tmp1219 * _tmp1678 * _tmp299 - _tmp1224 * _tmp1682 + _tmp1226 * _tmp1682;
  const Scalar _tmp1684 = 2 * _tmp1683;
  const Scalar _tmp1685 =
      _tmp1066 * priors_0_1_sqrt_info(4, 0) + _tmp1079 * priors_0_1_sqrt_info(4, 0) +
      _tmp1086 * priors_0_1_sqrt_info(4, 0) - _tmp1089 * priors_0_1_sqrt_info(4, 1) +
      _tmp1468 * priors_0_1_sqrt_info(4, 2) - _tmp1470 * priors_0_1_sqrt_info(4, 2) +
      _tmp1473 * priors_0_1_sqrt_info(4, 2) - _tmp1655 * priors_0_1_sqrt_info(4, 1) -
      _tmp1673 * priors_0_1_sqrt_info(4, 1);
  const Scalar _tmp1686 =
      -_tmp1442 * priors_1_0_sqrt_info(1, 2) - _tmp1444 * priors_1_0_sqrt_info(1, 0) +
      _tmp1450 * priors_1_0_sqrt_info(1, 1) + _tmp1451 * priors_1_0_sqrt_info(1, 1) +
      _tmp1452 * priors_1_0_sqrt_info(1, 3) + _tmp1457 * priors_1_0_sqrt_info(1, 5) -
      _tmp1459 * priors_1_0_sqrt_info(1, 0) + _tmp1462 * priors_1_0_sqrt_info(1, 1) -
      _tmp1463 * priors_1_0_sqrt_info(1, 0) + _tmp1580 * priors_1_0_sqrt_info(1, 2) +
      _tmp1581 * priors_1_0_sqrt_info(1, 2);
  const Scalar _tmp1687 = -_tmp1391 * _tmp1682 + _tmp1393 * _tmp1682 + _tmp1681 * _tmp299;
  const Scalar _tmp1688 = 2 * _tmp1687;
  const Scalar _tmp1689 = _tmp1160 * _tmp1561 - _tmp1162 * _tmp1561 + _tmp1560 * _tmp366;
  const Scalar _tmp1690 = 2 * _tmp1689;
  const Scalar _tmp1691 =
      _tmp1317 * _tmp1447 + _tmp1318 * _tmp1449 - _tmp1319 * _tmp1458 -
      _tmp1442 * priors_1_0_sqrt_info(0, 2) - _tmp1444 * priors_1_0_sqrt_info(0, 0) +
      _tmp1452 * priors_1_0_sqrt_info(0, 3) + _tmp1457 * priors_1_0_sqrt_info(0, 5) +
      _tmp1461 * _tmp75 - _tmp1522 * _tmp99 + _tmp1581 * priors_1_0_sqrt_info(0, 2) +
      _tmp1582 * _tmp75;
  const Scalar _tmp1692 = _tmp1533 * _tmp761 - _tmp1535 * _tmp943 + _tmp1535 * _tmp945;
  const Scalar _tmp1693 = 2 * _tmp1692;
  const Scalar _tmp1694 = _tmp253 * (-_tmp1564 + _tmp247);
  const Scalar _tmp1695 = _tmp1306 * _tmp254 - _tmp1566 * _tmp1694;
  const Scalar _tmp1696 =
      -_tmp1350 * _tmp1695 + _tmp1351 * _tmp1695 + _tmp1694 * _tmp267 * views_1_calibration(1, 0);
  const Scalar _tmp1697 = 2 * _tmp1696;
  const Scalar _tmp1698 = _tmp357 * (_tmp1557 + _tmp345);
  const Scalar _tmp1699 = -_tmp1150 * _tmp352 + _tmp1698 * _tmp358;
  const Scalar _tmp1700 = _tmp1160 * _tmp1699 - _tmp1162 * _tmp1699 - _tmp1163 * _tmp352;
  const Scalar _tmp1701 = 2 * _tmp1700;
  const Scalar _tmp1702 = _tmp282 * (_tmp1677 + _tmp285);
  const Scalar _tmp1703 = -_tmp1215 * _tmp282 + _tmp1679 * _tmp1702;
  const Scalar _tmp1704 = -_tmp1391 * _tmp1703 + _tmp1392 * _tmp282 + _tmp1393 * _tmp1703;
  const Scalar _tmp1705 = 2 * _tmp1704;
  const Scalar _tmp1706 = std::pow(_tmp4, Scalar(2));
  const Scalar _tmp1707 = _tmp1063 * _tmp1706;
  const Scalar _tmp1708 = _tmp1058 * _tmp1707;
  const Scalar _tmp1709 = _tmp1072 * _tmp1706;
  const Scalar _tmp1710 =
      _tmp1077 * priors_0_1_sqrt_info(2, 0) - _tmp1084 * priors_0_1_sqrt_info(2, 0) -
      _tmp1089 * priors_0_1_sqrt_info(2, 2) - _tmp1091 * priors_0_1_sqrt_info(2, 0) +
      _tmp1097 * _tmp1467 + _tmp1097 * _tmp1477 + _tmp1470 * priors_0_1_sqrt_info(2, 1) -
      _tmp1708 * priors_0_1_sqrt_info(2, 2) - _tmp1709 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp1711 = _tmp1203 * _tmp517 + _tmp1541 * _tmp521;
  const Scalar _tmp1712 = _tmp1339 * _tmp1711 - _tmp1340 * _tmp1711 + _tmp1341 * _tmp517;
  const Scalar _tmp1713 = 2 * _tmp1712;
  const Scalar _tmp1714 = _tmp1534 * _tmp752 + _tmp748 * _tmp940;
  const Scalar _tmp1715 = -_tmp1714 * _tmp943 + _tmp1714 * _tmp945 + _tmp748 * _tmp935;
  const Scalar _tmp1716 = 2 * _tmp1715;
  const Scalar _tmp1717 = _tmp445 * (_tmp1509 + _tmp448);
  const Scalar _tmp1718 = -_tmp1331 * _tmp445 + _tmp1513 * _tmp1717;
  const Scalar _tmp1719 =
      _tmp1359 * _tmp1718 - _tmp1360 * _tmp1718 + _tmp1717 * _tmp462 * views_1_calibration(1, 0);
  const Scalar _tmp1720 = 2 * _tmp1719;
  const Scalar _tmp1721 = _tmp1445 + _tmp77 + _tmp953;
  const Scalar _tmp1722 = _tmp1721 * _tmp955;
  const Scalar _tmp1723 = _tmp100 + _tmp105 + _tmp966;
  const Scalar _tmp1724 = _tmp1723 * _tmp82;
  const Scalar _tmp1725 = _tmp1724 * _tmp972;
  const Scalar _tmp1726 = _tmp91 + _tmp92 + _tmp962;
  const Scalar _tmp1727 = _tmp1726 * _tmp956;
  const Scalar _tmp1728 = _tmp1724 * _tmp960;
  const Scalar _tmp1729 = _tmp1723 * _tmp97;
  const Scalar _tmp1730 = _tmp1729 * _tmp959;
  const Scalar _tmp1731 = _tmp106 * _tmp1723;
  const Scalar _tmp1732 = _tmp1731 * _tmp959;
  const Scalar _tmp1733 = -_tmp127 - _tmp128 + _tmp1453 + _tmp1454 + _tmp1455 - _tmp1456;
  const Scalar _tmp1734 = _tmp65 - _tmp986 - _tmp987 + _tmp988 - _tmp989;
  const Scalar _tmp1735 = _tmp955 * (_tmp1460 + _tmp67 + _tmp978);
  const Scalar _tmp1736 = _tmp1735 * _tmp74;
  const Scalar _tmp1737 =
      -_tmp1273 * _tmp1731 + _tmp1275 * _tmp1729 - _tmp135 * _tmp1722 + _tmp135 * _tmp1730 -
      _tmp136 * _tmp1732 - _tmp1725 * priors_1_0_sqrt_info(2, 1) -
      _tmp1727 * priors_1_0_sqrt_info(2, 1) - _tmp1728 * priors_1_0_sqrt_info(2, 1) +
      _tmp1733 * priors_1_0_sqrt_info(2, 4) + _tmp1734 * priors_1_0_sqrt_info(2, 3) -
      _tmp1736 * priors_1_0_sqrt_info(2, 2);
  const Scalar _tmp1738 =
      _tmp1077 * priors_0_1_sqrt_info(4, 0) - _tmp1084 * priors_0_1_sqrt_info(4, 0) -
      _tmp1089 * priors_0_1_sqrt_info(4, 2) - _tmp1091 * priors_0_1_sqrt_info(4, 0) +
      _tmp1468 * priors_0_1_sqrt_info(4, 1) + _tmp1470 * priors_0_1_sqrt_info(4, 1) +
      _tmp1473 * priors_0_1_sqrt_info(4, 1) - _tmp1708 * priors_0_1_sqrt_info(4, 2) -
      _tmp1709 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp1739 = _tmp1166 * _tmp1714 - _tmp1167 * _tmp1714 - _tmp1536 * _tmp752;
  const Scalar _tmp1740 = 2 * _tmp1739;
  const Scalar _tmp1741 = _tmp1071 * _tmp1706;
  const Scalar _tmp1742 = -_tmp1083 * _tmp1188 - _tmp1088 * _tmp1186 - _tmp1090 * _tmp1190 -
                          _tmp1186 * _tmp1707 - _tmp1186 * _tmp1741 + _tmp1187 * _tmp1467 +
                          _tmp1187 * _tmp1477 + _tmp13 * _tmp1654 +
                          _tmp1470 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp1743 = _tmp545 * (-_tmp1496 + _tmp548);
  const Scalar _tmp1744 = -_tmp1241 * _tmp545 + _tmp1498 * _tmp1743;
  const Scalar _tmp1745 = _tmp1744 * _tmp554;
  const Scalar _tmp1746 =
      _tmp1244 * _tmp1745 - _tmp1246 * _tmp1745 + _tmp1743 * _tmp562 * views_1_calibration(1, 0);
  const Scalar _tmp1747 = 2 * _tmp1746;
  const Scalar _tmp1748 = _tmp681 * views_1_calibration(1, 0);
  const Scalar _tmp1749 = _tmp1748 * (_tmp1629 + _tmp675);
  const Scalar _tmp1750 = _tmp1109 * _tmp682 - _tmp1749 * _tmp687;
  const Scalar _tmp1751 = _tmp1379 * _tmp1750 - _tmp1380 * _tmp1750 + _tmp1749 * _tmp695;
  const Scalar _tmp1752 = 2 * _tmp1751;
  const Scalar _tmp1753 = _tmp1077 * priors_0_1_sqrt_info(1, 0) - _tmp1082 * _tmp1475 -
                          _tmp1089 * priors_0_1_sqrt_info(1, 2) + _tmp1388 * _tmp1467 +
                          _tmp1388 * _tmp1469 + _tmp1388 * _tmp1477 - _tmp1389 * _tmp1741 -
                          _tmp1476 * _tmp4 - _tmp1708 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp1754 = _tmp1721 * _tmp956;
  const Scalar _tmp1755 = _tmp1729 * _tmp972;
  const Scalar _tmp1756 = _tmp1729 * _tmp960;
  const Scalar _tmp1757 =
      -_tmp1321 * _tmp1731 - _tmp141 * _tmp1732 - _tmp141 * _tmp1735 -
      _tmp1725 * priors_1_0_sqrt_info(5, 1) - _tmp1727 * priors_1_0_sqrt_info(5, 1) -
      _tmp1728 * priors_1_0_sqrt_info(5, 1) + _tmp1733 * priors_1_0_sqrt_info(5, 4) +
      _tmp1734 * priors_1_0_sqrt_info(5, 3) - _tmp1754 * priors_1_0_sqrt_info(5, 0) +
      _tmp1755 * priors_1_0_sqrt_info(5, 0) + _tmp1756 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1758 = _tmp1731 * _tmp960;
  const Scalar _tmp1759 = _tmp1731 * _tmp972;
  const Scalar _tmp1760 =
      -_tmp1725 * priors_1_0_sqrt_info(1, 1) - _tmp1727 * priors_1_0_sqrt_info(1, 1) -
      _tmp1728 * priors_1_0_sqrt_info(1, 1) + _tmp1733 * priors_1_0_sqrt_info(1, 4) +
      _tmp1734 * priors_1_0_sqrt_info(1, 3) - _tmp1736 * priors_1_0_sqrt_info(1, 2) -
      _tmp1754 * priors_1_0_sqrt_info(1, 0) + _tmp1755 * priors_1_0_sqrt_info(1, 0) +
      _tmp1756 * priors_1_0_sqrt_info(1, 0) - _tmp1758 * priors_1_0_sqrt_info(1, 2) -
      _tmp1759 * priors_1_0_sqrt_info(1, 2);
  const Scalar _tmp1761 =
      _tmp1224 * _tmp1703 - _tmp1226 * _tmp1703 - _tmp1702 * _tmp299 * views_1_calibration(1, 0);
  const Scalar _tmp1762 = 2 * _tmp1761;
  const Scalar _tmp1763 = _tmp645 * (-_tmp1619 + _tmp648);
  const Scalar _tmp1764 = -_tmp1124 * _tmp645 + _tmp1621 * _tmp1763;
  const Scalar _tmp1765 = -_tmp1396 * _tmp1764 + _tmp1397 * _tmp1764 - _tmp1398 * _tmp645;
  const Scalar _tmp1766 = 2 * _tmp1765;
  const Scalar _tmp1767 = _tmp1208 * _tmp1711 - _tmp1210 * _tmp1711 + _tmp1668 * _tmp521;
  const Scalar _tmp1768 = 2 * _tmp1767;
  const Scalar _tmp1769 = _tmp183 * (_tmp1524 + _tmp176);
  const Scalar _tmp1770 = -_tmp1177 * _tmp173 + _tmp1769 * _tmp184;
  const Scalar _tmp1771 = -_tmp1401 * _tmp1770 + _tmp1402 * _tmp1770 - _tmp1403 * _tmp173;
  const Scalar _tmp1772 = 2 * _tmp1771;
  const Scalar _tmp1773 = _tmp710 * (_tmp1479 + _tmp713);
  const Scalar _tmp1774 = _tmp1365 * _tmp710 - _tmp1481 * _tmp1773;
  const Scalar _tmp1775 = _tmp1374 * _tmp715;
  const Scalar _tmp1776 = -_tmp1376 * _tmp710 + _tmp1519 * _tmp1774 - _tmp1774 * _tmp1775;
  const Scalar _tmp1777 = 2 * _tmp1776;
  const Scalar _tmp1778 =
      _tmp1076 * _tmp1385 - _tmp1083 * _tmp1385 - _tmp1089 * priors_0_1_sqrt_info(5, 2) -
      _tmp1090 * _tmp1386 + _tmp1468 * priors_0_1_sqrt_info(5, 1) +
      _tmp1470 * priors_0_1_sqrt_info(5, 1) + _tmp1473 * priors_0_1_sqrt_info(5, 1) -
      _tmp1708 * priors_0_1_sqrt_info(5, 2) - _tmp1709 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp1779 = _tmp1416 * _tmp617 + _tmp1573 * _tmp621;
  const Scalar _tmp1780 = _tmp1575 * _tmp1779 - _tmp1576 * _tmp621 - _tmp1577 * _tmp1779;
  const Scalar _tmp1781 = 2 * _tmp1780;
  const Scalar _tmp1782 = _tmp381 * views_1_calibration(1, 0);
  const Scalar _tmp1783 = _tmp1782 * (-_tmp1591 + _tmp384);
  const Scalar _tmp1784 = _tmp1006 * _tmp381 - _tmp1783 * _tmp390;
  const Scalar _tmp1785 = _tmp1597 * _tmp1784 - _tmp1598 * _tmp1784 + _tmp1783 * _tmp398;
  const Scalar _tmp1786 = 2 * _tmp1785;
  const Scalar _tmp1787 = _tmp1229 * _tmp1784 - _tmp1230 * _tmp1784 + _tmp1231 * _tmp381;
  const Scalar _tmp1788 = 2 * _tmp1787;
  const Scalar _tmp1789 = _tmp1181 * _tmp1770 - _tmp1183 * _tmp1770 + _tmp1769 * _tmp201;
  const Scalar _tmp1790 = 2 * _tmp1789;
  const Scalar _tmp1791 =
      -_tmp1406 * _tmp1774 + _tmp1407 * _tmp1774 - _tmp1773 * _tmp727 * views_1_calibration(1, 0);
  const Scalar _tmp1792 = 2 * _tmp1791;
  const Scalar _tmp1793 = _tmp318 * (-_tmp1602 + _tmp312);
  const Scalar _tmp1794 = _tmp1289 * _tmp319 - _tmp1605 * _tmp1793;
  const Scalar _tmp1795 = _tmp1293 * _tmp1794;
  const Scalar _tmp1796 = _tmp1295 * _tmp319 - _tmp1297 * _tmp1794 + _tmp1795 * _tmp320;
  const Scalar _tmp1797 = 2 * _tmp1796;
  const Scalar _tmp1798 = _tmp1311 * _tmp1695 - _tmp1312 * _tmp254 - _tmp1314 * _tmp1695;
  const Scalar _tmp1799 = 2 * _tmp1798;
  const Scalar _tmp1800 = -_tmp1193 * _tmp1699 + _tmp1194 * _tmp1699 + _tmp1698 * _tmp366;
  const Scalar _tmp1801 = 2 * _tmp1800;
  const Scalar _tmp1802 = _tmp1104 * _tmp682 - _tmp1112 * _tmp1750 + _tmp1114 * _tmp1750;
  const Scalar _tmp1803 = 2 * _tmp1802;
  const Scalar _tmp1804 = _tmp216 * (_tmp1432 + _tmp219);
  const Scalar _tmp1805 = -_tmp1257 * _tmp216 + _tmp1434 * _tmp1804;
  const Scalar _tmp1806 =
      -_tmp1261 * _tmp1805 + _tmp1263 * _tmp1805 - _tmp1804 * _tmp234 * views_1_calibration(1, 0);
  const Scalar _tmp1807 = 2 * _tmp1806;
  const Scalar _tmp1808 = _tmp1025 * _tmp816 + _tmp1587 * _tmp820;
  const Scalar _tmp1809 = _tmp1029 * _tmp1808;
  const Scalar _tmp1810 = -_tmp1032 * _tmp1808 + _tmp1585 * _tmp820 + _tmp1809 * _tmp821;
  const Scalar _tmp1811 = 2 * _tmp1810;
  const Scalar _tmp1812 = _tmp1335 * _tmp445 + _tmp1515 * _tmp1718 - _tmp1516 * _tmp1718;
  const Scalar _tmp1813 = 2 * _tmp1812;
  const Scalar _tmp1814 = _tmp413 * (_tmp1488 + _tmp416);
  const Scalar _tmp1815 = _tmp1490 * _tmp1814 - _tmp413 * _tmp908;
  const Scalar _tmp1816 = -_tmp1815 * _tmp948 + _tmp1815 * _tmp949 + _tmp413 * _tmp950;
  const Scalar _tmp1817 = 2 * _tmp1816;
  const Scalar _tmp1818 = _tmp1611 * _tmp786 + _tmp782 * _tmp917;
  const Scalar _tmp1819 = -_tmp1614 * _tmp1818 + _tmp1615 * _tmp1818 + _tmp1616 * _tmp786;
  const Scalar _tmp1820 = 2 * _tmp1819;
  const Scalar _tmp1821 = _tmp1139 * _tmp583 + _tmp1648 * _tmp587;
  const Scalar _tmp1822 = _tmp1143 * _tmp1821;
  const Scalar _tmp1823 = _tmp1146 * _tmp1821 + _tmp1646 * _tmp587 - _tmp1822 * _tmp588;
  const Scalar _tmp1824 = 2 * _tmp1823;
  const Scalar _tmp1825 =
      _tmp1077 * priors_0_1_sqrt_info(0, 0) - _tmp1084 * priors_0_1_sqrt_info(0, 0) -
      _tmp1089 * priors_0_1_sqrt_info(0, 2) - _tmp1091 * priors_0_1_sqrt_info(0, 0) +
      _tmp1348 * _tmp1467 + _tmp1348 * _tmp1477 + _tmp1470 * priors_0_1_sqrt_info(0, 1) -
      _tmp1708 * priors_0_1_sqrt_info(0, 2) - _tmp1709 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp1826 = -_tmp1818 * _tmp995 + _tmp1818 * _tmp996 + _tmp782 * _tmp994;
  const Scalar _tmp1827 = 2 * _tmp1826;
  const Scalar _tmp1828 = _tmp1266 * _tmp583 + _tmp1268 * _tmp1821 - _tmp1822 * _tmp584;
  const Scalar _tmp1829 = 2 * _tmp1828;
  const Scalar _tmp1830 =
      _tmp1505 * _tmp1815 - _tmp1506 * _tmp1815 - _tmp1814 * _tmp430 * views_1_calibration(1, 0);
  const Scalar _tmp1831 = 2 * _tmp1830;
  const Scalar _tmp1832 =
      -_tmp1383 * _tmp1731 - _tmp139 * _tmp1732 - _tmp139 * _tmp1735 -
      _tmp1725 * priors_1_0_sqrt_info(4, 1) - _tmp1727 * priors_1_0_sqrt_info(4, 1) -
      _tmp1728 * priors_1_0_sqrt_info(4, 1) + _tmp1733 * priors_1_0_sqrt_info(4, 4) +
      _tmp1734 * priors_1_0_sqrt_info(4, 3) - _tmp1754 * priors_1_0_sqrt_info(4, 0) +
      _tmp1755 * priors_1_0_sqrt_info(4, 0) + _tmp1756 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1833 = _tmp1279 * _tmp1744 - _tmp1280 * _tmp545 - _tmp1502 * _tmp1744;
  const Scalar _tmp1834 = 2 * _tmp1833;
  const Scalar _tmp1835 = -_tmp1354 * _tmp1805 - _tmp1355 * _tmp216 + _tmp1356 * _tmp1805;
  const Scalar _tmp1836 = 2 * _tmp1835;
  const Scalar _tmp1837 = _tmp1041 * _tmp483 + _tmp1549 * _tmp487;
  const Scalar _tmp1838 = _tmp1046 * _tmp1837 - _tmp1048 * _tmp1837 - _tmp1552 * _tmp487;
  const Scalar _tmp1839 = 2 * _tmp1838;
  const Scalar _tmp1840 = -_tmp1036 * _tmp483 * _tmp496 + _tmp1093 * _tmp1837 - _tmp1094 * _tmp1837;
  const Scalar _tmp1841 = 2 * _tmp1840;
  const Scalar _tmp1842 = -_tmp1421 * _tmp1779 + _tmp1423 * _tmp1779 + _tmp1424 * _tmp617;
  const Scalar _tmp1843 = 2 * _tmp1842;
  const Scalar _tmp1844 =
      -_tmp1344 * _tmp1794 - _tmp1793 * _tmp332 * views_1_calibration(1, 0) + _tmp1795 * _tmp324;
  const Scalar _tmp1845 = 2 * _tmp1844;
  const Scalar _tmp1846 =
      _tmp1128 * _tmp1764 - _tmp1130 * _tmp1764 - _tmp1763 * _tmp662 * views_1_calibration(1, 0);
  const Scalar _tmp1847 = 2 * _tmp1846;
  const Scalar _tmp1848 = _tmp1051 * _tmp816 - _tmp1052 * _tmp1808 + _tmp1809 * _tmp817;
  const Scalar _tmp1849 = 2 * _tmp1848;
  const Scalar _tmp1850 = _tmp1724 * _tmp971;
  const Scalar _tmp1851 = _tmp1726 * _tmp955;
  const Scalar _tmp1852 = _tmp1724 * _tmp959;
  const Scalar _tmp1853 =
      -_tmp1317 * _tmp1731 + _tmp1319 * _tmp1729 - _tmp1722 * _tmp99 + _tmp1730 * _tmp99 +
      _tmp1733 * priors_1_0_sqrt_info(0, 4) + _tmp1734 * priors_1_0_sqrt_info(0, 3) -
      _tmp1736 * priors_1_0_sqrt_info(0, 2) - _tmp1758 * priors_1_0_sqrt_info(0, 2) -
      _tmp1850 * _tmp75 - _tmp1851 * _tmp75 - _tmp1852 * _tmp75;
  const Scalar _tmp1854 =
      -_tmp1014 * _tmp1850 - _tmp1014 * _tmp1851 - _tmp1014 * _tmp1852 +
      _tmp1733 * priors_1_0_sqrt_info(3, 4) + _tmp1734 * priors_1_0_sqrt_info(3, 3) -
      _tmp1736 * priors_1_0_sqrt_info(3, 2) - _tmp1754 * priors_1_0_sqrt_info(3, 0) +
      _tmp1755 * priors_1_0_sqrt_info(3, 0) + _tmp1756 * priors_1_0_sqrt_info(3, 0) -
      _tmp1758 * priors_1_0_sqrt_info(3, 2) - _tmp1759 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp1855 = _tmp937 * landmarks_17_;
  const Scalar _tmp1856 = _tmp752 * landmarks_17_;
  const Scalar _tmp1857 = _tmp116 * _tmp1855 - _tmp1856 * _tmp58;
  const Scalar _tmp1858 = _tmp748 * landmarks_17_;
  const Scalar _tmp1859 = _tmp933 * landmarks_17_;
  const Scalar _tmp1860 = _tmp116 * _tmp1859 + _tmp122 * _tmp1858;
  const Scalar _tmp1861 = _tmp1857 * _tmp753 + _tmp1860 * _tmp749;
  const Scalar _tmp1862 = -_tmp1166 * _tmp1861 + _tmp1167 * _tmp1861 + _tmp1857 * _tmp761;
  const Scalar _tmp1863 = 2 * _tmp1862;
  const Scalar _tmp1864 = _tmp58 * views_1_calibration(1, 0);
  const Scalar _tmp1865 = _tmp253 * landmarks_2_;
  const Scalar _tmp1866 = _tmp1303 * landmarks_2_;
  const Scalar _tmp1867 = -_tmp116 * _tmp1866 + _tmp1864 * _tmp1865;
  const Scalar _tmp1868 = _tmp1308 * landmarks_2_;
  const Scalar _tmp1869 = _tmp122 * views_1_calibration(0, 0);
  const Scalar _tmp1870 = _tmp116 * _tmp1868 - _tmp1865 * _tmp1869;
  const Scalar _tmp1871 = _tmp1867 * _tmp259 + _tmp1870 * _tmp255;
  const Scalar _tmp1872 = _tmp1350 * _tmp1871 - _tmp1351 * _tmp1871 + _tmp1867 * _tmp267;
  const Scalar _tmp1873 = 2 * _tmp1872;
  const Scalar _tmp1874 = _tmp1594 * landmarks_6_;
  const Scalar _tmp1875 = _tmp381 * landmarks_6_;
  const Scalar _tmp1876 = _tmp116 * _tmp1874 - _tmp1869 * _tmp1875;
  const Scalar _tmp1877 = _tmp1002 * landmarks_6_;
  const Scalar _tmp1878 = -_tmp116 * _tmp1877 + _tmp1864 * _tmp1875;
  const Scalar _tmp1879 = _tmp1876 * _tmp386 + _tmp1878 * _tmp390;
  const Scalar _tmp1880 = _tmp1229 * _tmp1879 - _tmp1230 * _tmp1879 + _tmp1876 * _tmp398;
  const Scalar _tmp1881 = 2 * _tmp1880;
  const Scalar _tmp1882 = _tmp19 * priors_0_1_sqrt_info(5, 3) -
                          _tmp32 * priors_0_1_sqrt_info(5, 5) + _tmp38 * priors_0_1_sqrt_info(5, 4);
  const Scalar _tmp1883 = 2 * _tmp1882;
  const Scalar _tmp1884 = _tmp413 * landmarks_7_;
  const Scalar _tmp1885 = _tmp901 * landmarks_7_;
  const Scalar _tmp1886 = _tmp116 * _tmp1885 + _tmp1864 * _tmp1884;
  const Scalar _tmp1887 = _tmp1491 * landmarks_7_;
  const Scalar _tmp1888 = _tmp116 * _tmp1887 + _tmp1869 * _tmp1884;
  const Scalar _tmp1889 = _tmp1886 * _tmp422 - _tmp1888 * _tmp418;
  const Scalar _tmp1890 = -_tmp1505 * _tmp1889 + _tmp1506 * _tmp1889 + _tmp1886 * _tmp430;
  const Scalar _tmp1891 = 2 * _tmp1890;
  const Scalar _tmp1892 = _tmp1023 * landmarks_19_;
  const Scalar _tmp1893 = _tmp820 * landmarks_19_;
  const Scalar _tmp1894 = _tmp116 * _tmp1892 - _tmp1893 * _tmp58;
  const Scalar _tmp1895 = _tmp816 * landmarks_19_;
  const Scalar _tmp1896 = _tmp1027 * landmarks_19_;
  const Scalar _tmp1897 = _tmp116 * _tmp1896 + _tmp122 * _tmp1895;
  const Scalar _tmp1898 = _tmp1894 * _tmp821 + _tmp1897 * _tmp817;
  const Scalar _tmp1899 = _tmp1030 * _tmp1898 - _tmp1032 * _tmp1898 + _tmp1894 * _tmp829;
  const Scalar _tmp1900 = 2 * _tmp1899;
  const Scalar _tmp1901 = -_tmp116 * priors_1_0_sqrt_info(5, 5) +
                          _tmp122 * priors_1_0_sqrt_info(5, 3) -
                          _tmp58 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp1902 = 2 * _tmp1901;
  const Scalar _tmp1903 = _tmp116 * landmarks_5_;
  const Scalar _tmp1904 = _tmp351 * landmarks_5_;
  const Scalar _tmp1905 = _tmp1156 * _tmp1903 + _tmp1864 * _tmp1904;
  const Scalar _tmp1906 = _tmp1153 * _tmp1903 + _tmp1869 * _tmp1904;
  const Scalar _tmp1907 = -_tmp1905 * _tmp358 + _tmp1906 * _tmp353;
  const Scalar _tmp1908 = _tmp1193 * _tmp1907 - _tmp1194 * _tmp1907 + _tmp1905 * _tmp366;
  const Scalar _tmp1909 = 2 * _tmp1908;
  const Scalar _tmp1910 = -_tmp116 * priors_1_0_sqrt_info(4, 5) +
                          _tmp122 * priors_1_0_sqrt_info(4, 3) -
                          _tmp58 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp1911 = 2 * _tmp1910;
  const Scalar _tmp1912 = _tmp1219 * landmarks_3_;
  const Scalar _tmp1913 = _tmp282 * landmarks_3_;
  const Scalar _tmp1914 = _tmp116 * _tmp1912 + _tmp1864 * _tmp1913;
  const Scalar _tmp1915 = _tmp1680 * landmarks_3_;
  const Scalar _tmp1916 = _tmp116 * _tmp1915 + _tmp1869 * _tmp1913;
  const Scalar _tmp1917 = -_tmp1914 * _tmp291 + _tmp1916 * _tmp287;
  const Scalar _tmp1918 = _tmp1224 * _tmp1917 - _tmp1226 * _tmp1917 + _tmp1914 * _tmp299;
  const Scalar _tmp1919 = 2 * _tmp1918;
  const Scalar _tmp1920 = _tmp1499 * landmarks_11_;
  const Scalar _tmp1921 = _tmp545 * landmarks_11_;
  const Scalar _tmp1922 = _tmp116 * _tmp1920 - _tmp1869 * _tmp1921;
  const Scalar _tmp1923 = _tmp1237 * landmarks_11_;
  const Scalar _tmp1924 = _tmp116 * _tmp1923 - _tmp1864 * _tmp1921;
  const Scalar _tmp1925 = _tmp1922 * _tmp550 - _tmp1924 * _tmp554;
  const Scalar _tmp1926 = _tmp1245 * _tmp1925 - _tmp1657 * _tmp1925 - _tmp1924 * _tmp562;
  const Scalar _tmp1927 = 2 * _tmp1926;
  const Scalar _tmp1928 = _tmp645 * landmarks_14_;
  const Scalar _tmp1929 = _tmp1121 * landmarks_14_;
  const Scalar _tmp1930 = -_tmp116 * _tmp1929 + _tmp1864 * _tmp1928;
  const Scalar _tmp1931 = _tmp1622 * landmarks_14_;
  const Scalar _tmp1932 = -_tmp116 * _tmp1931 + _tmp1869 * _tmp1928;
  const Scalar _tmp1933 = _tmp1930 * _tmp654 - _tmp1932 * _tmp650;
  const Scalar _tmp1934 = _tmp1128 * _tmp1933 - _tmp1130 * _tmp1933 - _tmp1930 * _tmp662;
  const Scalar _tmp1935 = 2 * _tmp1934;
  const Scalar _tmp1936 = _tmp1413 * landmarks_13_;
  const Scalar _tmp1937 = _tmp621 * landmarks_13_;
  const Scalar _tmp1938 = _tmp116 * _tmp1936 - _tmp1937 * _tmp58;
  const Scalar _tmp1939 = _tmp617 * landmarks_13_;
  const Scalar _tmp1940 = _tmp1418 * landmarks_13_;
  const Scalar _tmp1941 = _tmp116 * _tmp1940 + _tmp122 * _tmp1939;
  const Scalar _tmp1942 = _tmp1938 * _tmp622 + _tmp1941 * _tmp618;
  const Scalar _tmp1943 = _tmp1420 * _tmp1942;
  const Scalar _tmp1944 = -_tmp1577 * _tmp1942 - _tmp1938 * _tmp630 + _tmp1943 * _tmp622;
  const Scalar _tmp1945 = 2 * _tmp1944;
  const Scalar _tmp1946 = _tmp782 * landmarks_18_;
  const Scalar _tmp1947 = _tmp920 * landmarks_18_;
  const Scalar _tmp1948 = _tmp116 * _tmp1947 + _tmp122 * _tmp1946;
  const Scalar _tmp1949 = _tmp923 * landmarks_18_;
  const Scalar _tmp1950 = _tmp786 * landmarks_18_;
  const Scalar _tmp1951 = _tmp116 * _tmp1949 - _tmp1950 * _tmp58;
  const Scalar _tmp1952 = _tmp1948 * _tmp783 + _tmp1951 * _tmp787;
  const Scalar _tmp1953 = _tmp1948 * _tmp795 - _tmp1952 * _tmp995 + _tmp1952 * _tmp996;
  const Scalar _tmp1954 = 2 * _tmp1953;
  const Scalar _tmp1955 = _tmp116 * landmarks_4_;
  const Scalar _tmp1956 = _tmp319 * landmarks_4_;
  const Scalar _tmp1957 = -_tmp122 * _tmp1956 + _tmp1291 * _tmp1955;
  const Scalar _tmp1958 = _tmp318 * landmarks_4_;
  const Scalar _tmp1959 = _tmp1287 * _tmp1955 - _tmp1864 * _tmp1958;
  const Scalar _tmp1960 = -_tmp1957 * _tmp320 + _tmp1959 * _tmp324;
  const Scalar _tmp1961 = -_tmp1294 * _tmp1960 + _tmp1297 * _tmp1960 + _tmp1957 * _tmp332;
  const Scalar _tmp1962 = 2 * _tmp1961;
  const Scalar _tmp1963 = _tmp19 * priors_0_1_sqrt_info(4, 3) -
                          _tmp32 * priors_0_1_sqrt_info(4, 5) + _tmp38 * priors_0_1_sqrt_info(4, 4);
  const Scalar _tmp1964 = 2 * _tmp1963;
  const Scalar _tmp1965 = _tmp1107 * landmarks_15_;
  const Scalar _tmp1966 = _tmp681 * landmarks_15_;
  const Scalar _tmp1967 = _tmp116 * _tmp1965 + _tmp1864 * _tmp1966;
  const Scalar _tmp1968 = _tmp1102 * landmarks_15_;
  const Scalar _tmp1969 = _tmp116 * _tmp1968 + _tmp122 * _tmp682 * landmarks_15_;
  const Scalar _tmp1970 = _tmp1967 * _tmp687 - _tmp1969 * _tmp683;
  const Scalar _tmp1971 = -_tmp1379 * _tmp1970 + _tmp1380 * _tmp1970 + _tmp1967 * _tmp695;
  const Scalar _tmp1972 = 2 * _tmp1971;
  const Scalar _tmp1973 = _tmp710 * landmarks_16_;
  const Scalar _tmp1974 = _tmp116 * landmarks_16_;
  const Scalar _tmp1975 = _tmp1482 * _tmp1974 + _tmp1869 * _tmp1973;
  const Scalar _tmp1976 = _tmp1370 * _tmp1974 + _tmp1864 * _tmp1973;
  const Scalar _tmp1977 = _tmp1975 * _tmp715 - _tmp1976 * _tmp719;
  const Scalar _tmp1978 = _tmp1406 * _tmp1977 - _tmp1407 * _tmp1977 + _tmp1976 * _tmp727;
  const Scalar _tmp1979 = 2 * _tmp1978;
  const Scalar _tmp1980 = _tmp1173 * landmarks_0_;
  const Scalar _tmp1981 = _tmp183 * landmarks_0_;
  const Scalar _tmp1982 = _tmp116 * _tmp1980 + _tmp1981 * _tmp58;
  const Scalar _tmp1983 = _tmp173 * landmarks_0_;
  const Scalar _tmp1984 = _tmp1527 * landmarks_0_;
  const Scalar _tmp1985 = _tmp116 * _tmp1984 + _tmp1869 * _tmp1983;
  const Scalar _tmp1986 = _tmp179 * _tmp1985 - _tmp184 * _tmp1982;
  const Scalar _tmp1987 = _tmp184 * _tmp1986;
  const Scalar _tmp1988 = -_tmp1180 * _tmp1987 + _tmp1182 * _tmp1987 + _tmp1982 * _tmp201;
  const Scalar _tmp1989 = 2 * _tmp1988;
  const Scalar _tmp1990 = _tmp1888 * _tmp430 - _tmp1889 * _tmp948 + _tmp1889 * _tmp949;
  const Scalar _tmp1991 = 2 * _tmp1990;
  const Scalar _tmp1992 = _tmp1136 * landmarks_12_;
  const Scalar _tmp1993 = _tmp587 * landmarks_12_;
  const Scalar _tmp1994 = _tmp116 * _tmp1992 - _tmp1993 * _tmp58;
  const Scalar _tmp1995 = _tmp583 * landmarks_12_;
  const Scalar _tmp1996 = _tmp1141 * landmarks_12_;
  const Scalar _tmp1997 = _tmp116 * _tmp1996 + _tmp122 * _tmp1995;
  const Scalar _tmp1998 = _tmp1994 * _tmp588 + _tmp1997 * _tmp584;
  const Scalar _tmp1999 = _tmp1267 * _tmp1998 - _tmp1268 * _tmp1998 - _tmp1997 * _tmp596;
  const Scalar _tmp2000 = 2 * _tmp1999;
  const Scalar _tmp2001 = _tmp19 * priors_0_1_sqrt_info(0, 3) -
                          _tmp32 * priors_0_1_sqrt_info(0, 5) + _tmp38 * priors_0_1_sqrt_info(0, 4);
  const Scalar _tmp2002 = 2 * _tmp2001;
  const Scalar _tmp2003 = _tmp517 * landmarks_10_;
  const Scalar _tmp2004 = _tmp116 * landmarks_10_;
  const Scalar _tmp2005 = _tmp1205 * _tmp2004 + _tmp122 * _tmp2003;
  const Scalar _tmp2006 = _tmp521 * landmarks_10_;
  const Scalar _tmp2007 = -_tmp1200 * _tmp2004 + _tmp2006 * _tmp58;
  const Scalar _tmp2008 = _tmp2005 * _tmp518 - _tmp2007 * _tmp522;
  const Scalar _tmp2009 = _tmp1208 * _tmp2008 - _tmp1210 * _tmp2008 - _tmp2007 * _tmp530;
  const Scalar _tmp2010 = 2 * _tmp2009;
  const Scalar _tmp2011 = _tmp19 * priors_0_1_sqrt_info(1, 3) -
                          _tmp32 * priors_0_1_sqrt_info(1, 5) + _tmp38 * priors_0_1_sqrt_info(1, 4);
  const Scalar _tmp2012 = 2 * _tmp2011;
  const Scalar _tmp2013 = _tmp1339 * _tmp2008 - _tmp1340 * _tmp2008 + _tmp2005 * _tmp530;
  const Scalar _tmp2014 = 2 * _tmp2013;
  const Scalar _tmp2015 = -_tmp1597 * _tmp1879 + _tmp1598 * _tmp1879 + _tmp1878 * _tmp398;
  const Scalar _tmp2016 = 2 * _tmp2015;
  const Scalar _tmp2017 = _tmp216 * landmarks_1_;
  const Scalar _tmp2018 = _tmp1435 * landmarks_1_;
  const Scalar _tmp2019 = _tmp116 * _tmp2018 + _tmp1869 * _tmp2017;
  const Scalar _tmp2020 = _tmp1253 * landmarks_1_;
  const Scalar _tmp2021 = _tmp116 * _tmp2020 + _tmp1864 * _tmp2017;
  const Scalar _tmp2022 = _tmp2019 * _tmp221 - _tmp2021 * _tmp226;
  const Scalar _tmp2023 = -_tmp1354 * _tmp2022 + _tmp1356 * _tmp2022 + _tmp2019 * _tmp234;
  const Scalar _tmp2024 = 2 * _tmp2023;
  const Scalar _tmp2025 = -_tmp1261 * _tmp2022 + _tmp1263 * _tmp2022 + _tmp2021 * _tmp234;
  const Scalar _tmp2026 = 2 * _tmp2025;
  const Scalar _tmp2027 = _tmp1860 * _tmp761 - _tmp1861 * _tmp943 + _tmp1861 * _tmp945;
  const Scalar _tmp2028 = 2 * _tmp2027;
  const Scalar _tmp2029 = -_tmp1144 * _tmp1998 + _tmp1146 * _tmp1998 + _tmp1994 * _tmp596;
  const Scalar _tmp2030 = 2 * _tmp2029;
  const Scalar _tmp2031 = -_tmp1344 * _tmp1960 + _tmp1345 * _tmp1960 + _tmp1959 * _tmp332;
  const Scalar _tmp2032 = 2 * _tmp2031;
  const Scalar _tmp2033 = _tmp445 * landmarks_8_;
  const Scalar _tmp2034 = _tmp116 * landmarks_8_;
  const Scalar _tmp2035 = _tmp1511 * _tmp2034 + _tmp1869 * _tmp2033;
  const Scalar _tmp2036 = _tmp1328 * _tmp2034 + _tmp1864 * _tmp2033;
  const Scalar _tmp2037 = _tmp2035 * _tmp450 - _tmp2036 * _tmp454;
  const Scalar _tmp2038 = _tmp1515 * _tmp2037 - _tmp1516 * _tmp2037 - _tmp2035 * _tmp462;
  const Scalar _tmp2039 = 2 * _tmp2038;
  const Scalar _tmp2040 = -_tmp1519 * _tmp1977 + _tmp1775 * _tmp1977 + _tmp1975 * _tmp727;
  const Scalar _tmp2041 = 2 * _tmp2040;
  const Scalar _tmp2042 = _tmp1359 * _tmp2037 - _tmp1360 * _tmp2037 - _tmp2036 * _tmp462;
  const Scalar _tmp2043 = 2 * _tmp2042;
  const Scalar _tmp2044 = -_tmp116 * priors_1_0_sqrt_info(2, 5) +
                          _tmp122 * priors_1_0_sqrt_info(2, 3) -
                          _tmp58 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2045 = 2 * _tmp2044;
  const Scalar _tmp2046 = _tmp116 * landmarks_9_;
  const Scalar _tmp2047 = _tmp487 * landmarks_9_;
  const Scalar _tmp2048 = _tmp1550 * _tmp2046 - _tmp2047 * _tmp58;
  const Scalar _tmp2049 = _tmp483 * landmarks_9_;
  const Scalar _tmp2050 = _tmp1043 * _tmp2046 + _tmp122 * _tmp2049;
  const Scalar _tmp2051 = _tmp2048 * _tmp488 + _tmp2050 * _tmp484;
  const Scalar _tmp2052 = _tmp2051 * _tmp488;
  const Scalar _tmp2053 = _tmp1045 * _tmp2052 - _tmp1047 * _tmp2052 - _tmp2048 * _tmp496;
  const Scalar _tmp2054 = 2 * _tmp2053;
  const Scalar _tmp2055 = -_tmp1396 * _tmp1933 + _tmp1397 * _tmp1933 - _tmp1932 * _tmp662;
  const Scalar _tmp2056 = 2 * _tmp2055;
  const Scalar _tmp2057 = _tmp1093 * _tmp2051 - _tmp1094 * _tmp2051 - _tmp2050 * _tmp496;
  const Scalar _tmp2058 = 2 * _tmp2057;
  const Scalar _tmp2059 = -_tmp1401 * _tmp1986 + _tmp1402 * _tmp1986 + _tmp1985 * _tmp201;
  const Scalar _tmp2060 = 2 * _tmp2059;
  const Scalar _tmp2061 = -_tmp1391 * _tmp1917 + _tmp1393 * _tmp1917 - _tmp1916 * _tmp299;
  const Scalar _tmp2062 = 2 * _tmp2061;
  const Scalar _tmp2063 = -_tmp116 * priors_1_0_sqrt_info(3, 5) +
                          _tmp122 * priors_1_0_sqrt_info(3, 3) -
                          _tmp58 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp2064 = 2 * _tmp2063;
  const Scalar _tmp2065 = _tmp1279 * _tmp1925 - _tmp1502 * _tmp1925 + _tmp1922 * _tmp562;
  const Scalar _tmp2066 = 2 * _tmp2065;
  const Scalar _tmp2067 = _tmp19 * priors_0_1_sqrt_info(3, 3) -
                          _tmp32 * priors_0_1_sqrt_info(3, 5) + _tmp38 * priors_0_1_sqrt_info(3, 4);
  const Scalar _tmp2068 = 2 * _tmp2067;
  const Scalar _tmp2069 = _tmp1052 * _tmp1898 - _tmp1053 * _tmp1898 - _tmp1897 * _tmp829;
  const Scalar _tmp2070 = 2 * _tmp2069;
  const Scalar _tmp2071 = -_tmp1160 * _tmp1907 + _tmp1162 * _tmp1907 - _tmp1906 * _tmp366;
  const Scalar _tmp2072 = 2 * _tmp2071;
  const Scalar _tmp2073 = -_tmp116 * priors_1_0_sqrt_info(1, 5) +
                          _tmp122 * priors_1_0_sqrt_info(1, 3) -
                          _tmp58 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp2074 = 2 * _tmp2073;
  const Scalar _tmp2075 = -_tmp1614 * _tmp1952 + _tmp1615 * _tmp1952 + _tmp1951 * _tmp795;
  const Scalar _tmp2076 = 2 * _tmp2075;
  const Scalar _tmp2077 = -_tmp1423 * _tmp1942 - _tmp1941 * _tmp630 + _tmp1943 * _tmp618;
  const Scalar _tmp2078 = 2 * _tmp2077;
  const Scalar _tmp2079 = -_tmp116 * priors_1_0_sqrt_info(0, 5) +
                          _tmp122 * priors_1_0_sqrt_info(0, 3) -
                          _tmp58 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp2080 = 2 * _tmp2079;
  const Scalar _tmp2081 = _tmp1871 * _tmp255;
  const Scalar _tmp2082 = -_tmp1310 * _tmp2081 + _tmp1313 * _tmp2081 + _tmp1870 * _tmp267;
  const Scalar _tmp2083 = 2 * _tmp2082;
  const Scalar _tmp2084 = -_tmp1112 * _tmp1970 + _tmp1114 * _tmp1970 - _tmp1969 * _tmp695;
  const Scalar _tmp2085 = 2 * _tmp2084;
  const Scalar _tmp2086 = _tmp19 * priors_0_1_sqrt_info(2, 3) -
                          _tmp32 * priors_0_1_sqrt_info(2, 5) + _tmp38 * priors_0_1_sqrt_info(2, 4);
  const Scalar _tmp2087 = 2 * _tmp2086;
  const Scalar _tmp2088 = -_tmp22 * priors_0_1_sqrt_info(5, 3) -
                          _tmp35 * priors_0_1_sqrt_info(5, 5) + _tmp37 * priors_0_1_sqrt_info(5, 4);
  const Scalar _tmp2089 = 2 * _tmp2088;
  const Scalar _tmp2090 = _tmp51 * views_1_calibration(1, 0);
  const Scalar _tmp2091 = _tmp112 * _tmp1912 + _tmp1913 * _tmp2090;
  const Scalar _tmp2092 = _tmp125 * views_1_calibration(0, 0);
  const Scalar _tmp2093 = _tmp112 * _tmp1915 + _tmp1913 * _tmp2092;
  const Scalar _tmp2094 = _tmp2091 * _tmp291 - _tmp2093 * _tmp287;
  const Scalar _tmp2095 = _tmp2094 * _tmp291;
  const Scalar _tmp2096 = -_tmp1223 * _tmp2095 + _tmp1225 * _tmp2095 + _tmp2091 * _tmp299;
  const Scalar _tmp2097 = 2 * _tmp2096;
  const Scalar _tmp2098 = -_tmp112 * _tmp1931 + _tmp1928 * _tmp2092;
  const Scalar _tmp2099 = _tmp112 * _tmp1929 - _tmp1928 * _tmp2090;
  const Scalar _tmp2100 = _tmp2098 * _tmp650 + _tmp2099 * _tmp654;
  const Scalar _tmp2101 = _tmp2100 * _tmp654;
  const Scalar _tmp2102 = -_tmp1127 * _tmp2101 + _tmp1129 * _tmp2101 + _tmp2099 * _tmp662;
  const Scalar _tmp2103 = 2 * _tmp2102;
  const Scalar _tmp2104 = -_tmp22 * priors_0_1_sqrt_info(1, 3) -
                          _tmp35 * priors_0_1_sqrt_info(1, 5) + _tmp37 * priors_0_1_sqrt_info(1, 4);
  const Scalar _tmp2105 = 2 * _tmp2104;
  const Scalar _tmp2106 = _tmp1370 * landmarks_16_;
  const Scalar _tmp2107 = _tmp112 * _tmp2106 + _tmp1973 * _tmp2090;
  const Scalar _tmp2108 = _tmp1482 * landmarks_16_;
  const Scalar _tmp2109 = _tmp112 * _tmp2108 + _tmp1973 * _tmp2092;
  const Scalar _tmp2110 = -_tmp2107 * _tmp719 + _tmp2109 * _tmp715;
  const Scalar _tmp2111 = _tmp1406 * _tmp2110 - _tmp1407 * _tmp2110 + _tmp2107 * _tmp727;
  const Scalar _tmp2112 = 2 * _tmp2111;
  const Scalar _tmp2113 = _tmp112 * _tmp1866 - _tmp1865 * _tmp2090;
  const Scalar _tmp2114 = _tmp112 * _tmp1868 - _tmp1865 * _tmp2092;
  const Scalar _tmp2115 = _tmp2113 * _tmp259 - _tmp2114 * _tmp255;
  const Scalar _tmp2116 = -_tmp1311 * _tmp2115 + _tmp1314 * _tmp2115 - _tmp2114 * _tmp267;
  const Scalar _tmp2117 = 2 * _tmp2116;
  const Scalar _tmp2118 = _tmp112 * landmarks_10_;
  const Scalar _tmp2119 = -_tmp1200 * _tmp2118 + _tmp2006 * _tmp51;
  const Scalar _tmp2120 = _tmp1205 * _tmp2118 + _tmp125 * _tmp2003;
  const Scalar _tmp2121 = _tmp2119 * _tmp522 - _tmp2120 * _tmp518;
  const Scalar _tmp2122 = _tmp1208 * _tmp2121 - _tmp1210 * _tmp2121 + _tmp2119 * _tmp530;
  const Scalar _tmp2123 = 2 * _tmp2122;
  const Scalar _tmp2124 = _tmp112 * priors_1_0_sqrt_info(5, 5) -
                          _tmp125 * priors_1_0_sqrt_info(5, 3) +
                          _tmp51 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp2125 = 2 * _tmp2124;
  const Scalar _tmp2126 = -_tmp1391 * _tmp2094 + _tmp1393 * _tmp2094 + _tmp2093 * _tmp299;
  const Scalar _tmp2127 = 2 * _tmp2126;
  const Scalar _tmp2128 = _tmp112 * landmarks_4_;
  const Scalar _tmp2129 = _tmp1287 * _tmp2128 - _tmp1958 * _tmp2090;
  const Scalar _tmp2130 = _tmp1291 * _tmp2128 - _tmp1958 * _tmp2092;
  const Scalar _tmp2131 = -_tmp2129 * _tmp324 + _tmp2130 * _tmp320;
  const Scalar _tmp2132 = _tmp1344 * _tmp2131 - _tmp1345 * _tmp2131 + _tmp2129 * _tmp332;
  const Scalar _tmp2133 = 2 * _tmp2132;
  const Scalar _tmp2134 = _tmp112 * priors_1_0_sqrt_info(4, 5) -
                          _tmp125 * priors_1_0_sqrt_info(4, 3) +
                          _tmp51 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp2135 = 2 * _tmp2134;
  const Scalar _tmp2136 = _tmp112 * landmarks_5_;
  const Scalar _tmp2137 = _tmp1156 * _tmp2136 + _tmp1904 * _tmp2090;
  const Scalar _tmp2138 = _tmp1153 * _tmp2136 + _tmp1904 * _tmp2092;
  const Scalar _tmp2139 = _tmp2137 * _tmp358 - _tmp2138 * _tmp353;
  const Scalar _tmp2140 = -_tmp1193 * _tmp2139 + _tmp1194 * _tmp2139 + _tmp2137 * _tmp366;
  const Scalar _tmp2141 = 2 * _tmp2140;
  const Scalar _tmp2142 = -_tmp22 * priors_0_1_sqrt_info(4, 3) -
                          _tmp35 * priors_0_1_sqrt_info(4, 5) + _tmp37 * priors_0_1_sqrt_info(4, 4);
  const Scalar _tmp2143 = 2 * _tmp2142;
  const Scalar _tmp2144 = _tmp112 * _tmp1923 - _tmp1921 * _tmp2090;
  const Scalar _tmp2145 = _tmp112 * _tmp1920 - _tmp1921 * _tmp2092;
  const Scalar _tmp2146 = _tmp2144 * _tmp554 - _tmp2145 * _tmp550;
  const Scalar _tmp2147 = _tmp1245 * _tmp2146 - _tmp1657 * _tmp2146 + _tmp2144 * _tmp562;
  const Scalar _tmp2148 = 2 * _tmp2147;
  const Scalar _tmp2149 = _tmp112 * _tmp1980 + _tmp1981 * _tmp51;
  const Scalar _tmp2150 = _tmp112 * _tmp1984 + _tmp1983 * _tmp2092;
  const Scalar _tmp2151 = -_tmp179 * _tmp2150 + _tmp184 * _tmp2149;
  const Scalar _tmp2152 = _tmp1181 * _tmp2151 - _tmp1183 * _tmp2151 + _tmp201 * _tmp2149;
  const Scalar _tmp2153 = 2 * _tmp2152;
  const Scalar _tmp2154 = _tmp112 * landmarks_9_;
  const Scalar _tmp2155 = -_tmp1550 * _tmp2154 + _tmp2047 * _tmp51;
  const Scalar _tmp2156 = _tmp1043 * _tmp2154 + _tmp125 * _tmp2049;
  const Scalar _tmp2157 = _tmp2155 * _tmp488 - _tmp2156 * _tmp484;
  const Scalar _tmp2158 = -_tmp1046 * _tmp2157 + _tmp1048 * _tmp2157 + _tmp2155 * _tmp496;
  const Scalar _tmp2159 = 2 * _tmp2158;
  const Scalar _tmp2160 = -_tmp112 * _tmp1855 + _tmp1856 * _tmp51;
  const Scalar _tmp2161 = _tmp112 * _tmp1859 + _tmp125 * _tmp1858;
  const Scalar _tmp2162 = _tmp2160 * _tmp753 - _tmp2161 * _tmp749;
  const Scalar _tmp2163 = -_tmp2161 * _tmp761 - _tmp2162 * _tmp943 + _tmp2162 * _tmp945;
  const Scalar _tmp2164 = 2 * _tmp2163;
  const Scalar _tmp2165 = _tmp112 * _tmp1892 - _tmp1893 * _tmp51;
  const Scalar _tmp2166 = _tmp112 * _tmp1896 + _tmp125 * _tmp1895;
  const Scalar _tmp2167 = _tmp2165 * _tmp821 + _tmp2166 * _tmp817;
  const Scalar _tmp2168 = _tmp1030 * _tmp2167 - _tmp1032 * _tmp2167 + _tmp2165 * _tmp829;
  const Scalar _tmp2169 = 2 * _tmp2168;
  const Scalar _tmp2170 = -_tmp22 * priors_0_1_sqrt_info(0, 3) -
                          _tmp35 * priors_0_1_sqrt_info(0, 5) + _tmp37 * priors_0_1_sqrt_info(0, 4);
  const Scalar _tmp2171 = 2 * _tmp2170;
  const Scalar _tmp2172 = _tmp112 * landmarks_8_;
  const Scalar _tmp2173 = _tmp1328 * _tmp2172 + _tmp2033 * _tmp2090;
  const Scalar _tmp2174 = _tmp1511 * _tmp2172 + _tmp2033 * _tmp2092;
  const Scalar _tmp2175 = _tmp2173 * _tmp454 - _tmp2174 * _tmp450;
  const Scalar _tmp2176 = _tmp1515 * _tmp2175 - _tmp1516 * _tmp2175 + _tmp2174 * _tmp462;
  const Scalar _tmp2177 = 2 * _tmp2176;
  const Scalar _tmp2178 = -_tmp1279 * _tmp2146 + _tmp1502 * _tmp2146 + _tmp2145 * _tmp562;
  const Scalar _tmp2179 = 2 * _tmp2178;
  const Scalar _tmp2180 = -_tmp1052 * _tmp2167 + _tmp1053 * _tmp2167 + _tmp2166 * _tmp829;
  const Scalar _tmp2181 = 2 * _tmp2180;
  const Scalar _tmp2182 = _tmp112 * _tmp2018 + _tmp2017 * _tmp2092;
  const Scalar _tmp2183 = _tmp112 * _tmp2020 + _tmp2017 * _tmp2090;
  const Scalar _tmp2184 = _tmp2182 * _tmp221 - _tmp2183 * _tmp226;
  const Scalar _tmp2185 = _tmp1354 * _tmp2184 - _tmp1356 * _tmp2184 - _tmp2182 * _tmp234;
  const Scalar _tmp2186 = 2 * _tmp2185;
  const Scalar _tmp2187 = _tmp112 * _tmp1887 + _tmp1884 * _tmp2092;
  const Scalar _tmp2188 = _tmp112 * _tmp1885 + _tmp1884 * _tmp2090;
  const Scalar _tmp2189 = _tmp2187 * _tmp418 - _tmp2188 * _tmp422;
  const Scalar _tmp2190 = -_tmp1505 * _tmp2189 + _tmp1506 * _tmp2189 - _tmp2188 * _tmp430;
  const Scalar _tmp2191 = 2 * _tmp2190;
  const Scalar _tmp2192 = -_tmp112 * _tmp1992 + _tmp1993 * _tmp51;
  const Scalar _tmp2193 = _tmp112 * _tmp1996 + _tmp125 * _tmp1995;
  const Scalar _tmp2194 = _tmp2192 * _tmp588 - _tmp2193 * _tmp584;
  const Scalar _tmp2195 = _tmp1143 * _tmp2194;
  const Scalar _tmp2196 = _tmp1146 * _tmp2194 + _tmp2192 * _tmp596 - _tmp2195 * _tmp588;
  const Scalar _tmp2197 = 2 * _tmp2196;
  const Scalar _tmp2198 = _tmp112 * priors_1_0_sqrt_info(2, 5) -
                          _tmp125 * priors_1_0_sqrt_info(2, 3) +
                          _tmp51 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2199 = 2 * _tmp2198;
  const Scalar _tmp2200 = -_tmp112 * _tmp1936 + _tmp1937 * _tmp51;
  const Scalar _tmp2201 = _tmp112 * _tmp1940 + _tmp125 * _tmp1939;
  const Scalar _tmp2202 = _tmp2200 * _tmp622 - _tmp2201 * _tmp618;
  const Scalar _tmp2203 = _tmp1575 * _tmp2202 - _tmp1577 * _tmp2202 - _tmp2200 * _tmp630;
  const Scalar _tmp2204 = 2 * _tmp2203;
  const Scalar _tmp2205 = -_tmp1261 * _tmp2184 + _tmp1263 * _tmp2184 + _tmp2183 * _tmp234;
  const Scalar _tmp2206 = 2 * _tmp2205;
  const Scalar _tmp2207 = _tmp1350 * _tmp2115 - _tmp1351 * _tmp2115 + _tmp2113 * _tmp267;
  const Scalar _tmp2208 = 2 * _tmp2207;
  const Scalar _tmp2209 = -_tmp112 * _tmp1877 + _tmp1875 * _tmp2090;
  const Scalar _tmp2210 = _tmp112 * _tmp1874 - _tmp1875 * _tmp2092;
  const Scalar _tmp2211 = _tmp2209 * _tmp390 + _tmp2210 * _tmp386;
  const Scalar _tmp2212 = -_tmp1597 * _tmp2211 + _tmp1598 * _tmp2211 + _tmp2209 * _tmp398;
  const Scalar _tmp2213 = 2 * _tmp2212;
  const Scalar _tmp2214 = -_tmp112 * _tmp1949 + _tmp1950 * _tmp51;
  const Scalar _tmp2215 = _tmp112 * _tmp1947 + _tmp125 * _tmp1946;
  const Scalar _tmp2216 = _tmp2214 * _tmp787 - _tmp2215 * _tmp783;
  const Scalar _tmp2217 = -_tmp1614 * _tmp2216 + _tmp1615 * _tmp2216 + _tmp2214 * _tmp795;
  const Scalar _tmp2218 = 2 * _tmp2217;
  const Scalar _tmp2219 = -_tmp1401 * _tmp2151 + _tmp1402 * _tmp2151 - _tmp201 * _tmp2150;
  const Scalar _tmp2220 = 2 * _tmp2219;
  const Scalar _tmp2221 = _tmp1421 * _tmp2202 - _tmp1423 * _tmp2202 + _tmp2201 * _tmp630;
  const Scalar _tmp2222 = 2 * _tmp2221;
  const Scalar _tmp2223 = _tmp1093 * _tmp2157 - _tmp1094 * _tmp2157 + _tmp2156 * _tmp496;
  const Scalar _tmp2224 = 2 * _tmp2223;
  const Scalar _tmp2225 = _tmp112 * _tmp1968 + _tmp1966 * _tmp2092;
  const Scalar _tmp2226 = _tmp112 * _tmp1965 + _tmp1966 * _tmp2090;
  const Scalar _tmp2227 = _tmp2225 * _tmp683 - _tmp2226 * _tmp687;
  const Scalar _tmp2228 = _tmp2227 * _tmp687;
  const Scalar _tmp2229 = -_tmp1111 * _tmp2228 + _tmp1113 * _tmp2228 - _tmp2226 * _tmp695;
  const Scalar _tmp2230 = 2 * _tmp2229;
  const Scalar _tmp2231 = _tmp112 * priors_1_0_sqrt_info(3, 5) -
                          _tmp125 * priors_1_0_sqrt_info(3, 3) +
                          _tmp51 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp2232 = 2 * _tmp2231;
  const Scalar _tmp2233 = -_tmp1112 * _tmp2227 + _tmp1114 * _tmp2227 + _tmp2225 * _tmp695;
  const Scalar _tmp2234 = 2 * _tmp2233;
  const Scalar _tmp2235 = -_tmp1268 * _tmp2194 + _tmp2193 * _tmp596 + _tmp2195 * _tmp584;
  const Scalar _tmp2236 = 2 * _tmp2235;
  const Scalar _tmp2237 = -_tmp1396 * _tmp2100 + _tmp1397 * _tmp2100 + _tmp2098 * _tmp662;
  const Scalar _tmp2238 = 2 * _tmp2237;
  const Scalar _tmp2239 = _tmp2187 * _tmp430 + _tmp2189 * _tmp948 - _tmp2189 * _tmp949;
  const Scalar _tmp2240 = 2 * _tmp2239;
  const Scalar _tmp2241 = _tmp1229 * _tmp2211 - _tmp1230 * _tmp2211 + _tmp2210 * _tmp398;
  const Scalar _tmp2242 = 2 * _tmp2241;
  const Scalar _tmp2243 = -_tmp22 * priors_0_1_sqrt_info(3, 3) -
                          _tmp35 * priors_0_1_sqrt_info(3, 5) + _tmp37 * priors_0_1_sqrt_info(3, 4);
  const Scalar _tmp2244 = 2 * _tmp2243;
  const Scalar _tmp2245 = _tmp1166 * _tmp2162 - _tmp1167 * _tmp2162 - _tmp2160 * _tmp761;
  const Scalar _tmp2246 = 2 * _tmp2245;
  const Scalar _tmp2247 = _tmp1294 * _tmp2131 - _tmp1297 * _tmp2131 + _tmp2130 * _tmp332;
  const Scalar _tmp2248 = 2 * _tmp2247;
  const Scalar _tmp2249 = _tmp2121 * _tmp518;
  const Scalar _tmp2250 = -_tmp1207 * _tmp2249 + _tmp1209 * _tmp2249 + _tmp2120 * _tmp530;
  const Scalar _tmp2251 = 2 * _tmp2250;
  const Scalar _tmp2252 = -_tmp1160 * _tmp2139 + _tmp1162 * _tmp2139 + _tmp2138 * _tmp366;
  const Scalar _tmp2253 = 2 * _tmp2252;
  const Scalar _tmp2254 = _tmp112 * priors_1_0_sqrt_info(1, 5) -
                          _tmp125 * priors_1_0_sqrt_info(1, 3) +
                          _tmp51 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp2255 = 2 * _tmp2254;
  const Scalar _tmp2256 = _tmp112 * priors_1_0_sqrt_info(0, 5) -
                          _tmp125 * priors_1_0_sqrt_info(0, 3) +
                          _tmp51 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp2257 = 2 * _tmp2256;
  const Scalar _tmp2258 = -_tmp1359 * _tmp2175 + _tmp1360 * _tmp2175 - _tmp2173 * _tmp462;
  const Scalar _tmp2259 = 2 * _tmp2258;
  const Scalar _tmp2260 = -_tmp22 * priors_0_1_sqrt_info(2, 3) -
                          _tmp35 * priors_0_1_sqrt_info(2, 5) + _tmp37 * priors_0_1_sqrt_info(2, 4);
  const Scalar _tmp2261 = 2 * _tmp2260;
  const Scalar _tmp2262 = -_tmp1519 * _tmp2110 + _tmp1775 * _tmp2110 + _tmp2109 * _tmp727;
  const Scalar _tmp2263 = 2 * _tmp2262;
  const Scalar _tmp2264 = _tmp2215 * _tmp795 + _tmp2216 * _tmp995 - _tmp2216 * _tmp996;
  const Scalar _tmp2265 = 2 * _tmp2264;
  const Scalar _tmp2266 = _tmp111 * _tmp1936 + _tmp1937 * _tmp54;
  const Scalar _tmp2267 = _tmp111 * _tmp1940 + _tmp123 * _tmp1939;
  const Scalar _tmp2268 = _tmp2266 * _tmp622 + _tmp2267 * _tmp618;
  const Scalar _tmp2269 = -_tmp1575 * _tmp2268 + _tmp1577 * _tmp2268 + _tmp2266 * _tmp630;
  const Scalar _tmp2270 = 2 * _tmp2269;
  const Scalar _tmp2271 = _tmp111 * priors_1_0_sqrt_info(5, 5) -
                          _tmp123 * priors_1_0_sqrt_info(5, 3) -
                          _tmp54 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp2272 = 2 * _tmp2271;
  const Scalar _tmp2273 = _tmp111 * _tmp1859 + _tmp123 * _tmp1858;
  const Scalar _tmp2274 = _tmp111 * _tmp1855 + _tmp1856 * _tmp54;
  const Scalar _tmp2275 = _tmp2273 * _tmp749 + _tmp2274 * _tmp753;
  const Scalar _tmp2276 = _tmp2273 * _tmp761 - _tmp2275 * _tmp943 + _tmp2275 * _tmp945;
  const Scalar _tmp2277 = 2 * _tmp2276;
  const Scalar _tmp2278 = _tmp123 * views_1_calibration(0, 0);
  const Scalar _tmp2279 = _tmp111 * _tmp2108 + _tmp1973 * _tmp2278;
  const Scalar _tmp2280 = _tmp54 * views_1_calibration(1, 0);
  const Scalar _tmp2281 = _tmp111 * _tmp2106 - _tmp1973 * _tmp2280;
  const Scalar _tmp2282 = _tmp2279 * _tmp715 - _tmp2281 * _tmp719;
  const Scalar _tmp2283 = -_tmp1519 * _tmp2282 + _tmp1775 * _tmp2282 + _tmp2279 * _tmp727;
  const Scalar _tmp2284 = 2 * _tmp2283;
  const Scalar _tmp2285 = _tmp111 * _tmp1892 + _tmp1893 * _tmp54;
  const Scalar _tmp2286 = _tmp111 * _tmp1896 + _tmp123 * _tmp1895;
  const Scalar _tmp2287 = _tmp2285 * _tmp821 + _tmp2286 * _tmp817;
  const Scalar _tmp2288 = _tmp1030 * _tmp2287 - _tmp1032 * _tmp2287 + _tmp2285 * _tmp829;
  const Scalar _tmp2289 = 2 * _tmp2288;
  const Scalar _tmp2290 = _tmp111 * priors_1_0_sqrt_info(4, 5) -
                          _tmp123 * priors_1_0_sqrt_info(4, 3) -
                          _tmp54 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp2291 = 2 * _tmp2290;
  const Scalar _tmp2292 = -_tmp25 * priors_0_1_sqrt_info(3, 3) +
                          _tmp31 * priors_0_1_sqrt_info(3, 5) - _tmp39 * priors_0_1_sqrt_info(3, 4);
  const Scalar _tmp2293 = 2 * _tmp2292;
  const Scalar _tmp2294 = _tmp111 * landmarks_5_;
  const Scalar _tmp2295 = _tmp1156 * _tmp2294 - _tmp357 * _tmp54 * landmarks_5_;
  const Scalar _tmp2296 = _tmp1153 * _tmp2294 + _tmp1904 * _tmp2278;
  const Scalar _tmp2297 = -_tmp2295 * _tmp358 + _tmp2296 * _tmp353;
  const Scalar _tmp2298 = _tmp1193 * _tmp2297 - _tmp1194 * _tmp2297 + _tmp2295 * _tmp366;
  const Scalar _tmp2299 = 2 * _tmp2298;
  const Scalar _tmp2300 = _tmp111 * _tmp1912 - _tmp1913 * _tmp2280;
  const Scalar _tmp2301 = _tmp111 * _tmp1915 + _tmp1913 * _tmp2278;
  const Scalar _tmp2302 = _tmp2300 * _tmp291 - _tmp2301 * _tmp287;
  const Scalar _tmp2303 = _tmp1391 * _tmp2302 - _tmp1393 * _tmp2302 - _tmp2301 * _tmp299;
  const Scalar _tmp2304 = 2 * _tmp2303;
  const Scalar _tmp2305 = -_tmp1052 * _tmp2287 + _tmp1053 * _tmp2287 + _tmp2286 * _tmp829;
  const Scalar _tmp2306 = 2 * _tmp2305;
  const Scalar _tmp2307 = _tmp1160 * _tmp2297 - _tmp1162 * _tmp2297 + _tmp2296 * _tmp366;
  const Scalar _tmp2308 = 2 * _tmp2307;
  const Scalar _tmp2309 = _tmp1406 * _tmp2282 - _tmp1407 * _tmp2282 + _tmp2281 * _tmp727;
  const Scalar _tmp2310 = 2 * _tmp2309;
  const Scalar _tmp2311 = _tmp111 * _tmp1949 + _tmp1950 * _tmp54;
  const Scalar _tmp2312 = _tmp111 * _tmp1947 + _tmp123 * _tmp1946;
  const Scalar _tmp2313 = _tmp2311 * _tmp787 + _tmp2312 * _tmp783;
  const Scalar _tmp2314 = _tmp1614 * _tmp2313 - _tmp1615 * _tmp2313 - _tmp2311 * _tmp795;
  const Scalar _tmp2315 = 2 * _tmp2314;
  const Scalar _tmp2316 = -_tmp25 * priors_0_1_sqrt_info(2, 3) +
                          _tmp31 * priors_0_1_sqrt_info(2, 5) - _tmp39 * priors_0_1_sqrt_info(2, 4);
  const Scalar _tmp2317 = 2 * _tmp2316;
  const Scalar _tmp2318 = _tmp111 * _tmp1874 - _tmp1875 * _tmp2278;
  const Scalar _tmp2319 = _tmp111 * _tmp1877 + _tmp1782 * _tmp54 * landmarks_6_;
  const Scalar _tmp2320 = _tmp2318 * _tmp386 - _tmp2319 * _tmp390;
  const Scalar _tmp2321 = _tmp1229 * _tmp2320 - _tmp1230 * _tmp2320 + _tmp2318 * _tmp398;
  const Scalar _tmp2322 = 2 * _tmp2321;
  const Scalar _tmp2323 = _tmp1597 * _tmp2320 - _tmp1598 * _tmp2320 + _tmp2319 * _tmp398;
  const Scalar _tmp2324 = 2 * _tmp2323;
  const Scalar _tmp2325 = -_tmp1421 * _tmp2268 + _tmp1423 * _tmp2268 + _tmp2267 * _tmp630;
  const Scalar _tmp2326 = 2 * _tmp2325;
  const Scalar _tmp2327 = _tmp111 * _tmp1980 - _tmp1981 * _tmp54;
  const Scalar _tmp2328 = _tmp111 * _tmp1984 + _tmp1983 * _tmp2278;
  const Scalar _tmp2329 = -_tmp179 * _tmp2328 + _tmp184 * _tmp2327;
  const Scalar _tmp2330 = _tmp1401 * _tmp2329 - _tmp1402 * _tmp2329 + _tmp201 * _tmp2328;
  const Scalar _tmp2331 = 2 * _tmp2330;
  const Scalar _tmp2332 = _tmp111 * landmarks_10_;
  const Scalar _tmp2333 = _tmp1200 * _tmp2332 + _tmp2006 * _tmp54;
  const Scalar _tmp2334 = _tmp1205 * _tmp2332 + _tmp123 * _tmp2003;
  const Scalar _tmp2335 = _tmp2333 * _tmp522 + _tmp2334 * _tmp518;
  const Scalar _tmp2336 = -_tmp1208 * _tmp2335 + _tmp1210 * _tmp2335 - _tmp2333 * _tmp530;
  const Scalar _tmp2337 = 2 * _tmp2336;
  const Scalar _tmp2338 = _tmp111 * priors_1_0_sqrt_info(2, 5) -
                          _tmp123 * priors_1_0_sqrt_info(2, 3) -
                          _tmp54 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2339 = 2 * _tmp2338;
  const Scalar _tmp2340 = _tmp111 * _tmp1968 + _tmp1966 * _tmp2278;
  const Scalar _tmp2341 = _tmp111 * _tmp1965 - _tmp1748 * _tmp54 * landmarks_15_;
  const Scalar _tmp2342 = _tmp2340 * _tmp683 - _tmp2341 * _tmp687;
  const Scalar _tmp2343 = _tmp1111 * _tmp2342;
  const Scalar _tmp2344 = _tmp1114 * _tmp2342 + _tmp2340 * _tmp695 - _tmp2343 * _tmp683;
  const Scalar _tmp2345 = 2 * _tmp2344;
  const Scalar _tmp2346 = _tmp111 * _tmp1929 + _tmp1928 * _tmp2280;
  const Scalar _tmp2347 = -_tmp111 * _tmp1931 + _tmp1928 * _tmp2278;
  const Scalar _tmp2348 = _tmp2346 * _tmp654 + _tmp2347 * _tmp650;
  const Scalar _tmp2349 = _tmp1128 * _tmp2348 - _tmp1130 * _tmp2348 - _tmp2346 * _tmp662;
  const Scalar _tmp2350 = 2 * _tmp2349;
  const Scalar _tmp2351 = _tmp111 * _tmp1996 + _tmp123 * _tmp1995;
  const Scalar _tmp2352 = _tmp111 * _tmp1992 + _tmp1993 * _tmp54;
  const Scalar _tmp2353 = _tmp2351 * _tmp584 + _tmp2352 * _tmp588;
  const Scalar _tmp2354 = -_tmp1267 * _tmp2353 + _tmp1268 * _tmp2353 + _tmp2351 * _tmp596;
  const Scalar _tmp2355 = 2 * _tmp2354;
  const Scalar _tmp2356 = _tmp1339 * _tmp2335 - _tmp1340 * _tmp2335 + _tmp2334 * _tmp530;
  const Scalar _tmp2357 = 2 * _tmp2356;
  const Scalar _tmp2358 = -_tmp2312 * _tmp795 + _tmp2313 * _tmp995 - _tmp2313 * _tmp996;
  const Scalar _tmp2359 = 2 * _tmp2358;
  const Scalar _tmp2360 = _tmp111 * _tmp1923 + _tmp1921 * _tmp2280;
  const Scalar _tmp2361 = _tmp111 * _tmp1920 - _tmp1921 * _tmp2278;
  const Scalar _tmp2362 = _tmp2360 * _tmp554 - _tmp2361 * _tmp550;
  const Scalar _tmp2363 = -_tmp1245 * _tmp2362 + _tmp1657 * _tmp2362 - _tmp2360 * _tmp562;
  const Scalar _tmp2364 = 2 * _tmp2363;
  const Scalar _tmp2365 = _tmp111 * priors_1_0_sqrt_info(3, 5) -
                          _tmp123 * priors_1_0_sqrt_info(3, 3) -
                          _tmp54 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp2366 = 2 * _tmp2365;
  const Scalar _tmp2367 = _tmp111 * landmarks_9_;
  const Scalar _tmp2368 = _tmp1550 * _tmp2367 + _tmp2047 * _tmp54;
  const Scalar _tmp2369 = _tmp1043 * _tmp2367 + _tmp123 * _tmp2049;
  const Scalar _tmp2370 = _tmp2368 * _tmp488 + _tmp2369 * _tmp484;
  const Scalar _tmp2371 = _tmp1047 * _tmp2370;
  const Scalar _tmp2372 = _tmp1093 * _tmp2370 - _tmp2369 * _tmp496 - _tmp2371 * _tmp484;
  const Scalar _tmp2373 = 2 * _tmp2372;
  const Scalar _tmp2374 = -_tmp25 * priors_0_1_sqrt_info(5, 3) +
                          _tmp31 * priors_0_1_sqrt_info(5, 5) - _tmp39 * priors_0_1_sqrt_info(5, 4);
  const Scalar _tmp2375 = 2 * _tmp2374;
  const Scalar _tmp2376 = -_tmp1144 * _tmp2353 + _tmp1146 * _tmp2353 + _tmp2352 * _tmp596;
  const Scalar _tmp2377 = 2 * _tmp2376;
  const Scalar _tmp2378 = _tmp111 * landmarks_4_;
  const Scalar _tmp2379 = _tmp123 * _tmp1956 - _tmp1291 * _tmp2378;
  const Scalar _tmp2380 = _tmp1287 * _tmp2378 + _tmp1958 * _tmp2280;
  const Scalar _tmp2381 = _tmp2379 * _tmp320 + _tmp2380 * _tmp324;
  const Scalar _tmp2382 = _tmp1294 * _tmp2381 - _tmp1297 * _tmp2381 + _tmp2379 * _tmp332;
  const Scalar _tmp2383 = 2 * _tmp2382;
  const Scalar _tmp2384 = _tmp111 * _tmp2018 + _tmp2017 * _tmp2278;
  const Scalar _tmp2385 = _tmp111 * _tmp2020 - _tmp2017 * _tmp2280;
  const Scalar _tmp2386 = _tmp221 * _tmp2384 - _tmp226 * _tmp2385;
  const Scalar _tmp2387 = -_tmp1261 * _tmp2386 + _tmp1263 * _tmp2386 + _tmp234 * _tmp2385;
  const Scalar _tmp2388 = 2 * _tmp2387;
  const Scalar _tmp2389 = -_tmp25 * priors_0_1_sqrt_info(1, 3) +
                          _tmp31 * priors_0_1_sqrt_info(1, 5) - _tmp39 * priors_0_1_sqrt_info(1, 4);
  const Scalar _tmp2390 = 2 * _tmp2389;
  const Scalar _tmp2391 = _tmp111 * _tmp1885 - _tmp1884 * _tmp2280;
  const Scalar _tmp2392 = _tmp111 * _tmp1887 + _tmp1884 * _tmp2278;
  const Scalar _tmp2393 = _tmp2391 * _tmp422 - _tmp2392 * _tmp418;
  const Scalar _tmp2394 = _tmp1505 * _tmp2393 - _tmp1506 * _tmp2393 - _tmp2391 * _tmp430;
  const Scalar _tmp2395 = 2 * _tmp2394;
  const Scalar _tmp2396 = -_tmp1354 * _tmp2386 + _tmp1356 * _tmp2386 + _tmp234 * _tmp2384;
  const Scalar _tmp2397 = 2 * _tmp2396;
  const Scalar _tmp2398 = _tmp1344 * _tmp2381 - _tmp1345 * _tmp2381 - _tmp2380 * _tmp332;
  const Scalar _tmp2399 = 2 * _tmp2398;
  const Scalar _tmp2400 = _tmp111 * landmarks_8_;
  const Scalar _tmp2401 = _tmp1328 * _tmp2400 - _tmp2033 * _tmp2280;
  const Scalar _tmp2402 = _tmp1511 * _tmp2400 + _tmp2033 * _tmp2278;
  const Scalar _tmp2403 = _tmp2401 * _tmp454 - _tmp2402 * _tmp450;
  const Scalar _tmp2404 = _tmp1359 * _tmp2403 - _tmp1360 * _tmp2403 + _tmp2401 * _tmp462;
  const Scalar _tmp2405 = 2 * _tmp2404;
  const Scalar _tmp2406 = _tmp1515 * _tmp2403 - _tmp1516 * _tmp2403 + _tmp2402 * _tmp462;
  const Scalar _tmp2407 = 2 * _tmp2406;
  const Scalar _tmp2408 = -_tmp1046 * _tmp2370 + _tmp2368 * _tmp496 + _tmp2371 * _tmp488;
  const Scalar _tmp2409 = 2 * _tmp2408;
  const Scalar _tmp2410 = -_tmp25 * priors_0_1_sqrt_info(4, 3) +
                          _tmp31 * priors_0_1_sqrt_info(4, 5) - _tmp39 * priors_0_1_sqrt_info(4, 4);
  const Scalar _tmp2411 = 2 * _tmp2410;
  const Scalar _tmp2412 = _tmp111 * priors_1_0_sqrt_info(1, 5) -
                          _tmp123 * priors_1_0_sqrt_info(1, 3) -
                          _tmp54 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp2413 = 2 * _tmp2412;
  const Scalar _tmp2414 = _tmp1279 * _tmp2362 - _tmp1502 * _tmp2362 - _tmp2361 * _tmp562;
  const Scalar _tmp2415 = 2 * _tmp2414;
  const Scalar _tmp2416 = _tmp111 * priors_1_0_sqrt_info(0, 5) -
                          _tmp123 * priors_1_0_sqrt_info(0, 3) -
                          _tmp54 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp2417 = 2 * _tmp2416;
  const Scalar _tmp2418 = _tmp1166 * _tmp2275 - _tmp1167 * _tmp2275 - _tmp2274 * _tmp761;
  const Scalar _tmp2419 = 2 * _tmp2418;
  const Scalar _tmp2420 = _tmp2392 * _tmp430 - _tmp2393 * _tmp948 + _tmp2393 * _tmp949;
  const Scalar _tmp2421 = 2 * _tmp2420;
  const Scalar _tmp2422 = _tmp1380 * _tmp2342 - _tmp2341 * _tmp695 - _tmp2343 * _tmp687;
  const Scalar _tmp2423 = 2 * _tmp2422;
  const Scalar _tmp2424 = -_tmp111 * _tmp1868 + _tmp1865 * _tmp2278;
  const Scalar _tmp2425 = _tmp111 * _tmp1866 + _tmp1865 * _tmp2280;
  const Scalar _tmp2426 = _tmp2424 * _tmp255 + _tmp2425 * _tmp259;
  const Scalar _tmp2427 = -_tmp1350 * _tmp2426 + _tmp1351 * _tmp2426 - _tmp2425 * _tmp267;
  const Scalar _tmp2428 = 2 * _tmp2427;
  const Scalar _tmp2429 = -_tmp25 * priors_0_1_sqrt_info(0, 3) +
                          _tmp31 * priors_0_1_sqrt_info(0, 5) - _tmp39 * priors_0_1_sqrt_info(0, 4);
  const Scalar _tmp2430 = 2 * _tmp2429;
  const Scalar _tmp2431 = -_tmp1311 * _tmp2426 + _tmp1314 * _tmp2426 + _tmp2424 * _tmp267;
  const Scalar _tmp2432 = 2 * _tmp2431;
  const Scalar _tmp2433 = -_tmp1224 * _tmp2302 + _tmp1226 * _tmp2302 + _tmp2300 * _tmp299;
  const Scalar _tmp2434 = 2 * _tmp2433;
  const Scalar _tmp2435 = _tmp1181 * _tmp2329 - _tmp1183 * _tmp2329 + _tmp201 * _tmp2327;
  const Scalar _tmp2436 = 2 * _tmp2435;
  const Scalar _tmp2437 = -_tmp1396 * _tmp2348 + _tmp1397 * _tmp2348 + _tmp2347 * _tmp662;
  const Scalar _tmp2438 = 2 * _tmp2437;
  const Scalar _tmp2439 = std::pow(matches_0_0_weight, Scalar(2)) / std::pow(_tmp833, Scalar(2));
  const Scalar _tmp2440 =
      views_1_calibration(0, 0) * (-_tmp122 * _tmp167 + _tmp123 * _tmp157 + _tmp125 * _tmp162);
  const Scalar _tmp2441 = -_tmp111 * _tmp157 - _tmp112 * _tmp162 + _tmp116 * _tmp167;
  const Scalar _tmp2442 = _tmp2441 * views_1_calibration(0, 0);
  const Scalar _tmp2443 = -_tmp1178 * _tmp2442 + _tmp173 * _tmp2440;
  const Scalar _tmp2444 =
      views_1_calibration(1, 0) * (_tmp157 * _tmp54 - _tmp162 * _tmp51 + _tmp167 * _tmp58);
  const Scalar _tmp2445 = _tmp2441 * views_1_calibration(1, 0);
  const Scalar _tmp2446 = _tmp1172 * _tmp2445 + _tmp173 * _tmp2444;
  const Scalar _tmp2447 = _tmp179 * _tmp2443 + _tmp184 * _tmp2446;
  const Scalar _tmp2448 = _tmp1180 * _tmp2447;
  const Scalar _tmp2449 = -_tmp1401 * _tmp2447 + _tmp179 * _tmp2448 + _tmp201 * _tmp2443;
  const Scalar _tmp2450 = 2 * _tmp2449;
  const Scalar _tmp2451 = _tmp1183 * _tmp2447 - _tmp184 * _tmp2448 - _tmp201 * _tmp2446;
  const Scalar _tmp2452 = 2 * _tmp2451;
  const Scalar _tmp2453 = std::pow(matches_0_1_weight, Scalar(2)) / std::pow(_tmp836, Scalar(2));
  const Scalar _tmp2454 = _tmp1252 * _tmp2445 + _tmp216 * _tmp2444;
  const Scalar _tmp2455 = -_tmp1258 * _tmp2442 + _tmp216 * _tmp2440;
  const Scalar _tmp2456 = _tmp221 * _tmp2455 + _tmp226 * _tmp2454;
  const Scalar _tmp2457 = _tmp1260 * _tmp2456;
  const Scalar _tmp2458 = _tmp1263 * _tmp2456 - _tmp226 * _tmp2457 - _tmp234 * _tmp2454;
  const Scalar _tmp2459 = 2 * _tmp2458;
  const Scalar _tmp2460 = _tmp1354 * _tmp2456 - _tmp221 * _tmp2457 - _tmp234 * _tmp2455;
  const Scalar _tmp2461 = 2 * _tmp2460;
  const Scalar _tmp2462 = _tmp1307 * _tmp2442 + _tmp2440 * _tmp253;
  const Scalar _tmp2463 = -_tmp1302 * _tmp2445 + _tmp2444 * _tmp253;
  const Scalar _tmp2464 = _tmp2462 * _tmp255 + _tmp2463 * _tmp259;
  const Scalar _tmp2465 = -_tmp1311 * _tmp2464 + _tmp1314 * _tmp2464 + _tmp2462 * _tmp267;
  const Scalar _tmp2466 = 2 * _tmp2465;
  const Scalar _tmp2467 = std::pow(matches_0_2_weight, Scalar(2)) / std::pow(_tmp839, Scalar(2));
  const Scalar _tmp2468 = _tmp1350 * _tmp2464 - _tmp1351 * _tmp2464 + _tmp2463 * _tmp267;
  const Scalar _tmp2469 = 2 * _tmp2468;
  const Scalar _tmp2470 = std::pow(matches_0_3_weight, Scalar(2)) / std::pow(_tmp842, Scalar(2));
  const Scalar _tmp2471 = _tmp1218 * _tmp2445 + _tmp2444 * _tmp282;
  const Scalar _tmp2472 = _tmp1217 * _tmp2442 - _tmp2440 * _tmp282;
  const Scalar _tmp2473 = _tmp2471 * _tmp291 - _tmp2472 * _tmp287;
  const Scalar _tmp2474 = -_tmp1224 * _tmp2473 + _tmp1226 * _tmp2473 + _tmp2471 * _tmp299;
  const Scalar _tmp2475 = 2 * _tmp2474;
  const Scalar _tmp2476 = -_tmp1391 * _tmp2473 + _tmp1393 * _tmp2473 + _tmp2472 * _tmp299;
  const Scalar _tmp2477 = 2 * _tmp2476;
  const Scalar _tmp2478 = _tmp1286 * _tmp2445 - _tmp2444 * _tmp318;
  const Scalar _tmp2479 = _tmp1290 * _tmp2442 + _tmp2440 * _tmp318;
  const Scalar _tmp2480 = _tmp2478 * _tmp324 - _tmp2479 * _tmp320;
  const Scalar _tmp2481 = _tmp1344 * _tmp2480 - _tmp1345 * _tmp2480 - _tmp2478 * _tmp332;
  const Scalar _tmp2482 = 2 * _tmp2481;
  const Scalar _tmp2483 = _tmp2480 * _tmp320;
  const Scalar _tmp2484 = _tmp1293 * _tmp2483 - _tmp1296 * _tmp2483 - _tmp2479 * _tmp332;
  const Scalar _tmp2485 = 2 * _tmp2484;
  const Scalar _tmp2486 = std::pow(matches_0_4_weight, Scalar(2)) / std::pow(_tmp845, Scalar(2));
  const Scalar _tmp2487 = -_tmp1152 * _tmp2442 + _tmp2440 * _tmp351;
  const Scalar _tmp2488 = _tmp1155 * _tmp2445 + _tmp2444 * _tmp351;
  const Scalar _tmp2489 = _tmp2487 * _tmp353 + _tmp2488 * _tmp358;
  const Scalar _tmp2490 = _tmp2489 * _tmp353;
  const Scalar _tmp2491 = _tmp1159 * _tmp2490 - _tmp1161 * _tmp2490 + _tmp2487 * _tmp366;
  const Scalar _tmp2492 = 2 * _tmp2491;
  const Scalar _tmp2493 = -_tmp1193 * _tmp2489 + _tmp1194 * _tmp2489 + _tmp2488 * _tmp366;
  const Scalar _tmp2494 = 2 * _tmp2493;
  const Scalar _tmp2495 = std::pow(matches_0_5_weight, Scalar(2)) / std::pow(_tmp848, Scalar(2));
  const Scalar _tmp2496 = std::pow(matches_0_6_weight, Scalar(2)) / std::pow(_tmp851, Scalar(2));
  const Scalar _tmp2497 = _tmp1007 * _tmp2442 + _tmp2440 * _tmp381;
  const Scalar _tmp2498 = _tmp1001 * _tmp2445 - _tmp2444 * _tmp381;
  const Scalar _tmp2499 = _tmp2497 * _tmp386 - _tmp2498 * _tmp390;
  const Scalar _tmp2500 = -_tmp1229 * _tmp2499 + _tmp1230 * _tmp2499 - _tmp2497 * _tmp398;
  const Scalar _tmp2501 = 2 * _tmp2500;
  const Scalar _tmp2502 = -_tmp1597 * _tmp2499 + _tmp1598 * _tmp2499 - _tmp2498 * _tmp398;
  const Scalar _tmp2503 = 2 * _tmp2502;
  const Scalar _tmp2504 = std::pow(matches_0_7_weight, Scalar(2)) / std::pow(_tmp854, Scalar(2));
  const Scalar _tmp2505 = _tmp2444 * _tmp413 + _tmp2445 * _tmp900;
  const Scalar _tmp2506 = _tmp2440 * _tmp413 - _tmp2442 * _tmp909;
  const Scalar _tmp2507 = _tmp2505 * _tmp422 + _tmp2506 * _tmp418;
  const Scalar _tmp2508 = -_tmp1505 * _tmp2507 + _tmp1506 * _tmp2507 + _tmp2505 * _tmp430;
  const Scalar _tmp2509 = 2 * _tmp2508;
  const Scalar _tmp2510 = _tmp2506 * _tmp430 + _tmp2507 * _tmp948 - _tmp2507 * _tmp949;
  const Scalar _tmp2511 = 2 * _tmp2510;
  const Scalar _tmp2512 = -_tmp1332 * _tmp2442 + _tmp2440 * _tmp445;
  const Scalar _tmp2513 = _tmp1327 * _tmp2445 + _tmp2444 * _tmp445;
  const Scalar _tmp2514 = _tmp2512 * _tmp450 + _tmp2513 * _tmp454;
  const Scalar _tmp2515 = -_tmp1515 * _tmp2514 + _tmp1516 * _tmp2514 + _tmp2512 * _tmp462;
  const Scalar _tmp2516 = 2 * _tmp2515;
  const Scalar _tmp2517 = std::pow(matches_0_8_weight, Scalar(2)) / std::pow(_tmp857, Scalar(2));
  const Scalar _tmp2518 = _tmp1359 * _tmp2514 - _tmp1360 * _tmp2514 + _tmp2513 * _tmp462;
  const Scalar _tmp2519 = 2 * _tmp2518;
  const Scalar _tmp2520 = _tmp1042 * _tmp2442 - _tmp2440 * _tmp482;
  const Scalar _tmp2521 = _tmp1550 * _tmp2441 - _tmp2444 * _tmp482;
  const Scalar _tmp2522 = _tmp2520 * _tmp484 + _tmp2521 * _tmp488;
  const Scalar _tmp2523 = _tmp1093 * _tmp2522 - _tmp1094 * _tmp2522 - _tmp2520 * _tmp496;
  const Scalar _tmp2524 = 2 * _tmp2523;
  const Scalar _tmp2525 = std::pow(matches_0_9_weight, Scalar(2)) / std::pow(_tmp860, Scalar(2));
  const Scalar _tmp2526 = -_tmp1046 * _tmp2522 + _tmp1048 * _tmp2522 + _tmp2521 * _tmp496;
  const Scalar _tmp2527 = 2 * _tmp2526;
  const Scalar _tmp2528 = _tmp1199 * _tmp2445 - _tmp2444 * _tmp516;
  const Scalar _tmp2529 = -_tmp1204 * _tmp2442 + _tmp2440 * _tmp516;
  const Scalar _tmp2530 = _tmp2528 * _tmp522 - _tmp2529 * _tmp518;
  const Scalar _tmp2531 = -_tmp1339 * _tmp2530 + _tmp1340 * _tmp2530 + _tmp2529 * _tmp530;
  const Scalar _tmp2532 = 2 * _tmp2531;
  const Scalar _tmp2533 = std::pow(matches_0_10_weight, Scalar(2)) / std::pow(_tmp863, Scalar(2));
  const Scalar _tmp2534 = -_tmp1208 * _tmp2530 + _tmp1210 * _tmp2530 - _tmp2528 * _tmp530;
  const Scalar _tmp2535 = 2 * _tmp2534;
  const Scalar _tmp2536 = _tmp1236 * _tmp2445 - _tmp2444 * _tmp545;
  const Scalar _tmp2537 = _tmp1242 * _tmp2442 + _tmp2440 * _tmp545;
  const Scalar _tmp2538 = _tmp2536 * _tmp554 - _tmp2537 * _tmp550;
  const Scalar _tmp2539 = _tmp1279 * _tmp2538 - _tmp1502 * _tmp2538 - _tmp2537 * _tmp562;
  const Scalar _tmp2540 = 2 * _tmp2539;
  const Scalar _tmp2541 = -_tmp1245 * _tmp2538 + _tmp1657 * _tmp2538 - _tmp2536 * _tmp562;
  const Scalar _tmp2542 = 2 * _tmp2541;
  const Scalar _tmp2543 = std::pow(matches_0_11_weight, Scalar(2)) / std::pow(_tmp866, Scalar(2));
  const Scalar _tmp2544 = -_tmp1135 * _tmp2445 + _tmp2444 * _tmp582;
  const Scalar _tmp2545 = _tmp1140 * _tmp2442 - _tmp2440 * _tmp582;
  const Scalar _tmp2546 = -_tmp2544 * _tmp588 + _tmp2545 * _tmp584;
  const Scalar _tmp2547 = _tmp1144 * _tmp2546 - _tmp1146 * _tmp2546 + _tmp2544 * _tmp596;
  const Scalar _tmp2548 = 2 * _tmp2547;
  const Scalar _tmp2549 = std::pow(matches_0_12_weight, Scalar(2)) / std::pow(_tmp869, Scalar(2));
  const Scalar _tmp2550 = -_tmp1267 * _tmp2546 + _tmp1268 * _tmp2546 + _tmp2545 * _tmp596;
  const Scalar _tmp2551 = 2 * _tmp2550;
  const Scalar _tmp2552 = std::pow(matches_0_13_weight, Scalar(2)) / std::pow(_tmp872, Scalar(2));
  const Scalar _tmp2553 = _tmp1417 * _tmp2442 - _tmp2440 * _tmp616;
  const Scalar _tmp2554 = _tmp1412 * _tmp2445 - _tmp2444 * _tmp616;
  const Scalar _tmp2555 = _tmp2553 * _tmp618 + _tmp2554 * _tmp622;
  const Scalar _tmp2556 = -_tmp1575 * _tmp2555 + _tmp1577 * _tmp2555 + _tmp2554 * _tmp630;
  const Scalar _tmp2557 = 2 * _tmp2556;
  const Scalar _tmp2558 = _tmp1421 * _tmp2555 - _tmp1423 * _tmp2555 - _tmp2553 * _tmp630;
  const Scalar _tmp2559 = 2 * _tmp2558;
  const Scalar _tmp2560 = _tmp1125 * _tmp2442 + _tmp2440 * _tmp645;
  const Scalar _tmp2561 = -_tmp1120 * _tmp2445 + _tmp2444 * _tmp645;
  const Scalar _tmp2562 = _tmp2560 * _tmp650 + _tmp2561 * _tmp654;
  const Scalar _tmp2563 = -_tmp1396 * _tmp2562 + _tmp1397 * _tmp2562 + _tmp2560 * _tmp662;
  const Scalar _tmp2564 = 2 * _tmp2563;
  const Scalar _tmp2565 = -_tmp1128 * _tmp2562 + _tmp1130 * _tmp2562 + _tmp2561 * _tmp662;
  const Scalar _tmp2566 = 2 * _tmp2565;
  const Scalar _tmp2567 = std::pow(matches_0_14_weight, Scalar(2)) / std::pow(_tmp875, Scalar(2));
  const Scalar _tmp2568 = -_tmp1101 * _tmp2442 + _tmp2440 * _tmp681;
  const Scalar _tmp2569 = _tmp1106 * _tmp2445 + _tmp2444 * _tmp681;
  const Scalar _tmp2570 = _tmp2568 * _tmp683 + _tmp2569 * _tmp687;
  const Scalar _tmp2571 = -_tmp1112 * _tmp2570 + _tmp1114 * _tmp2570 + _tmp2568 * _tmp695;
  const Scalar _tmp2572 = 2 * _tmp2571;
  const Scalar _tmp2573 = std::pow(matches_0_15_weight, Scalar(2)) / std::pow(_tmp878, Scalar(2));
  const Scalar _tmp2574 = -_tmp1379 * _tmp2570 + _tmp1380 * _tmp2570 + _tmp2569 * _tmp695;
  const Scalar _tmp2575 = 2 * _tmp2574;
  const Scalar _tmp2576 = _tmp1367 * _tmp2442 - _tmp2440 * _tmp710;
  const Scalar _tmp2577 = _tmp1369 * _tmp2445 + _tmp2444 * _tmp710;
  const Scalar _tmp2578 = _tmp2576 * _tmp715 - _tmp2577 * _tmp719;
  const Scalar _tmp2579 = _tmp1406 * _tmp2578 - _tmp1407 * _tmp2578 + _tmp2577 * _tmp727;
  const Scalar _tmp2580 = 2 * _tmp2579;
  const Scalar _tmp2581 = std::pow(matches_0_16_weight, Scalar(2)) / std::pow(_tmp881, Scalar(2));
  const Scalar _tmp2582 = -_tmp1519 * _tmp2578 + _tmp1775 * _tmp2578 + _tmp2576 * _tmp727;
  const Scalar _tmp2583 = 2 * _tmp2582;
  const Scalar _tmp2584 = std::pow(matches_0_17_weight, Scalar(2)) / std::pow(_tmp884, Scalar(2));
  const Scalar _tmp2585 = -_tmp2444 * _tmp747 + _tmp2445 * _tmp936;
  const Scalar _tmp2586 = -_tmp2440 * _tmp747 + _tmp2442 * _tmp932;
  const Scalar _tmp2587 = _tmp2585 * _tmp753 + _tmp2586 * _tmp749;
  const Scalar _tmp2588 = _tmp2587 * _tmp753;
  const Scalar _tmp2589 = _tmp2585 * _tmp761 - _tmp2588 * _tmp942 + _tmp2588 * _tmp944;
  const Scalar _tmp2590 = 2 * _tmp2589;
  const Scalar _tmp2591 = _tmp2586 * _tmp761 - _tmp2587 * _tmp943 + _tmp2587 * _tmp945;
  const Scalar _tmp2592 = 2 * _tmp2591;
  const Scalar _tmp2593 = -_tmp2440 * _tmp781 + _tmp2442 * _tmp919;
  const Scalar _tmp2594 = _tmp2444 * _tmp781 - _tmp2445 * _tmp922;
  const Scalar _tmp2595 = _tmp2593 * _tmp783 - _tmp2594 * _tmp787;
  const Scalar _tmp2596 = -_tmp2593 * _tmp795 + _tmp2595 * _tmp995 - _tmp2595 * _tmp996;
  const Scalar _tmp2597 = 2 * _tmp2596;
  const Scalar _tmp2598 = std::pow(matches_0_18_weight, Scalar(2)) / std::pow(_tmp887, Scalar(2));
  const Scalar _tmp2599 = _tmp1614 * _tmp2595 - _tmp1615 * _tmp2595 + _tmp2594 * _tmp795;
  const Scalar _tmp2600 = 2 * _tmp2599;
  const Scalar _tmp2601 = _tmp1022 * _tmp2445 - _tmp2444 * _tmp815;
  const Scalar _tmp2602 = _tmp1026 * _tmp2442 - _tmp2440 * _tmp815;
  const Scalar _tmp2603 = _tmp2601 * _tmp821 + _tmp2602 * _tmp817;
  const Scalar _tmp2604 = _tmp1052 * _tmp2603 - _tmp1053 * _tmp2603 - _tmp2602 * _tmp829;
  const Scalar _tmp2605 = 2 * _tmp2604;
  const Scalar _tmp2606 = std::pow(matches_0_19_weight, Scalar(2)) / std::pow(_tmp890, Scalar(2));
  const Scalar _tmp2607 = _tmp1030 * _tmp2603 - _tmp1032 * _tmp2603 + _tmp2601 * _tmp829;
  const Scalar _tmp2608 = 2 * _tmp2607;
  const Scalar _tmp2609 = 4 * _tmp929;
  const Scalar _tmp2610 = 4 * _tmp1520;
  const Scalar _tmp2611 = 4 * _tmp1545;
  const Scalar _tmp2612 = 4 * _tmp1517;
  const Scalar _tmp2613 = 4 * _tmp1486;
  const Scalar _tmp2614 = 4 * _tmp1666;
  const Scalar _tmp2615 = 4 * _tmp1012;
  const Scalar _tmp2616 = 4 * _tmp1315;
  const Scalar _tmp2617 = 4 * _tmp1555;
  const Scalar _tmp2618 = 4 * _tmp1543;
  const Scalar _tmp2619 = 4 * _tmp1692;
  const Scalar _tmp2620 = 4 * _tmp1669;
  const Scalar _tmp2621 = 4 * _tmp1164;
  const Scalar _tmp2622 = 4 * _tmp1033;
  const Scalar _tmp2623 = 4 * _tmp1147;
  const Scalar _tmp2624 = 4 * _tmp1687;
  const Scalar _tmp2625 = 4 * _tmp1578;
  const Scalar _tmp2626 = 4 * _tmp1662;
  const Scalar _tmp2627 = 4 * _tmp1054;
  const Scalar _tmp2628 = 4 * _tmp1346;
  const Scalar _tmp2629 = 4 * _tmp1248;
  const Scalar _tmp2630 = 4 * _tmp1636;
  const Scalar _tmp2631 = 4 * _tmp1562;
  const Scalar _tmp2632 = 4 * _tmp1227;
  const Scalar _tmp2633 = 4 * _tmp1507;
  const Scalar _tmp2634 = 4 * _tmp1399;
  const Scalar _tmp2635 = 4 * _tmp1131;
  const Scalar _tmp2636 = 4 * _tmp1652;
  const Scalar _tmp2637 = 4 * _tmp1608;
  const Scalar _tmp2638 = 4 * _tmp1664;
  const Scalar _tmp2639 = 4 * _tmp1638;
  const Scalar _tmp2640 = 4 * _tmp1281;
  const Scalar _tmp2641 = 4 * _tmp1553;
  const Scalar _tmp2642 = 4 * _tmp1439;
  const Scalar _tmp2643 = 4 * _tmp1184;
  const Scalar _tmp2644 = 4 * _tmp997;
  const Scalar _tmp2645 = 4 * _tmp1537;
  const Scalar _tmp2646 = 4 * _tmp1425;
  const Scalar _tmp2647 = 4 * _tmp1381;
  const Scalar _tmp2648 = 4 * _tmp1494;
  const Scalar _tmp2649 = 4 * _tmp1787;
  const Scalar _tmp2650 = 4 * _tmp1357;
  const Scalar _tmp2651 = 4 * _tmp1264;
  const Scalar _tmp2652 = 4 * _tmp1700;
  const Scalar _tmp2653 = 4 * _tmp1791;
  const Scalar _tmp2654 = 4 * _tmp1298;
  const Scalar _tmp2655 = 4 * _tmp1785;
  const Scalar _tmp2656 = 4 * _tmp1810;
  const Scalar _tmp2657 = 4 * _tmp1211;
  const Scalar _tmp2658 = 4 * _tmp1838;
  const Scalar _tmp2659 = 4 * _tmp1195;
  const Scalar _tmp2660 = 4 * _tmp1802;
  const Scalar _tmp2661 = 4 * _tmp1715;
  const Scalar _tmp2662 = 4 * _tmp1095;
  const Scalar _tmp2663 = 4 * _tmp1828;
  const Scalar _tmp2664 = 4 * _tmp1780;
  const Scalar _tmp2665 = 4 * _tmp1826;
  const Scalar _tmp2666 = 4 * _tmp914;
  const Scalar _tmp2667 = 4 * _tmp1696;
  const Scalar _tmp2668 = 4 * _tmp1776;
  const Scalar _tmp2669 = 4 * _tmp1704;
  const Scalar _tmp2670 = 4 * _tmp1404;
  const Scalar _tmp2671 = 4 * _tmp951;
  const Scalar _tmp2672 = 4 * _tmp1739;
  const Scalar _tmp2673 = 4 * _tmp2053;
  const Scalar _tmp2674 = 4 * _tmp1953;
  const Scalar _tmp2675 = 4 * _tmp2027;
  const Scalar _tmp2676 = 4 * _tmp1899;
  const Scalar _tmp2677 = 4 * _tmp1961;
  const Scalar _tmp2678 = 4 * _tmp1269;
  const Scalar _tmp2679 = 4 * _tmp2040;
  const Scalar _tmp2680 = 4 * _tmp1862;
  const Scalar _tmp2681 = 4 * _tmp1232;
  const Scalar _tmp2682 = 4 * _tmp1971;
  const Scalar _tmp2683 = 4 * _tmp2013;
  const Scalar _tmp2684 = 4 * _tmp2061;
  const Scalar _tmp2685 = 4 * _tmp1978;
  const Scalar _tmp2686 = 4 * _tmp2042;
  const Scalar _tmp2687 = 4 * _tmp1872;
  const Scalar _tmp2688 = 4 * _tmp1944;
  const Scalar _tmp2689 = 4 * _tmp2023;
  const Scalar _tmp2690 = 4 * _tmp2059;
  const Scalar _tmp2691 = 4 * _tmp1918;
  const Scalar _tmp2692 = 4 * _tmp2038;
  const Scalar _tmp2693 = 4 * _tmp2015;
  const Scalar _tmp2694 = 4 * _tmp2241;
  const Scalar _tmp2695 = 4 * _tmp2217;
  const Scalar _tmp2696 = 4 * _tmp2223;
  const Scalar _tmp2697 = 4 * _tmp2233;
  const Scalar _tmp2698 = 4 * _tmp2247;
  const Scalar _tmp2699 = 4 * _tmp2258;
  const Scalar _tmp2700 = 4 * _tmp2207;
  const Scalar _tmp2701 = 4 * _tmp2245;
  const Scalar _tmp2702 = 4 * _tmp2176;
  const Scalar _tmp2703 = 4 * _tmp2262;
  const Scalar _tmp2704 = 4 * _tmp2111;
  const Scalar _tmp2705 = 4 * _tmp2140;
  const Scalar _tmp2706 = 4 * _tmp2212;
  const Scalar _tmp2707 = 4 * _tmp2250;
  const Scalar _tmp2708 = 4 * _tmp2158;
  const Scalar _tmp2709 = 4 * _tmp2168;
  const Scalar _tmp2710 = 4 * _tmp2264;
  const Scalar _tmp2711 = 4 * _tmp946;
  const Scalar _tmp2712 = 4 * _tmp2406;
  const Scalar _tmp2713 = 4 * _tmp2356;
  const Scalar _tmp2714 = 4 * _tmp2288;
  const Scalar _tmp2715 = 4 * _tmp2437;
  const Scalar _tmp2716 = 4 * _tmp2303;
  const Scalar _tmp2717 = 4 * _tmp2354;
  const Scalar _tmp2718 = 4 * _tmp2330;
  const Scalar _tmp2719 = 4 * _tmp2276;
  const Scalar _tmp2720 = 4 * _tmp2396;
  const Scalar _tmp2721 = 4 * _tmp2408;
  const Scalar _tmp2722 = 4 * _tmp2372;
  const Scalar _tmp2723 = 4 * _tmp2269;
  const Scalar _tmp2724 = 4 * _tmp2344;
  const Scalar _tmp2725 = 4 * _tmp2431;
  const Scalar _tmp2726 = 4 * _tmp2321;
  const Scalar _tmp2727 = 4 * _tmp2404;
  const Scalar _tmp2728 = 4 * _tmp2398;
  const Scalar _tmp2729 = 4 * _tmp2468;
  const Scalar _tmp2730 = 4 * _tmp2476;
  const Scalar _tmp2731 = 4 * _tmp2481;
  const Scalar _tmp2732 = 4 * _tmp2484;
  const Scalar _tmp2733 = 4 * _tmp2493;
  const Scalar _tmp2734 = 4 * _tmp2510;
  const Scalar _tmp2735 = 4 * _tmp2518;
  const Scalar _tmp2736 = 4 * _tmp2515;
  const Scalar _tmp2737 = 4 * _tmp2531;
  const Scalar _tmp2738 = 4 * _tmp2547;
  const Scalar _tmp2739 = 4 * _tmp2550;
  const Scalar _tmp2740 = 4 * _tmp2556;
  const Scalar _tmp2741 = 4 * _tmp2574;
  const Scalar _tmp2742 = 4 * _tmp2571;
  const Scalar _tmp2743 = 4 * _tmp2579;
  const Scalar _tmp2744 = 4 * _tmp2582;
  const Scalar _tmp2745 = 4 * _tmp2589;
  const Scalar _tmp2746 = 4 * _tmp1643;
  const Scalar _tmp2747 = 4 * _tmp1761;
  const Scalar _tmp2748 = 4 * _tmp1530;
  const Scalar _tmp2749 = 4 * _tmp1634;
  const Scalar _tmp2750 = 4 * _tmp1846;
  const Scalar _tmp2751 = 4 * _tmp1765;
  const Scalar _tmp2752 = 4 * _tmp1833;
  const Scalar _tmp2753 = 4 * _tmp1658;
  const Scalar _tmp2754 = 4 * _tmp1640;
  const Scalar _tmp2755 = 4 * _tmp1798;
  const Scalar _tmp2756 = 4 * _tmp1650;
  const Scalar _tmp2757 = 4 * _tmp1627;
  const Scalar _tmp2758 = 4 * _tmp1988;
  const Scalar _tmp2759 = 4 * _tmp1934;
  const Scalar _tmp2760 = 4 * _tmp2071;
  const Scalar _tmp2761 = 4 * _tmp2029;
  const Scalar _tmp2762 = 4 * _tmp2065;
  const Scalar _tmp2763 = 4 * _tmp2075;
  const Scalar _tmp2764 = 4 * _tmp1671;
  const Scalar _tmp2765 = 4 * _tmp2082;
  const Scalar _tmp2766 = 4 * _tmp2102;
  const Scalar _tmp2767 = 4 * _tmp2132;
  const Scalar _tmp2768 = 4 * _tmp2116;
  const Scalar _tmp2769 = 4 * _tmp2252;
  const Scalar _tmp2770 = 4 * _tmp2178;
  const Scalar _tmp2771 = 4 * _tmp2433;
  const Scalar _tmp2772 = 4 * _tmp2435;
  const Scalar _tmp2773 = 4 * _tmp2414;
  const Scalar _tmp2774 = 4 * _tmp2305;
  const Scalar _tmp2775 = 4 * _tmp1675;
  const Scalar _tmp2776 = 4 * _tmp2363;
  const Scalar _tmp2777 = 4 * _tmp2314;
  const Scalar _tmp2778 = 4 * _tmp1599;
  const Scalar _tmp2779 = 4 * _tmp2451;
  const Scalar _tmp2780 = 4 * _tmp2474;
  const Scalar _tmp2781 = 4 * _tmp2491;
  const Scalar _tmp2782 = 4 * _tmp2541;
  const Scalar _tmp2783 = 4 * _tmp2565;
  const Scalar _tmp2784 = 4 * _tmp2599;
  const Scalar _tmp2785 = 4 * _tmp2057;
  const Scalar _tmp2786 = 4 * _tmp1816;
  const Scalar _tmp2787 = 4 * _tmp1842;
  const Scalar _tmp2788 = 4 * _tmp1806;
  const Scalar _tmp2789 = 4 * _tmp2009;
  const Scalar _tmp2790 = 4 * _tmp1848;
  const Scalar _tmp2791 = 4 * _tmp1830;
  const Scalar _tmp2792 = 4 * _tmp1746;
  const Scalar _tmp2793 = 4 * _tmp1800;
  const Scalar _tmp2794 = 4 * _tmp2239;
  const Scalar _tmp2795 = 4 * _tmp2229;
  const Scalar _tmp2796 = 4 * _tmp1823;
  const Scalar _tmp2797 = 4 * _tmp1767;
  const Scalar _tmp2798 = 4 * _tmp2185;
  const Scalar _tmp2799 = 4 * _tmp2387;
  const Scalar _tmp2800 = 4 * _tmp2449;
  const Scalar _tmp2801 = 4 * _tmp2458;
  const Scalar _tmp2802 = 4 * _tmp2069;
  const Scalar _tmp2803 = 4 * _tmp2198;
  const Scalar _tmp2804 = 4 * _tmp2231;
  const Scalar _tmp2805 = 4 * _tmp2142;
  const Scalar _tmp2806 = 4 * _tmp2088;
  const Scalar _tmp2807 = 4 * _tmp2243;
  const Scalar _tmp2808 = 4 * _tmp2260;
  const Scalar _tmp2809 = 4 * _tmp2190;
  const Scalar _tmp2810 = 4 * _tmp2271;
  const Scalar _tmp2811 = 4 * _tmp2412;
  const Scalar _tmp2812 = 4 * _tmp2290;
  const Scalar _tmp2813 = 4 * _tmp2416;
  const Scalar _tmp2814 = 4 * _tmp2389;
  const Scalar _tmp2815 = 4 * _tmp2429;
  const Scalar _tmp2816 = 4 * _tmp2325;
  const Scalar _tmp2817 = 4 * _tmp1890;
  const Scalar _tmp2818 = 4 * _tmp2558;
  const Scalar _tmp2819 = 4 * _tmp2563;
  const Scalar _tmp2820 = 4 * _tmp2534;

  // Output terms (4)
  if (residual != nullptr) {
    Eigen::Matrix<Scalar, 72, 1>& _residual = (*residual);

    _residual(0, 0) = _tmp41;
    _residual(1, 0) = _tmp43;
    _residual(2, 0) = _tmp44;
    _residual(3, 0) = _tmp45;
    _residual(4, 0) = _tmp46;
    _residual(5, 0) = _tmp47;
    _residual(6, 0) = _tmp131;
    _residual(7, 0) = _tmp134;
    _residual(8, 0) = _tmp137;
    _residual(9, 0) = _tmp138;
    _residual(10, 0) = _tmp140;
    _residual(11, 0) = _tmp142;
    _residual(12, 0) = _tmp202;
    _residual(13, 0) = _tmp203;
    _residual(14, 0) = _tmp235;
    _residual(15, 0) = _tmp236;
    _residual(16, 0) = _tmp268;
    _residual(17, 0) = _tmp269;
    _residual(18, 0) = _tmp300;
    _residual(19, 0) = _tmp301;
    _residual(20, 0) = _tmp333;
    _residual(21, 0) = _tmp334;
    _residual(22, 0) = _tmp367;
    _residual(23, 0) = _tmp368;
    _residual(24, 0) = _tmp399;
    _residual(25, 0) = _tmp400;
    _residual(26, 0) = _tmp431;
    _residual(27, 0) = _tmp432;
    _residual(28, 0) = _tmp463;
    _residual(29, 0) = _tmp464;
    _residual(30, 0) = _tmp497;
    _residual(31, 0) = _tmp498;
    _residual(32, 0) = _tmp531;
    _residual(33, 0) = _tmp532;
    _residual(34, 0) = _tmp563;
    _residual(35, 0) = _tmp564;
    _residual(36, 0) = _tmp597;
    _residual(37, 0) = _tmp598;
    _residual(38, 0) = _tmp631;
    _residual(39, 0) = _tmp632;
    _residual(40, 0) = _tmp663;
    _residual(41, 0) = _tmp664;
    _residual(42, 0) = _tmp696;
    _residual(43, 0) = _tmp697;
    _residual(44, 0) = _tmp728;
    _residual(45, 0) = _tmp729;
    _residual(46, 0) = _tmp762;
    _residual(47, 0) = _tmp763;
    _residual(48, 0) = _tmp796;
    _residual(49, 0) = _tmp797;
    _residual(50, 0) = _tmp830;
    _residual(51, 0) = _tmp831;
    _residual(52, 0) = -_tmp832 * _tmp834;
    _residual(53, 0) = -_tmp835 * _tmp837;
    _residual(54, 0) = -_tmp838 * _tmp840;
    _residual(55, 0) = -_tmp841 * _tmp843;
    _residual(56, 0) = -_tmp844 * _tmp846;
    _residual(57, 0) = -_tmp847 * _tmp849;
    _residual(58, 0) = -_tmp850 * _tmp852;
    _residual(59, 0) = -_tmp853 * _tmp855;
    _residual(60, 0) = -_tmp856 * _tmp858;
    _residual(61, 0) = -_tmp859 * _tmp861;
    _residual(62, 0) = -_tmp862 * _tmp864;
    _residual(63, 0) = -_tmp865 * _tmp867;
    _residual(64, 0) = -_tmp868 * _tmp870;
    _residual(65, 0) = -_tmp871 * _tmp873;
    _residual(66, 0) = -_tmp874 * _tmp876;
    _residual(67, 0) = -_tmp877 * _tmp879;
    _residual(68, 0) = -_tmp880 * _tmp882;
    _residual(69, 0) = -_tmp883 * _tmp885;
    _residual(70, 0) = -_tmp886 * _tmp888;
    _residual(71, 0) = -_tmp889 * _tmp891;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 26, 1>& _rhs = (*rhs);

    _rhs(0, 0) = -_tmp1013 * _tmp400 + _tmp1018 * _tmp138 + _tmp1034 * _tmp831 +
                 _tmp1050 * _tmp498 + _tmp1055 * _tmp830 + _tmp1092 * _tmp46 + _tmp1096 * _tmp497 +
                 _tmp1099 * _tmp44 + _tmp1116 * _tmp696 + _tmp1132 * _tmp664 + _tmp1148 * _tmp598 +
                 _tmp1165 * _tmp367 - _tmp1169 * _tmp763 - _tmp1185 * _tmp203 + _tmp1192 * _tmp45 -
                 _tmp1196 * _tmp368 + _tmp1212 * _tmp532 - _tmp1228 * _tmp301 - _tmp1233 * _tmp399 -
                 _tmp1249 * _tmp564 - _tmp1265 * _tmp236 + _tmp1270 * _tmp597 + _tmp1278 * _tmp137 -
                 _tmp1282 * _tmp563 + _tmp1299 * _tmp333 + _tmp131 * _tmp1320 + _tmp1316 * _tmp268 +
                 _tmp1322 * _tmp142 + _tmp1338 * _tmp463 + _tmp134 * _tmp993 + _tmp1343 * _tmp531 -
                 _tmp1347 * _tmp334 + _tmp1349 * _tmp41 - _tmp1353 * _tmp269 + _tmp1358 * _tmp235 -
                 _tmp1362 * _tmp464 + _tmp1378 * _tmp728 - _tmp1382 * _tmp697 + _tmp1384 * _tmp140 +
                 _tmp1387 * _tmp47 + _tmp1390 * _tmp43 + _tmp1395 * _tmp300 - _tmp1400 * _tmp663 -
                 _tmp1405 * _tmp202 - _tmp1409 * _tmp729 - _tmp1426 * _tmp631 + _tmp1429 * _tmp632 -
                 _tmp431 * _tmp952 + _tmp432 * _tmp915 + _tmp762 * _tmp947 + _tmp796 * _tmp998 +
                 _tmp797 * _tmp930;
    _rhs(1, 0) = _tmp131 * _tmp1691 + _tmp134 * _tmp1686 + _tmp137 * _tmp1523 + _tmp138 * _tmp1583 +
                 _tmp140 * _tmp1464 + _tmp142 * _tmp1660 + _tmp1440 * _tmp236 + _tmp1474 * _tmp41 +
                 _tmp1478 * _tmp43 + _tmp1487 * _tmp729 - _tmp1495 * _tmp431 - _tmp1504 * _tmp563 +
                 _tmp1508 * _tmp432 - _tmp1518 * _tmp463 - _tmp1521 * _tmp728 - _tmp1531 * _tmp203 +
                 _tmp1538 * _tmp763 - _tmp1544 * _tmp531 - _tmp1546 * _tmp235 - _tmp1554 * _tmp498 +
                 _tmp1556 * _tmp202 - _tmp1563 * _tmp368 - _tmp1570 * _tmp268 - _tmp1579 * _tmp632 +
                 _tmp1590 * _tmp831 + _tmp1600 * _tmp400 + _tmp1601 * _tmp44 - _tmp1609 * _tmp333 -
                 _tmp1618 * _tmp797 + _tmp1626 * _tmp664 + _tmp1628 * _tmp631 - _tmp1635 * _tmp697 -
                 _tmp1637 * _tmp269 - _tmp1639 * _tmp464 - _tmp1641 * _tmp334 - _tmp1644 * _tmp830 +
                 _tmp1651 * _tmp598 - _tmp1653 * _tmp399 + _tmp1656 * _tmp45 - _tmp1659 * _tmp564 -
                 _tmp1663 * _tmp597 - _tmp1665 * _tmp497 + _tmp1667 * _tmp696 + _tmp1670 * _tmp532 +
                 _tmp1672 * _tmp663 + _tmp1674 * _tmp47 + _tmp1676 * _tmp796 - _tmp1684 * _tmp301 +
                 _tmp1685 * _tmp46 + _tmp1688 * _tmp300 + _tmp1690 * _tmp367 + _tmp1693 * _tmp762;
    _rhs(2, 0) = _tmp131 * _tmp1853 + _tmp134 * _tmp1760 + _tmp137 * _tmp1737 + _tmp138 * _tmp1854 +
                 _tmp140 * _tmp1832 + _tmp142 * _tmp1757 + _tmp1697 * _tmp269 - _tmp1701 * _tmp367 +
                 _tmp1705 * _tmp300 + _tmp1710 * _tmp44 + _tmp1713 * _tmp531 + _tmp1716 * _tmp762 -
                 _tmp1720 * _tmp464 + _tmp1738 * _tmp46 - _tmp1740 * _tmp763 + _tmp1742 * _tmp45 +
                 _tmp1747 * _tmp564 - _tmp1752 * _tmp697 + _tmp1753 * _tmp43 + _tmp1762 * _tmp301 +
                 _tmp1766 * _tmp663 + _tmp1768 * _tmp532 - _tmp1772 * _tmp202 - _tmp1777 * _tmp728 +
                 _tmp1778 * _tmp47 - _tmp1781 * _tmp632 + _tmp1786 * _tmp400 - _tmp1788 * _tmp399 -
                 _tmp1790 * _tmp203 + _tmp1792 * _tmp729 - _tmp1797 * _tmp333 + _tmp1799 * _tmp268 -
                 _tmp1801 * _tmp368 + _tmp1803 * _tmp696 + _tmp1807 * _tmp236 + _tmp1811 * _tmp831 +
                 _tmp1813 * _tmp463 + _tmp1817 * _tmp431 + _tmp1820 * _tmp797 + _tmp1824 * _tmp598 +
                 _tmp1825 * _tmp41 + _tmp1827 * _tmp796 + _tmp1829 * _tmp597 + _tmp1831 * _tmp432 +
                 _tmp1834 * _tmp563 - _tmp1836 * _tmp235 - _tmp1839 * _tmp498 - _tmp1841 * _tmp497 +
                 _tmp1843 * _tmp631 - _tmp1845 * _tmp334 - _tmp1847 * _tmp664 + _tmp1849 * _tmp830;
    _rhs(3, 0) = _tmp131 * _tmp2080 + _tmp134 * _tmp2074 + _tmp137 * _tmp2045 + _tmp138 * _tmp2064 +
                 _tmp140 * _tmp1911 + _tmp142 * _tmp1902 + _tmp1863 * _tmp763 - _tmp1873 * _tmp269 -
                 _tmp1881 * _tmp399 - _tmp1883 * _tmp47 - _tmp1891 * _tmp432 + _tmp1900 * _tmp831 -
                 _tmp1909 * _tmp368 - _tmp1919 * _tmp301 - _tmp1927 * _tmp564 + _tmp1935 * _tmp664 -
                 _tmp1945 * _tmp632 + _tmp1954 * _tmp796 - _tmp1962 * _tmp333 - _tmp1964 * _tmp46 -
                 _tmp1972 * _tmp697 - _tmp1979 * _tmp729 - _tmp1989 * _tmp203 + _tmp1991 * _tmp431 -
                 _tmp2000 * _tmp597 - _tmp2002 * _tmp41 + _tmp2010 * _tmp532 - _tmp2012 * _tmp43 +
                 _tmp2014 * _tmp531 - _tmp2016 * _tmp400 + _tmp202 * _tmp2060 + _tmp2024 * _tmp235 -
                 _tmp2026 * _tmp236 + _tmp2028 * _tmp762 + _tmp2030 * _tmp598 + _tmp2032 * _tmp334 -
                 _tmp2039 * _tmp463 + _tmp2041 * _tmp728 + _tmp2043 * _tmp464 - _tmp2054 * _tmp498 -
                 _tmp2056 * _tmp663 - _tmp2058 * _tmp497 - _tmp2062 * _tmp300 - _tmp2066 * _tmp563 -
                 _tmp2068 * _tmp45 - _tmp2070 * _tmp830 - _tmp2072 * _tmp367 + _tmp2076 * _tmp797 -
                 _tmp2078 * _tmp631 - _tmp2083 * _tmp268 - _tmp2085 * _tmp696 - _tmp2087 * _tmp44;
    _rhs(4, 0) = _tmp131 * _tmp2257 + _tmp134 * _tmp2255 + _tmp137 * _tmp2199 + _tmp138 * _tmp2232 +
                 _tmp140 * _tmp2135 + _tmp142 * _tmp2125 + _tmp202 * _tmp2220 + _tmp203 * _tmp2153 -
                 _tmp2089 * _tmp47 + _tmp2097 * _tmp301 - _tmp2103 * _tmp664 - _tmp2105 * _tmp43 +
                 _tmp2112 * _tmp729 - _tmp2117 * _tmp268 + _tmp2123 * _tmp532 - _tmp2127 * _tmp300 -
                 _tmp2133 * _tmp334 + _tmp2141 * _tmp368 - _tmp2143 * _tmp46 - _tmp2148 * _tmp564 +
                 _tmp2159 * _tmp498 + _tmp2164 * _tmp762 - _tmp2169 * _tmp831 - _tmp2171 * _tmp41 -
                 _tmp2177 * _tmp463 + _tmp2179 * _tmp563 - _tmp2181 * _tmp830 + _tmp2186 * _tmp235 -
                 _tmp2191 * _tmp432 + _tmp2197 * _tmp598 - _tmp2204 * _tmp632 + _tmp2206 * _tmp236 -
                 _tmp2208 * _tmp269 + _tmp2213 * _tmp400 + _tmp2218 * _tmp797 - _tmp2222 * _tmp631 -
                 _tmp2224 * _tmp497 - _tmp2230 * _tmp697 - _tmp2234 * _tmp696 - _tmp2236 * _tmp597 -
                 _tmp2238 * _tmp663 - _tmp2240 * _tmp431 + _tmp2242 * _tmp399 - _tmp2244 * _tmp45 -
                 _tmp2246 * _tmp763 + _tmp2248 * _tmp333 - _tmp2251 * _tmp531 - _tmp2253 * _tmp367 -
                 _tmp2259 * _tmp464 - _tmp2261 * _tmp44 - _tmp2263 * _tmp728 - _tmp2265 * _tmp796;
    _rhs(5, 0) = _tmp131 * _tmp2417 + _tmp134 * _tmp2413 + _tmp137 * _tmp2339 + _tmp138 * _tmp2366 +
                 _tmp140 * _tmp2291 + _tmp142 * _tmp2272 - _tmp202 * _tmp2331 + _tmp203 * _tmp2436 -
                 _tmp2270 * _tmp632 - _tmp2277 * _tmp762 - _tmp2284 * _tmp728 - _tmp2289 * _tmp831 -
                 _tmp2293 * _tmp45 + _tmp2299 * _tmp368 + _tmp2304 * _tmp300 - _tmp2306 * _tmp830 -
                 _tmp2308 * _tmp367 + _tmp2310 * _tmp729 + _tmp2315 * _tmp797 - _tmp2317 * _tmp44 +
                 _tmp2322 * _tmp399 - _tmp2324 * _tmp400 - _tmp2326 * _tmp631 + _tmp2337 * _tmp532 -
                 _tmp2345 * _tmp696 - _tmp235 * _tmp2397 + _tmp2350 * _tmp664 - _tmp2355 * _tmp597 -
                 _tmp2357 * _tmp531 + _tmp2359 * _tmp796 + _tmp236 * _tmp2388 + _tmp2364 * _tmp564 +
                 _tmp2373 * _tmp497 - _tmp2375 * _tmp47 - _tmp2377 * _tmp598 - _tmp2383 * _tmp333 -
                 _tmp2390 * _tmp43 - _tmp2395 * _tmp432 + _tmp2399 * _tmp334 + _tmp2405 * _tmp464 -
                 _tmp2407 * _tmp463 - _tmp2409 * _tmp498 - _tmp2411 * _tmp46 - _tmp2415 * _tmp563 +
                 _tmp2419 * _tmp763 - _tmp2421 * _tmp431 - _tmp2423 * _tmp697 + _tmp2428 * _tmp269 -
                 _tmp2430 * _tmp41 - _tmp2432 * _tmp268 + _tmp2434 * _tmp301 - _tmp2438 * _tmp663;
    _rhs(6, 0) = _tmp202 * _tmp2450 - _tmp203 * _tmp2452 - _tmp2439 * _tmp832;
    _rhs(7, 0) = -_tmp235 * _tmp2461 - _tmp236 * _tmp2459 - _tmp2453 * _tmp835;
    _rhs(8, 0) = _tmp2466 * _tmp268 - _tmp2467 * _tmp838 + _tmp2469 * _tmp269;
    _rhs(9, 0) = -_tmp2470 * _tmp841 + _tmp2475 * _tmp301 - _tmp2477 * _tmp300;
    _rhs(10, 0) = _tmp2482 * _tmp334 - _tmp2485 * _tmp333 - _tmp2486 * _tmp844;
    _rhs(11, 0) = _tmp2492 * _tmp367 + _tmp2494 * _tmp368 - _tmp2495 * _tmp847;
    _rhs(12, 0) = -_tmp2496 * _tmp850 - _tmp2501 * _tmp399 + _tmp2503 * _tmp400;
    _rhs(13, 0) = -_tmp2504 * _tmp853 + _tmp2509 * _tmp432 + _tmp2511 * _tmp431;
    _rhs(14, 0) = _tmp2516 * _tmp463 - _tmp2517 * _tmp856 + _tmp2519 * _tmp464;
    _rhs(15, 0) = _tmp2524 * _tmp497 - _tmp2525 * _tmp859 - _tmp2527 * _tmp498;
    _rhs(16, 0) = _tmp2532 * _tmp531 - _tmp2533 * _tmp862 + _tmp2535 * _tmp532;
    _rhs(17, 0) = -_tmp2540 * _tmp563 + _tmp2542 * _tmp564 - _tmp2543 * _tmp865;
    _rhs(18, 0) = _tmp2548 * _tmp598 - _tmp2549 * _tmp868 - _tmp2551 * _tmp597;
    _rhs(19, 0) = -_tmp2552 * _tmp871 - _tmp2557 * _tmp632 + _tmp2559 * _tmp631;
    _rhs(20, 0) = _tmp2564 * _tmp663 + _tmp2566 * _tmp664 - _tmp2567 * _tmp874;
    _rhs(21, 0) = _tmp2572 * _tmp696 - _tmp2573 * _tmp877 + _tmp2575 * _tmp697;
    _rhs(22, 0) = _tmp2580 * _tmp729 - _tmp2581 * _tmp880 - _tmp2583 * _tmp728;
    _rhs(23, 0) = -_tmp2584 * _tmp883 - _tmp2590 * _tmp763 - _tmp2592 * _tmp762;
    _rhs(24, 0) = _tmp2597 * _tmp796 - _tmp2598 * _tmp886 + _tmp2600 * _tmp797;
    _rhs(25, 0) = _tmp2605 * _tmp830 - _tmp2606 * _tmp889 - _tmp2608 * _tmp831;
  }

  if (jacobian != nullptr) {
    static constexpr int kRows_jacobian = 72;
    static constexpr int kCols_jacobian = 26;
    static constexpr int kNumNonZero_jacobian = 372;
    static constexpr int kColPtrs_jacobian[] = {0,   52,  104, 156, 208, 260, 312, 315, 318,
                                                321, 324, 327, 330, 333, 336, 339, 342, 345,
                                                348, 351, 354, 357, 360, 363, 366, 369, 372};
    static constexpr int kRowIndices_jacobian[] = {
        0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
        22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
        44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13,
        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,
        6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
        28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11,
        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,
        4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
        48, 49, 50, 51, 12, 13, 52, 14, 15, 53, 16, 17, 54, 18, 19, 55, 20, 21, 56, 22, 23, 57,
        24, 25, 58, 26, 27, 59, 28, 29, 60, 30, 31, 61, 32, 33, 62, 34, 35, 63, 36, 37, 64, 38,
        39, 65, 40, 41, 66, 42, 43, 67, 44, 45, 68, 46, 47, 69, 48, 49, 70, 50, 51, 71};
    if (jacobian->nonZeros() != 372 || jacobian->outerSize() != 26 || jacobian->innerSize() != 72 ||
        !jacobian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar jacobian_empty_value_ptr[372];
      *jacobian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_jacobian, kCols_jacobian, kNumNonZero_jacobian, kColPtrs_jacobian,
          kRowIndices_jacobian, jacobian_empty_value_ptr);
    }
    Scalar* jacobian_value_ptr = jacobian->valuePtr();

    jacobian_value_ptr[0] = _tmp1349;
    jacobian_value_ptr[1] = _tmp1390;
    jacobian_value_ptr[2] = _tmp1099;
    jacobian_value_ptr[3] = _tmp1192;
    jacobian_value_ptr[4] = _tmp1092;
    jacobian_value_ptr[5] = _tmp1387;
    jacobian_value_ptr[6] = _tmp1320;
    jacobian_value_ptr[7] = _tmp993;
    jacobian_value_ptr[8] = _tmp1278;
    jacobian_value_ptr[9] = _tmp1018;
    jacobian_value_ptr[10] = _tmp1384;
    jacobian_value_ptr[11] = _tmp1322;
    jacobian_value_ptr[12] = -_tmp1405;
    jacobian_value_ptr[13] = -_tmp1185;
    jacobian_value_ptr[14] = _tmp1358;
    jacobian_value_ptr[15] = -_tmp1265;
    jacobian_value_ptr[16] = _tmp1316;
    jacobian_value_ptr[17] = -_tmp1353;
    jacobian_value_ptr[18] = _tmp1395;
    jacobian_value_ptr[19] = -_tmp1228;
    jacobian_value_ptr[20] = _tmp1299;
    jacobian_value_ptr[21] = -_tmp1347;
    jacobian_value_ptr[22] = _tmp1165;
    jacobian_value_ptr[23] = -_tmp1196;
    jacobian_value_ptr[24] = -_tmp1233;
    jacobian_value_ptr[25] = -_tmp1013;
    jacobian_value_ptr[26] = -_tmp952;
    jacobian_value_ptr[27] = _tmp915;
    jacobian_value_ptr[28] = _tmp1338;
    jacobian_value_ptr[29] = -_tmp1362;
    jacobian_value_ptr[30] = _tmp1096;
    jacobian_value_ptr[31] = _tmp1050;
    jacobian_value_ptr[32] = _tmp1343;
    jacobian_value_ptr[33] = _tmp1212;
    jacobian_value_ptr[34] = -_tmp1282;
    jacobian_value_ptr[35] = -_tmp1249;
    jacobian_value_ptr[36] = _tmp1270;
    jacobian_value_ptr[37] = _tmp1148;
    jacobian_value_ptr[38] = -_tmp1426;
    jacobian_value_ptr[39] = _tmp1429;
    jacobian_value_ptr[40] = -_tmp1400;
    jacobian_value_ptr[41] = _tmp1132;
    jacobian_value_ptr[42] = _tmp1116;
    jacobian_value_ptr[43] = -_tmp1382;
    jacobian_value_ptr[44] = _tmp1378;
    jacobian_value_ptr[45] = -_tmp1409;
    jacobian_value_ptr[46] = _tmp947;
    jacobian_value_ptr[47] = -_tmp1169;
    jacobian_value_ptr[48] = _tmp998;
    jacobian_value_ptr[49] = _tmp930;
    jacobian_value_ptr[50] = _tmp1055;
    jacobian_value_ptr[51] = _tmp1034;
    jacobian_value_ptr[52] = _tmp1474;
    jacobian_value_ptr[53] = _tmp1478;
    jacobian_value_ptr[54] = _tmp1601;
    jacobian_value_ptr[55] = _tmp1656;
    jacobian_value_ptr[56] = _tmp1685;
    jacobian_value_ptr[57] = _tmp1674;
    jacobian_value_ptr[58] = _tmp1691;
    jacobian_value_ptr[59] = _tmp1686;
    jacobian_value_ptr[60] = _tmp1523;
    jacobian_value_ptr[61] = _tmp1583;
    jacobian_value_ptr[62] = _tmp1464;
    jacobian_value_ptr[63] = _tmp1660;
    jacobian_value_ptr[64] = _tmp1556;
    jacobian_value_ptr[65] = -_tmp1531;
    jacobian_value_ptr[66] = -_tmp1546;
    jacobian_value_ptr[67] = _tmp1440;
    jacobian_value_ptr[68] = -_tmp1570;
    jacobian_value_ptr[69] = -_tmp1637;
    jacobian_value_ptr[70] = _tmp1688;
    jacobian_value_ptr[71] = -_tmp1684;
    jacobian_value_ptr[72] = -_tmp1609;
    jacobian_value_ptr[73] = -_tmp1641;
    jacobian_value_ptr[74] = _tmp1690;
    jacobian_value_ptr[75] = -_tmp1563;
    jacobian_value_ptr[76] = -_tmp1653;
    jacobian_value_ptr[77] = _tmp1600;
    jacobian_value_ptr[78] = -_tmp1495;
    jacobian_value_ptr[79] = _tmp1508;
    jacobian_value_ptr[80] = -_tmp1518;
    jacobian_value_ptr[81] = -_tmp1639;
    jacobian_value_ptr[82] = -_tmp1665;
    jacobian_value_ptr[83] = -_tmp1554;
    jacobian_value_ptr[84] = -_tmp1544;
    jacobian_value_ptr[85] = _tmp1670;
    jacobian_value_ptr[86] = -_tmp1504;
    jacobian_value_ptr[87] = -_tmp1659;
    jacobian_value_ptr[88] = -_tmp1663;
    jacobian_value_ptr[89] = _tmp1651;
    jacobian_value_ptr[90] = _tmp1628;
    jacobian_value_ptr[91] = -_tmp1579;
    jacobian_value_ptr[92] = _tmp1672;
    jacobian_value_ptr[93] = _tmp1626;
    jacobian_value_ptr[94] = _tmp1667;
    jacobian_value_ptr[95] = -_tmp1635;
    jacobian_value_ptr[96] = -_tmp1521;
    jacobian_value_ptr[97] = _tmp1487;
    jacobian_value_ptr[98] = _tmp1693;
    jacobian_value_ptr[99] = _tmp1538;
    jacobian_value_ptr[100] = _tmp1676;
    jacobian_value_ptr[101] = -_tmp1618;
    jacobian_value_ptr[102] = -_tmp1644;
    jacobian_value_ptr[103] = _tmp1590;
    jacobian_value_ptr[104] = _tmp1825;
    jacobian_value_ptr[105] = _tmp1753;
    jacobian_value_ptr[106] = _tmp1710;
    jacobian_value_ptr[107] = _tmp1742;
    jacobian_value_ptr[108] = _tmp1738;
    jacobian_value_ptr[109] = _tmp1778;
    jacobian_value_ptr[110] = _tmp1853;
    jacobian_value_ptr[111] = _tmp1760;
    jacobian_value_ptr[112] = _tmp1737;
    jacobian_value_ptr[113] = _tmp1854;
    jacobian_value_ptr[114] = _tmp1832;
    jacobian_value_ptr[115] = _tmp1757;
    jacobian_value_ptr[116] = -_tmp1772;
    jacobian_value_ptr[117] = -_tmp1790;
    jacobian_value_ptr[118] = -_tmp1836;
    jacobian_value_ptr[119] = _tmp1807;
    jacobian_value_ptr[120] = _tmp1799;
    jacobian_value_ptr[121] = _tmp1697;
    jacobian_value_ptr[122] = _tmp1705;
    jacobian_value_ptr[123] = _tmp1762;
    jacobian_value_ptr[124] = -_tmp1797;
    jacobian_value_ptr[125] = -_tmp1845;
    jacobian_value_ptr[126] = -_tmp1701;
    jacobian_value_ptr[127] = -_tmp1801;
    jacobian_value_ptr[128] = -_tmp1788;
    jacobian_value_ptr[129] = _tmp1786;
    jacobian_value_ptr[130] = _tmp1817;
    jacobian_value_ptr[131] = _tmp1831;
    jacobian_value_ptr[132] = _tmp1813;
    jacobian_value_ptr[133] = -_tmp1720;
    jacobian_value_ptr[134] = -_tmp1841;
    jacobian_value_ptr[135] = -_tmp1839;
    jacobian_value_ptr[136] = _tmp1713;
    jacobian_value_ptr[137] = _tmp1768;
    jacobian_value_ptr[138] = _tmp1834;
    jacobian_value_ptr[139] = _tmp1747;
    jacobian_value_ptr[140] = _tmp1829;
    jacobian_value_ptr[141] = _tmp1824;
    jacobian_value_ptr[142] = _tmp1843;
    jacobian_value_ptr[143] = -_tmp1781;
    jacobian_value_ptr[144] = _tmp1766;
    jacobian_value_ptr[145] = -_tmp1847;
    jacobian_value_ptr[146] = _tmp1803;
    jacobian_value_ptr[147] = -_tmp1752;
    jacobian_value_ptr[148] = -_tmp1777;
    jacobian_value_ptr[149] = _tmp1792;
    jacobian_value_ptr[150] = _tmp1716;
    jacobian_value_ptr[151] = -_tmp1740;
    jacobian_value_ptr[152] = _tmp1827;
    jacobian_value_ptr[153] = _tmp1820;
    jacobian_value_ptr[154] = _tmp1849;
    jacobian_value_ptr[155] = _tmp1811;
    jacobian_value_ptr[156] = -_tmp2002;
    jacobian_value_ptr[157] = -_tmp2012;
    jacobian_value_ptr[158] = -_tmp2087;
    jacobian_value_ptr[159] = -_tmp2068;
    jacobian_value_ptr[160] = -_tmp1964;
    jacobian_value_ptr[161] = -_tmp1883;
    jacobian_value_ptr[162] = _tmp2080;
    jacobian_value_ptr[163] = _tmp2074;
    jacobian_value_ptr[164] = _tmp2045;
    jacobian_value_ptr[165] = _tmp2064;
    jacobian_value_ptr[166] = _tmp1911;
    jacobian_value_ptr[167] = _tmp1902;
    jacobian_value_ptr[168] = _tmp2060;
    jacobian_value_ptr[169] = -_tmp1989;
    jacobian_value_ptr[170] = _tmp2024;
    jacobian_value_ptr[171] = -_tmp2026;
    jacobian_value_ptr[172] = -_tmp2083;
    jacobian_value_ptr[173] = -_tmp1873;
    jacobian_value_ptr[174] = -_tmp2062;
    jacobian_value_ptr[175] = -_tmp1919;
    jacobian_value_ptr[176] = -_tmp1962;
    jacobian_value_ptr[177] = _tmp2032;
    jacobian_value_ptr[178] = -_tmp2072;
    jacobian_value_ptr[179] = -_tmp1909;
    jacobian_value_ptr[180] = -_tmp1881;
    jacobian_value_ptr[181] = -_tmp2016;
    jacobian_value_ptr[182] = _tmp1991;
    jacobian_value_ptr[183] = -_tmp1891;
    jacobian_value_ptr[184] = -_tmp2039;
    jacobian_value_ptr[185] = _tmp2043;
    jacobian_value_ptr[186] = -_tmp2058;
    jacobian_value_ptr[187] = -_tmp2054;
    jacobian_value_ptr[188] = _tmp2014;
    jacobian_value_ptr[189] = _tmp2010;
    jacobian_value_ptr[190] = -_tmp2066;
    jacobian_value_ptr[191] = -_tmp1927;
    jacobian_value_ptr[192] = -_tmp2000;
    jacobian_value_ptr[193] = _tmp2030;
    jacobian_value_ptr[194] = -_tmp2078;
    jacobian_value_ptr[195] = -_tmp1945;
    jacobian_value_ptr[196] = -_tmp2056;
    jacobian_value_ptr[197] = _tmp1935;
    jacobian_value_ptr[198] = -_tmp2085;
    jacobian_value_ptr[199] = -_tmp1972;
    jacobian_value_ptr[200] = _tmp2041;
    jacobian_value_ptr[201] = -_tmp1979;
    jacobian_value_ptr[202] = _tmp2028;
    jacobian_value_ptr[203] = _tmp1863;
    jacobian_value_ptr[204] = _tmp1954;
    jacobian_value_ptr[205] = _tmp2076;
    jacobian_value_ptr[206] = -_tmp2070;
    jacobian_value_ptr[207] = _tmp1900;
    jacobian_value_ptr[208] = -_tmp2171;
    jacobian_value_ptr[209] = -_tmp2105;
    jacobian_value_ptr[210] = -_tmp2261;
    jacobian_value_ptr[211] = -_tmp2244;
    jacobian_value_ptr[212] = -_tmp2143;
    jacobian_value_ptr[213] = -_tmp2089;
    jacobian_value_ptr[214] = _tmp2257;
    jacobian_value_ptr[215] = _tmp2255;
    jacobian_value_ptr[216] = _tmp2199;
    jacobian_value_ptr[217] = _tmp2232;
    jacobian_value_ptr[218] = _tmp2135;
    jacobian_value_ptr[219] = _tmp2125;
    jacobian_value_ptr[220] = _tmp2220;
    jacobian_value_ptr[221] = _tmp2153;
    jacobian_value_ptr[222] = _tmp2186;
    jacobian_value_ptr[223] = _tmp2206;
    jacobian_value_ptr[224] = -_tmp2117;
    jacobian_value_ptr[225] = -_tmp2208;
    jacobian_value_ptr[226] = -_tmp2127;
    jacobian_value_ptr[227] = _tmp2097;
    jacobian_value_ptr[228] = _tmp2248;
    jacobian_value_ptr[229] = -_tmp2133;
    jacobian_value_ptr[230] = -_tmp2253;
    jacobian_value_ptr[231] = _tmp2141;
    jacobian_value_ptr[232] = _tmp2242;
    jacobian_value_ptr[233] = _tmp2213;
    jacobian_value_ptr[234] = -_tmp2240;
    jacobian_value_ptr[235] = -_tmp2191;
    jacobian_value_ptr[236] = -_tmp2177;
    jacobian_value_ptr[237] = -_tmp2259;
    jacobian_value_ptr[238] = -_tmp2224;
    jacobian_value_ptr[239] = _tmp2159;
    jacobian_value_ptr[240] = -_tmp2251;
    jacobian_value_ptr[241] = _tmp2123;
    jacobian_value_ptr[242] = _tmp2179;
    jacobian_value_ptr[243] = -_tmp2148;
    jacobian_value_ptr[244] = -_tmp2236;
    jacobian_value_ptr[245] = _tmp2197;
    jacobian_value_ptr[246] = -_tmp2222;
    jacobian_value_ptr[247] = -_tmp2204;
    jacobian_value_ptr[248] = -_tmp2238;
    jacobian_value_ptr[249] = -_tmp2103;
    jacobian_value_ptr[250] = -_tmp2234;
    jacobian_value_ptr[251] = -_tmp2230;
    jacobian_value_ptr[252] = -_tmp2263;
    jacobian_value_ptr[253] = _tmp2112;
    jacobian_value_ptr[254] = _tmp2164;
    jacobian_value_ptr[255] = -_tmp2246;
    jacobian_value_ptr[256] = -_tmp2265;
    jacobian_value_ptr[257] = _tmp2218;
    jacobian_value_ptr[258] = -_tmp2181;
    jacobian_value_ptr[259] = -_tmp2169;
    jacobian_value_ptr[260] = -_tmp2430;
    jacobian_value_ptr[261] = -_tmp2390;
    jacobian_value_ptr[262] = -_tmp2317;
    jacobian_value_ptr[263] = -_tmp2293;
    jacobian_value_ptr[264] = -_tmp2411;
    jacobian_value_ptr[265] = -_tmp2375;
    jacobian_value_ptr[266] = _tmp2417;
    jacobian_value_ptr[267] = _tmp2413;
    jacobian_value_ptr[268] = _tmp2339;
    jacobian_value_ptr[269] = _tmp2366;
    jacobian_value_ptr[270] = _tmp2291;
    jacobian_value_ptr[271] = _tmp2272;
    jacobian_value_ptr[272] = -_tmp2331;
    jacobian_value_ptr[273] = _tmp2436;
    jacobian_value_ptr[274] = -_tmp2397;
    jacobian_value_ptr[275] = _tmp2388;
    jacobian_value_ptr[276] = -_tmp2432;
    jacobian_value_ptr[277] = _tmp2428;
    jacobian_value_ptr[278] = _tmp2304;
    jacobian_value_ptr[279] = _tmp2434;
    jacobian_value_ptr[280] = -_tmp2383;
    jacobian_value_ptr[281] = _tmp2399;
    jacobian_value_ptr[282] = -_tmp2308;
    jacobian_value_ptr[283] = _tmp2299;
    jacobian_value_ptr[284] = _tmp2322;
    jacobian_value_ptr[285] = -_tmp2324;
    jacobian_value_ptr[286] = -_tmp2421;
    jacobian_value_ptr[287] = -_tmp2395;
    jacobian_value_ptr[288] = -_tmp2407;
    jacobian_value_ptr[289] = _tmp2405;
    jacobian_value_ptr[290] = _tmp2373;
    jacobian_value_ptr[291] = -_tmp2409;
    jacobian_value_ptr[292] = -_tmp2357;
    jacobian_value_ptr[293] = _tmp2337;
    jacobian_value_ptr[294] = -_tmp2415;
    jacobian_value_ptr[295] = _tmp2364;
    jacobian_value_ptr[296] = -_tmp2355;
    jacobian_value_ptr[297] = -_tmp2377;
    jacobian_value_ptr[298] = -_tmp2326;
    jacobian_value_ptr[299] = -_tmp2270;
    jacobian_value_ptr[300] = -_tmp2438;
    jacobian_value_ptr[301] = _tmp2350;
    jacobian_value_ptr[302] = -_tmp2345;
    jacobian_value_ptr[303] = -_tmp2423;
    jacobian_value_ptr[304] = -_tmp2284;
    jacobian_value_ptr[305] = _tmp2310;
    jacobian_value_ptr[306] = -_tmp2277;
    jacobian_value_ptr[307] = _tmp2419;
    jacobian_value_ptr[308] = _tmp2359;
    jacobian_value_ptr[309] = _tmp2315;
    jacobian_value_ptr[310] = -_tmp2306;
    jacobian_value_ptr[311] = -_tmp2289;
    jacobian_value_ptr[312] = _tmp2450;
    jacobian_value_ptr[313] = -_tmp2452;
    jacobian_value_ptr[314] = _tmp834;
    jacobian_value_ptr[315] = -_tmp2461;
    jacobian_value_ptr[316] = -_tmp2459;
    jacobian_value_ptr[317] = _tmp837;
    jacobian_value_ptr[318] = _tmp2466;
    jacobian_value_ptr[319] = _tmp2469;
    jacobian_value_ptr[320] = _tmp840;
    jacobian_value_ptr[321] = -_tmp2477;
    jacobian_value_ptr[322] = _tmp2475;
    jacobian_value_ptr[323] = _tmp843;
    jacobian_value_ptr[324] = -_tmp2485;
    jacobian_value_ptr[325] = _tmp2482;
    jacobian_value_ptr[326] = _tmp846;
    jacobian_value_ptr[327] = _tmp2492;
    jacobian_value_ptr[328] = _tmp2494;
    jacobian_value_ptr[329] = _tmp849;
    jacobian_value_ptr[330] = -_tmp2501;
    jacobian_value_ptr[331] = _tmp2503;
    jacobian_value_ptr[332] = _tmp852;
    jacobian_value_ptr[333] = _tmp2511;
    jacobian_value_ptr[334] = _tmp2509;
    jacobian_value_ptr[335] = _tmp855;
    jacobian_value_ptr[336] = _tmp2516;
    jacobian_value_ptr[337] = _tmp2519;
    jacobian_value_ptr[338] = _tmp858;
    jacobian_value_ptr[339] = _tmp2524;
    jacobian_value_ptr[340] = -_tmp2527;
    jacobian_value_ptr[341] = _tmp861;
    jacobian_value_ptr[342] = _tmp2532;
    jacobian_value_ptr[343] = _tmp2535;
    jacobian_value_ptr[344] = _tmp864;
    jacobian_value_ptr[345] = -_tmp2540;
    jacobian_value_ptr[346] = _tmp2542;
    jacobian_value_ptr[347] = _tmp867;
    jacobian_value_ptr[348] = -_tmp2551;
    jacobian_value_ptr[349] = _tmp2548;
    jacobian_value_ptr[350] = _tmp870;
    jacobian_value_ptr[351] = _tmp2559;
    jacobian_value_ptr[352] = -_tmp2557;
    jacobian_value_ptr[353] = _tmp873;
    jacobian_value_ptr[354] = _tmp2564;
    jacobian_value_ptr[355] = _tmp2566;
    jacobian_value_ptr[356] = _tmp876;
    jacobian_value_ptr[357] = _tmp2572;
    jacobian_value_ptr[358] = _tmp2575;
    jacobian_value_ptr[359] = _tmp879;
    jacobian_value_ptr[360] = -_tmp2583;
    jacobian_value_ptr[361] = _tmp2580;
    jacobian_value_ptr[362] = _tmp882;
    jacobian_value_ptr[363] = -_tmp2592;
    jacobian_value_ptr[364] = -_tmp2590;
    jacobian_value_ptr[365] = _tmp885;
    jacobian_value_ptr[366] = _tmp2597;
    jacobian_value_ptr[367] = _tmp2600;
    jacobian_value_ptr[368] = _tmp888;
    jacobian_value_ptr[369] = _tmp2605;
    jacobian_value_ptr[370] = -_tmp2608;
    jacobian_value_ptr[371] = _tmp891;
  }

  if (hessian != nullptr) {
    static constexpr int kRows_hessian = 26;
    static constexpr int kCols_hessian = 26;
    static constexpr int kNumNonZero_hessian = 161;
    static constexpr int kColPtrs_hessian[] = {0,   26,  51,  75,  98,  120, 141, 142, 143,
                                               144, 145, 146, 147, 148, 149, 150, 151, 152,
                                               153, 154, 155, 156, 157, 158, 159, 160, 161};
    static constexpr int kRowIndices_hessian[] = {
        0,  1,  2,  3,  4,  5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 1,  2,  3,  4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 2,  3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
    if (hessian->nonZeros() != 161 || hessian->outerSize() != 26 || hessian->innerSize() != 26 ||
        !hessian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar hessian_empty_value_ptr[161];
      *hessian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_hessian, kCols_hessian, kNumNonZero_hessian, kColPtrs_hessian, kRowIndices_hessian,
          hessian_empty_value_ptr);
    }
    Scalar* hessian_value_ptr = hessian->valuePtr();

    hessian_value_ptr[0] = 4 * std::pow(_tmp1012, Scalar(2)) + std::pow(_tmp1018, Scalar(2)) +
                           4 * std::pow(_tmp1033, Scalar(2)) + 4 * std::pow(_tmp1049, Scalar(2)) +
                           4 * std::pow(_tmp1054, Scalar(2)) + std::pow(_tmp1092, Scalar(2)) +
                           4 * std::pow(_tmp1095, Scalar(2)) + std::pow(_tmp1099, Scalar(2)) +
                           4 * std::pow(_tmp1115, Scalar(2)) + 4 * std::pow(_tmp1131, Scalar(2)) +
                           4 * std::pow(_tmp1147, Scalar(2)) + 4 * std::pow(_tmp1164, Scalar(2)) +
                           4 * std::pow(_tmp1168, Scalar(2)) + 4 * std::pow(_tmp1184, Scalar(2)) +
                           std::pow(_tmp1192, Scalar(2)) + 4 * std::pow(_tmp1195, Scalar(2)) +
                           4 * std::pow(_tmp1211, Scalar(2)) + 4 * std::pow(_tmp1227, Scalar(2)) +
                           4 * std::pow(_tmp1232, Scalar(2)) + 4 * std::pow(_tmp1248, Scalar(2)) +
                           4 * std::pow(_tmp1264, Scalar(2)) + 4 * std::pow(_tmp1269, Scalar(2)) +
                           std::pow(_tmp1278, Scalar(2)) + 4 * std::pow(_tmp1281, Scalar(2)) +
                           4 * std::pow(_tmp1298, Scalar(2)) + 4 * std::pow(_tmp1315, Scalar(2)) +
                           std::pow(_tmp1320, Scalar(2)) + std::pow(_tmp1322, Scalar(2)) +
                           4 * std::pow(_tmp1337, Scalar(2)) + 4 * std::pow(_tmp1342, Scalar(2)) +
                           4 * std::pow(_tmp1346, Scalar(2)) + std::pow(_tmp1349, Scalar(2)) +
                           4 * std::pow(_tmp1352, Scalar(2)) + 4 * std::pow(_tmp1357, Scalar(2)) +
                           4 * std::pow(_tmp1361, Scalar(2)) + 4 * std::pow(_tmp1377, Scalar(2)) +
                           4 * std::pow(_tmp1381, Scalar(2)) + std::pow(_tmp1384, Scalar(2)) +
                           std::pow(_tmp1387, Scalar(2)) + std::pow(_tmp1390, Scalar(2)) +
                           4 * std::pow(_tmp1394, Scalar(2)) + 4 * std::pow(_tmp1399, Scalar(2)) +
                           4 * std::pow(_tmp1404, Scalar(2)) + 4 * std::pow(_tmp1408, Scalar(2)) +
                           4 * std::pow(_tmp1425, Scalar(2)) + 4 * std::pow(_tmp1428, Scalar(2)) +
                           4 * std::pow(_tmp914, Scalar(2)) + 4 * std::pow(_tmp929, Scalar(2)) +
                           4 * std::pow(_tmp946, Scalar(2)) + 4 * std::pow(_tmp951, Scalar(2)) +
                           std::pow(_tmp993, Scalar(2)) + 4 * std::pow(_tmp997, Scalar(2));
    hessian_value_ptr[1] =
        _tmp1018 * _tmp1583 - _tmp1049 * _tmp2641 + _tmp1092 * _tmp1685 - _tmp1095 * _tmp2638 +
        _tmp1099 * _tmp1601 + _tmp1115 * _tmp2614 - _tmp1168 * _tmp2645 + _tmp1192 * _tmp1656 +
        _tmp1195 * _tmp2631 + _tmp1211 * _tmp2620 + _tmp1232 * _tmp2636 - _tmp1264 * _tmp2642 -
        _tmp1269 * _tmp2626 + _tmp1278 * _tmp1523 - _tmp1298 * _tmp2637 + _tmp1320 * _tmp1691 +
        _tmp1322 * _tmp1660 - _tmp1337 * _tmp2612 - _tmp1342 * _tmp2618 + _tmp1349 * _tmp1474 +
        _tmp1352 * _tmp2630 - _tmp1357 * _tmp2611 + _tmp1361 * _tmp2639 - _tmp1377 * _tmp2610 +
        _tmp1384 * _tmp1464 + _tmp1387 * _tmp1674 + _tmp1390 * _tmp1478 + _tmp1394 * _tmp2624 -
        _tmp1404 * _tmp2617 - _tmp1408 * _tmp2613 - _tmp1428 * _tmp2625 + _tmp1503 * _tmp2640 +
        _tmp1530 * _tmp2643 - _tmp1569 * _tmp2616 + _tmp1589 * _tmp2622 - _tmp1599 * _tmp2615 -
        _tmp1617 * _tmp2609 + _tmp1625 * _tmp2635 - _tmp1627 * _tmp2646 + _tmp1634 * _tmp2647 +
        _tmp1640 * _tmp2628 - _tmp1643 * _tmp2627 + _tmp1650 * _tmp2623 + _tmp1658 * _tmp2629 -
        _tmp1671 * _tmp2634 + _tmp1675 * _tmp2644 + _tmp1683 * _tmp2632 + _tmp1686 * _tmp993 +
        _tmp1689 * _tmp2621 + _tmp2619 * _tmp946 + _tmp2633 * _tmp914 + _tmp2648 * _tmp951;
    hessian_value_ptr[2] =
        -_tmp1012 * _tmp2655 + _tmp1018 * _tmp1854 + _tmp1033 * _tmp2656 - _tmp1049 * _tmp2658 +
        _tmp1092 * _tmp1738 + _tmp1099 * _tmp1710 + _tmp1115 * _tmp2660 - _tmp1164 * _tmp2652 +
        _tmp1168 * _tmp2672 + _tmp1192 * _tmp1742 + _tmp1232 * _tmp2649 + _tmp1269 * _tmp2663 +
        _tmp1278 * _tmp1737 + _tmp1320 * _tmp1853 + _tmp1322 * _tmp1757 + 4 * _tmp1337 * _tmp1812 +
        4 * _tmp1342 * _tmp1712 + _tmp1349 * _tmp1825 - _tmp1352 * _tmp2667 +
        4 * _tmp1361 * _tmp1719 - _tmp1377 * _tmp2668 + _tmp1384 * _tmp1832 + _tmp1387 * _tmp1778 +
        _tmp1390 * _tmp1753 + _tmp1394 * _tmp2669 - _tmp1408 * _tmp2653 - _tmp1428 * _tmp2664 -
        _tmp1746 * _tmp2629 + _tmp1751 * _tmp2647 + _tmp1760 * _tmp993 - _tmp1761 * _tmp2632 -
        _tmp1765 * _tmp2634 + _tmp1767 * _tmp2657 + _tmp1771 * _tmp2670 + _tmp1789 * _tmp2643 -
        _tmp1796 * _tmp2654 + _tmp1798 * _tmp2616 + _tmp1800 * _tmp2659 - _tmp1806 * _tmp2651 -
        _tmp1816 * _tmp2671 + _tmp1819 * _tmp2609 + _tmp1823 * _tmp2623 + _tmp1830 * _tmp2666 -
        _tmp1833 * _tmp2640 - _tmp1835 * _tmp2650 - _tmp1840 * _tmp2662 - _tmp1842 * _tmp2646 +
        _tmp1844 * _tmp2628 - _tmp1846 * _tmp2635 + _tmp1848 * _tmp2627 + _tmp2661 * _tmp946 +
        _tmp2665 * _tmp997;
    hessian_value_ptr[3] =
        _tmp1012 * _tmp2693 + _tmp1018 * _tmp2064 + _tmp1033 * _tmp2676 - _tmp1049 * _tmp2673 -
        _tmp1092 * _tmp1964 - _tmp1099 * _tmp2087 - 4 * _tmp1115 * _tmp2084 - _tmp1168 * _tmp2680 -
        _tmp1192 * _tmp2068 + _tmp1227 * _tmp2691 + _tmp1278 * _tmp2045 - _tmp1298 * _tmp2677 +
        _tmp1320 * _tmp2080 + _tmp1322 * _tmp1902 - _tmp1337 * _tmp2692 + _tmp1342 * _tmp2683 -
        _tmp1349 * _tmp2002 + _tmp1352 * _tmp2687 + _tmp1357 * _tmp2689 - _tmp1361 * _tmp2686 +
        _tmp1377 * _tmp2679 + _tmp1381 * _tmp2682 + _tmp1384 * _tmp1911 - _tmp1387 * _tmp1883 -
        _tmp1390 * _tmp2012 - _tmp1394 * _tmp2684 - _tmp1404 * _tmp2690 + _tmp1408 * _tmp2685 -
        _tmp1428 * _tmp2688 + _tmp1880 * _tmp2681 - _tmp1890 * _tmp2666 + _tmp1908 * _tmp2659 +
        _tmp1926 * _tmp2629 + _tmp1934 * _tmp2635 + _tmp1988 * _tmp2643 - _tmp1990 * _tmp2671 -
        _tmp1999 * _tmp2678 + _tmp2009 * _tmp2657 + _tmp2025 * _tmp2651 + _tmp2029 * _tmp2623 -
        _tmp2031 * _tmp2628 + _tmp2055 * _tmp2634 - _tmp2057 * _tmp2662 + _tmp2065 * _tmp2640 -
        _tmp2069 * _tmp2627 - _tmp2071 * _tmp2621 + _tmp2074 * _tmp993 + _tmp2075 * _tmp2609 +
        _tmp2077 * _tmp2646 - _tmp2082 * _tmp2616 + _tmp2674 * _tmp997 + _tmp2675 * _tmp946;
    hessian_value_ptr[4] =
        -_tmp1012 * _tmp2706 + _tmp1018 * _tmp2232 - _tmp1033 * _tmp2709 + _tmp1049 * _tmp2708 -
        _tmp1092 * _tmp2143 - _tmp1095 * _tmp2696 - _tmp1099 * _tmp2261 - _tmp1115 * _tmp2697 +
        _tmp1168 * _tmp2701 - _tmp1192 * _tmp2244 - _tmp1195 * _tmp2705 - _tmp1232 * _tmp2694 +
        _tmp1278 * _tmp2199 + _tmp1298 * _tmp2698 + _tmp1320 * _tmp2257 + _tmp1322 * _tmp2125 -
        _tmp1337 * _tmp2702 - _tmp1342 * _tmp2707 - _tmp1349 * _tmp2171 + _tmp1352 * _tmp2700 +
        _tmp1361 * _tmp2699 - _tmp1377 * _tmp2703 + _tmp1384 * _tmp2135 - _tmp1387 * _tmp2089 -
        _tmp1390 * _tmp2105 - 4 * _tmp1394 * _tmp2126 - _tmp1408 * _tmp2704 -
        4 * _tmp1428 * _tmp2203 - _tmp2096 * _tmp2632 - _tmp2102 * _tmp2635 - _tmp2116 * _tmp2616 +
        _tmp2122 * _tmp2657 + _tmp2132 * _tmp2628 + _tmp2147 * _tmp2629 - _tmp2152 * _tmp2643 +
        _tmp2163 * _tmp2711 - _tmp2178 * _tmp2640 - _tmp2180 * _tmp2627 + _tmp2185 * _tmp2650 -
        _tmp2190 * _tmp2666 + _tmp2196 * _tmp2623 - _tmp2205 * _tmp2651 - _tmp2219 * _tmp2670 +
        _tmp2221 * _tmp2646 + _tmp2229 * _tmp2647 - _tmp2235 * _tmp2678 + _tmp2237 * _tmp2634 +
        _tmp2239 * _tmp2671 - _tmp2252 * _tmp2621 + _tmp2255 * _tmp993 + _tmp2695 * _tmp929 -
        _tmp2710 * _tmp997;
    hessian_value_ptr[5] =
        _tmp1018 * _tmp2366 - _tmp1033 * _tmp2714 - _tmp1049 * _tmp2721 - _tmp1092 * _tmp2411 +
        _tmp1095 * _tmp2722 - _tmp1099 * _tmp2317 - _tmp1115 * _tmp2724 - 4 * _tmp1168 * _tmp2418 -
        _tmp1192 * _tmp2293 - _tmp1232 * _tmp2726 - _tmp1269 * _tmp2717 + _tmp1278 * _tmp2339 -
        _tmp1315 * _tmp2725 + _tmp1320 * _tmp2417 + _tmp1322 * _tmp2272 - _tmp1337 * _tmp2712 -
        _tmp1342 * _tmp2713 - _tmp1346 * _tmp2728 - _tmp1349 * _tmp2430 - 4 * _tmp1352 * _tmp2427 -
        _tmp1357 * _tmp2720 - _tmp1361 * _tmp2727 - 4 * _tmp1377 * _tmp2283 + _tmp1384 * _tmp2291 -
        _tmp1387 * _tmp2375 - _tmp1390 * _tmp2390 + _tmp1394 * _tmp2716 + _tmp1399 * _tmp2715 +
        _tmp1404 * _tmp2718 - 4 * _tmp1408 * _tmp2309 - _tmp1428 * _tmp2723 - _tmp2298 * _tmp2659 -
        _tmp2305 * _tmp2627 - _tmp2307 * _tmp2621 + _tmp2314 * _tmp2609 + _tmp2323 * _tmp2615 +
        _tmp2325 * _tmp2646 + _tmp2336 * _tmp2657 + _tmp2349 * _tmp2635 + _tmp2358 * _tmp2644 -
        _tmp2363 * _tmp2629 - _tmp2376 * _tmp2623 - _tmp2382 * _tmp2654 - _tmp2387 * _tmp2651 -
        _tmp2394 * _tmp2666 + _tmp2413 * _tmp993 + _tmp2414 * _tmp2640 + _tmp2420 * _tmp2671 +
        _tmp2422 * _tmp2647 - _tmp2433 * _tmp2632 - _tmp2435 * _tmp2643 - _tmp2719 * _tmp946;
    hessian_value_ptr[6] = -_tmp2449 * _tmp2670 + _tmp2451 * _tmp2643;
    hessian_value_ptr[7] = _tmp2458 * _tmp2651 - _tmp2460 * _tmp2650;
    hessian_value_ptr[8] = -_tmp1352 * _tmp2729 + _tmp2465 * _tmp2616;
    hessian_value_ptr[9] = -_tmp1394 * _tmp2730 - _tmp2474 * _tmp2632;
    hessian_value_ptr[10] = -_tmp1298 * _tmp2732 - _tmp1346 * _tmp2731;
    hessian_value_ptr[11] = -_tmp1195 * _tmp2733 + _tmp2491 * _tmp2621;
    hessian_value_ptr[12] = _tmp2500 * _tmp2681 - _tmp2502 * _tmp2615;
    hessian_value_ptr[13] = _tmp2508 * _tmp2666 - _tmp2734 * _tmp951;
    hessian_value_ptr[14] = _tmp1337 * _tmp2736 - _tmp1361 * _tmp2735;
    hessian_value_ptr[15] = -4 * _tmp1049 * _tmp2526 + _tmp2523 * _tmp2662;
    hessian_value_ptr[16] = _tmp1342 * _tmp2737 + _tmp2534 * _tmp2657;
    hessian_value_ptr[17] = _tmp2539 * _tmp2640 - _tmp2541 * _tmp2629;
    hessian_value_ptr[18] = _tmp1147 * _tmp2738 - _tmp1269 * _tmp2739;
    hessian_value_ptr[19] = -_tmp1428 * _tmp2740 - _tmp2558 * _tmp2646;
    hessian_value_ptr[20] = -_tmp2563 * _tmp2634 + _tmp2565 * _tmp2635;
    hessian_value_ptr[21] = _tmp1115 * _tmp2742 - _tmp1381 * _tmp2741;
    hessian_value_ptr[22] = -_tmp1377 * _tmp2744 - _tmp1408 * _tmp2743;
    hessian_value_ptr[23] = _tmp1168 * _tmp2745 - _tmp2591 * _tmp2711;
    hessian_value_ptr[24] = _tmp2596 * _tmp2644 + _tmp2599 * _tmp2609;
    hessian_value_ptr[25] = _tmp2604 * _tmp2627 - _tmp2607 * _tmp2622;
    hessian_value_ptr[26] = 4 * std::pow(_tmp1439, Scalar(2)) + std::pow(_tmp1464, Scalar(2)) +
                            std::pow(_tmp1474, Scalar(2)) + std::pow(_tmp1478, Scalar(2)) +
                            4 * std::pow(_tmp1486, Scalar(2)) + 4 * std::pow(_tmp1494, Scalar(2)) +
                            4 * std::pow(_tmp1503, Scalar(2)) + 4 * std::pow(_tmp1507, Scalar(2)) +
                            4 * std::pow(_tmp1517, Scalar(2)) + 4 * std::pow(_tmp1520, Scalar(2)) +
                            std::pow(_tmp1523, Scalar(2)) + 4 * std::pow(_tmp1530, Scalar(2)) +
                            4 * std::pow(_tmp1537, Scalar(2)) + 4 * std::pow(_tmp1543, Scalar(2)) +
                            4 * std::pow(_tmp1545, Scalar(2)) + 4 * std::pow(_tmp1553, Scalar(2)) +
                            4 * std::pow(_tmp1555, Scalar(2)) + 4 * std::pow(_tmp1562, Scalar(2)) +
                            4 * std::pow(_tmp1569, Scalar(2)) + 4 * std::pow(_tmp1578, Scalar(2)) +
                            std::pow(_tmp1583, Scalar(2)) + 4 * std::pow(_tmp1589, Scalar(2)) +
                            4 * std::pow(_tmp1599, Scalar(2)) + std::pow(_tmp1601, Scalar(2)) +
                            4 * std::pow(_tmp1608, Scalar(2)) + 4 * std::pow(_tmp1617, Scalar(2)) +
                            4 * std::pow(_tmp1625, Scalar(2)) + 4 * std::pow(_tmp1627, Scalar(2)) +
                            4 * std::pow(_tmp1634, Scalar(2)) + 4 * std::pow(_tmp1636, Scalar(2)) +
                            4 * std::pow(_tmp1638, Scalar(2)) + 4 * std::pow(_tmp1640, Scalar(2)) +
                            4 * std::pow(_tmp1643, Scalar(2)) + 4 * std::pow(_tmp1650, Scalar(2)) +
                            4 * std::pow(_tmp1652, Scalar(2)) + std::pow(_tmp1656, Scalar(2)) +
                            4 * std::pow(_tmp1658, Scalar(2)) + std::pow(_tmp1660, Scalar(2)) +
                            4 * std::pow(_tmp1662, Scalar(2)) + 4 * std::pow(_tmp1664, Scalar(2)) +
                            4 * std::pow(_tmp1666, Scalar(2)) + 4 * std::pow(_tmp1669, Scalar(2)) +
                            4 * std::pow(_tmp1671, Scalar(2)) + std::pow(_tmp1674, Scalar(2)) +
                            4 * std::pow(_tmp1675, Scalar(2)) + 4 * std::pow(_tmp1683, Scalar(2)) +
                            std::pow(_tmp1685, Scalar(2)) + std::pow(_tmp1686, Scalar(2)) +
                            4 * std::pow(_tmp1687, Scalar(2)) + 4 * std::pow(_tmp1689, Scalar(2)) +
                            std::pow(_tmp1691, Scalar(2)) + 4 * std::pow(_tmp1692, Scalar(2));
    hessian_value_ptr[27] =
        _tmp1464 * _tmp1832 + _tmp1474 * _tmp1825 + _tmp1478 * _tmp1753 + _tmp1486 * _tmp2653 -
        _tmp1503 * _tmp2752 + _tmp1523 * _tmp1737 - _tmp1569 * _tmp2755 + _tmp1578 * _tmp2664 +
        _tmp1583 * _tmp1854 + _tmp1589 * _tmp2656 + _tmp1599 * _tmp2655 + _tmp1601 * _tmp1710 -
        4 * _tmp1617 * _tmp1819 - _tmp1625 * _tmp2750 + _tmp1656 * _tmp1742 + _tmp1660 * _tmp1757 +
        _tmp1666 * _tmp2660 + _tmp1671 * _tmp2751 + _tmp1674 * _tmp1778 + _tmp1675 * _tmp2665 -
        _tmp1683 * _tmp2747 + _tmp1685 * _tmp1738 + _tmp1686 * _tmp1760 - _tmp1689 * _tmp2652 +
        _tmp1691 * _tmp1853 + _tmp1692 * _tmp2661 - _tmp1696 * _tmp2630 + _tmp1704 * _tmp2624 -
        _tmp1712 * _tmp2618 + _tmp1719 * _tmp2639 - _tmp1739 * _tmp2645 - _tmp1746 * _tmp2753 +
        _tmp1751 * _tmp2749 + _tmp1767 * _tmp2620 - _tmp1771 * _tmp2617 + _tmp1776 * _tmp2610 +
        _tmp1787 * _tmp2636 + _tmp1789 * _tmp2748 + _tmp1796 * _tmp2637 + _tmp1800 * _tmp2631 +
        _tmp1806 * _tmp2642 - _tmp1812 * _tmp2612 - _tmp1816 * _tmp2648 + _tmp1823 * _tmp2756 -
        _tmp1828 * _tmp2626 + _tmp1830 * _tmp2633 + _tmp1835 * _tmp2611 + _tmp1838 * _tmp2641 +
        _tmp1840 * _tmp2638 + _tmp1842 * _tmp2757 + _tmp1844 * _tmp2754 - _tmp1848 * _tmp2746;
    hessian_value_ptr[28] =
        _tmp1464 * _tmp1911 - _tmp1474 * _tmp2002 - _tmp1478 * _tmp2012 - _tmp1486 * _tmp2685 +
        _tmp1503 * _tmp2762 + _tmp1523 * _tmp2045 + _tmp1530 * _tmp2758 - _tmp1545 * _tmp2689 +
        _tmp1555 * _tmp2690 + _tmp1569 * _tmp2765 + _tmp1578 * _tmp2688 + _tmp1583 * _tmp2064 +
        _tmp1589 * _tmp2676 - _tmp1599 * _tmp2693 - _tmp1601 * _tmp2087 - _tmp1617 * _tmp2763 +
        _tmp1625 * _tmp2759 + _tmp1634 * _tmp2682 - _tmp1638 * _tmp2686 + _tmp1650 * _tmp2761 -
        _tmp1656 * _tmp2068 + _tmp1660 * _tmp1902 - _tmp1674 * _tmp1883 + _tmp1675 * _tmp2674 +
        _tmp1683 * _tmp2691 - _tmp1685 * _tmp1964 + _tmp1686 * _tmp2074 - _tmp1689 * _tmp2760 +
        _tmp1691 * _tmp2080 + _tmp1692 * _tmp2675 + _tmp1862 * _tmp2645 + _tmp1872 * _tmp2630 +
        _tmp1880 * _tmp2636 - _tmp1890 * _tmp2633 + _tmp1908 * _tmp2631 + _tmp1926 * _tmp2753 +
        _tmp1961 * _tmp2637 - _tmp1990 * _tmp2648 + _tmp1999 * _tmp2626 + _tmp2009 * _tmp2620 -
        _tmp2013 * _tmp2618 - _tmp2025 * _tmp2642 - _tmp2031 * _tmp2754 + _tmp2038 * _tmp2612 -
        _tmp2040 * _tmp2610 + _tmp2053 * _tmp2641 - _tmp2055 * _tmp2764 + _tmp2057 * _tmp2638 -
        _tmp2061 * _tmp2624 + _tmp2069 * _tmp2746 - _tmp2077 * _tmp2757 - _tmp2084 * _tmp2614;
    hessian_value_ptr[29] =
        _tmp1464 * _tmp2135 - _tmp1474 * _tmp2171 - _tmp1478 * _tmp2105 + _tmp1486 * _tmp2704 -
        _tmp1503 * _tmp2770 + _tmp1523 * _tmp2199 - _tmp1562 * _tmp2705 + _tmp1569 * _tmp2768 +
        _tmp1583 * _tmp2232 - _tmp1589 * _tmp2709 + _tmp1599 * _tmp2706 - _tmp1601 * _tmp2261 -
        _tmp1608 * _tmp2698 - _tmp1617 * _tmp2695 - _tmp1625 * _tmp2766 + _tmp1638 * _tmp2699 +
        _tmp1640 * _tmp2767 - _tmp1656 * _tmp2244 + _tmp1660 * _tmp2125 + _tmp1664 * _tmp2696 -
        _tmp1674 * _tmp2089 - _tmp1675 * _tmp2710 - 4 * _tmp1683 * _tmp2096 - _tmp1685 * _tmp2143 +
        _tmp1686 * _tmp2255 - _tmp1689 * _tmp2769 + _tmp1691 * _tmp2257 + _tmp2122 * _tmp2620 -
        _tmp2126 * _tmp2624 + _tmp2147 * _tmp2753 - _tmp2152 * _tmp2748 - _tmp2158 * _tmp2641 +
        _tmp2163 * _tmp2619 + _tmp2176 * _tmp2612 + _tmp2180 * _tmp2746 - _tmp2185 * _tmp2611 -
        _tmp2190 * _tmp2633 + _tmp2196 * _tmp2756 + _tmp2203 * _tmp2625 + _tmp2205 * _tmp2642 +
        _tmp2207 * _tmp2630 + _tmp2219 * _tmp2617 - _tmp2221 * _tmp2757 + _tmp2229 * _tmp2749 -
        _tmp2233 * _tmp2614 + _tmp2235 * _tmp2626 - _tmp2237 * _tmp2764 + _tmp2239 * _tmp2648 -
        _tmp2241 * _tmp2636 - _tmp2245 * _tmp2645 + _tmp2250 * _tmp2618 + _tmp2262 * _tmp2610;
    hessian_value_ptr[30] =
        _tmp1464 * _tmp2291 - _tmp1474 * _tmp2430 - _tmp1478 * _tmp2390 + _tmp1503 * _tmp2773 +
        _tmp1517 * _tmp2712 + _tmp1523 * _tmp2339 - _tmp1530 * _tmp2772 + _tmp1545 * _tmp2720 -
        _tmp1555 * _tmp2718 + _tmp1569 * _tmp2725 + _tmp1583 * _tmp2366 - _tmp1589 * _tmp2714 -
        _tmp1601 * _tmp2317 - _tmp1617 * _tmp2777 + 4 * _tmp1625 * _tmp2349 - _tmp1638 * _tmp2727 -
        _tmp1640 * _tmp2728 + _tmp1643 * _tmp2774 - _tmp1656 * _tmp2293 - _tmp1658 * _tmp2776 +
        _tmp1660 * _tmp2272 - _tmp1671 * _tmp2715 - _tmp1674 * _tmp2375 - _tmp1683 * _tmp2771 -
        _tmp1685 * _tmp2411 + _tmp1686 * _tmp2413 - 4 * _tmp1689 * _tmp2307 + _tmp1691 * _tmp2417 -
        _tmp1692 * _tmp2719 + _tmp2269 * _tmp2625 + _tmp2283 * _tmp2610 - _tmp2298 * _tmp2631 +
        _tmp2303 * _tmp2624 + _tmp2309 * _tmp2613 - _tmp2321 * _tmp2636 - _tmp2323 * _tmp2778 -
        _tmp2325 * _tmp2757 + _tmp2336 * _tmp2620 - _tmp2344 * _tmp2614 + _tmp2354 * _tmp2626 +
        _tmp2356 * _tmp2618 + _tmp2358 * _tmp2775 - _tmp2372 * _tmp2638 - _tmp2376 * _tmp2756 +
        _tmp2382 * _tmp2637 + _tmp2387 * _tmp2642 - _tmp2394 * _tmp2633 + _tmp2408 * _tmp2641 +
        _tmp2418 * _tmp2645 + _tmp2420 * _tmp2648 + _tmp2422 * _tmp2749 - _tmp2427 * _tmp2630;
    hessian_value_ptr[31] = _tmp1530 * _tmp2779 + _tmp2449 * _tmp2617;
    hessian_value_ptr[32] = -_tmp2458 * _tmp2642 + _tmp2460 * _tmp2611;
    hessian_value_ptr[33] = -4 * _tmp1569 * _tmp2465 - _tmp2468 * _tmp2630;
    hessian_value_ptr[34] = -_tmp1683 * _tmp2780 - _tmp2476 * _tmp2624;
    hessian_value_ptr[35] = _tmp1608 * _tmp2732 - _tmp1640 * _tmp2731;
    hessian_value_ptr[36] = _tmp1689 * _tmp2781 - _tmp2493 * _tmp2631;
    hessian_value_ptr[37] = _tmp2500 * _tmp2636 + _tmp2502 * _tmp2778;
    hessian_value_ptr[38] = _tmp2508 * _tmp2633 - _tmp2510 * _tmp2648;
    hessian_value_ptr[39] = -_tmp2515 * _tmp2612 - _tmp2518 * _tmp2639;
    hessian_value_ptr[40] = -_tmp2523 * _tmp2638 + _tmp2526 * _tmp2641;
    hessian_value_ptr[41] = -_tmp2531 * _tmp2618 + _tmp2534 * _tmp2620;
    hessian_value_ptr[42] = 4 * _tmp1503 * _tmp2539 - _tmp1658 * _tmp2782;
    hessian_value_ptr[43] = _tmp1650 * _tmp2738 + _tmp2550 * _tmp2626;
    hessian_value_ptr[44] = _tmp1578 * _tmp2740 + _tmp2558 * _tmp2757;
    hessian_value_ptr[45] = _tmp1625 * _tmp2783 + _tmp2563 * _tmp2764;
    hessian_value_ptr[46] = -_tmp1634 * _tmp2741 + _tmp2571 * _tmp2614;
    hessian_value_ptr[47] = _tmp1486 * _tmp2743 + _tmp2582 * _tmp2610;
    hessian_value_ptr[48] = -_tmp2589 * _tmp2645 - _tmp2591 * _tmp2619;
    hessian_value_ptr[49] = -_tmp1617 * _tmp2784 + _tmp2596 * _tmp2775;
    hessian_value_ptr[50] = -4 * _tmp1589 * _tmp2607 - _tmp2604 * _tmp2746;
    hessian_value_ptr[51] = 4 * std::pow(_tmp1696, Scalar(2)) + 4 * std::pow(_tmp1700, Scalar(2)) +
                            4 * std::pow(_tmp1704, Scalar(2)) + std::pow(_tmp1710, Scalar(2)) +
                            4 * std::pow(_tmp1712, Scalar(2)) + 4 * std::pow(_tmp1715, Scalar(2)) +
                            4 * std::pow(_tmp1719, Scalar(2)) + std::pow(_tmp1737, Scalar(2)) +
                            std::pow(_tmp1738, Scalar(2)) + 4 * std::pow(_tmp1739, Scalar(2)) +
                            std::pow(_tmp1742, Scalar(2)) + 4 * std::pow(_tmp1746, Scalar(2)) +
                            4 * std::pow(_tmp1751, Scalar(2)) + std::pow(_tmp1753, Scalar(2)) +
                            std::pow(_tmp1757, Scalar(2)) + std::pow(_tmp1760, Scalar(2)) +
                            4 * std::pow(_tmp1761, Scalar(2)) + 4 * std::pow(_tmp1765, Scalar(2)) +
                            4 * std::pow(_tmp1767, Scalar(2)) + 4 * std::pow(_tmp1771, Scalar(2)) +
                            4 * std::pow(_tmp1776, Scalar(2)) + std::pow(_tmp1778, Scalar(2)) +
                            4 * std::pow(_tmp1780, Scalar(2)) + 4 * std::pow(_tmp1785, Scalar(2)) +
                            4 * std::pow(_tmp1787, Scalar(2)) + 4 * std::pow(_tmp1789, Scalar(2)) +
                            4 * std::pow(_tmp1791, Scalar(2)) + 4 * std::pow(_tmp1796, Scalar(2)) +
                            4 * std::pow(_tmp1798, Scalar(2)) + 4 * std::pow(_tmp1800, Scalar(2)) +
                            4 * std::pow(_tmp1802, Scalar(2)) + 4 * std::pow(_tmp1806, Scalar(2)) +
                            4 * std::pow(_tmp1810, Scalar(2)) + 4 * std::pow(_tmp1812, Scalar(2)) +
                            4 * std::pow(_tmp1816, Scalar(2)) + 4 * std::pow(_tmp1819, Scalar(2)) +
                            4 * std::pow(_tmp1823, Scalar(2)) + std::pow(_tmp1825, Scalar(2)) +
                            4 * std::pow(_tmp1826, Scalar(2)) + 4 * std::pow(_tmp1828, Scalar(2)) +
                            4 * std::pow(_tmp1830, Scalar(2)) + std::pow(_tmp1832, Scalar(2)) +
                            4 * std::pow(_tmp1833, Scalar(2)) + 4 * std::pow(_tmp1835, Scalar(2)) +
                            4 * std::pow(_tmp1838, Scalar(2)) + 4 * std::pow(_tmp1840, Scalar(2)) +
                            4 * std::pow(_tmp1842, Scalar(2)) + 4 * std::pow(_tmp1844, Scalar(2)) +
                            4 * std::pow(_tmp1846, Scalar(2)) + 4 * std::pow(_tmp1848, Scalar(2)) +
                            std::pow(_tmp1853, Scalar(2)) + std::pow(_tmp1854, Scalar(2));
    hessian_value_ptr[52] =
        -_tmp1704 * _tmp2684 - _tmp1710 * _tmp2087 + _tmp1712 * _tmp2683 - _tmp1719 * _tmp2686 +
        _tmp1737 * _tmp2045 - _tmp1738 * _tmp1964 - _tmp1742 * _tmp2068 + _tmp1751 * _tmp2682 -
        _tmp1753 * _tmp2012 + _tmp1757 * _tmp1902 + _tmp1760 * _tmp2074 - _tmp1761 * _tmp2691 +
        _tmp1767 * _tmp2789 - _tmp1771 * _tmp2690 - _tmp1778 * _tmp1883 + _tmp1780 * _tmp2688 -
        _tmp1785 * _tmp2693 + _tmp1789 * _tmp2758 - _tmp1791 * _tmp2685 + _tmp1796 * _tmp2677 -
        _tmp1798 * _tmp2765 - _tmp1812 * _tmp2692 + _tmp1819 * _tmp2763 + _tmp1823 * _tmp2761 -
        _tmp1825 * _tmp2002 + _tmp1826 * _tmp2674 + _tmp1832 * _tmp1911 - _tmp1833 * _tmp2762 -
        _tmp1835 * _tmp2689 + _tmp1838 * _tmp2673 + _tmp1840 * _tmp2785 - 4 * _tmp1844 * _tmp2031 -
        _tmp1846 * _tmp2759 + _tmp1853 * _tmp2080 + _tmp1854 * _tmp2064 - _tmp1862 * _tmp2672 -
        _tmp1872 * _tmp2667 + _tmp1880 * _tmp2649 - _tmp1890 * _tmp2791 + _tmp1899 * _tmp2656 +
        _tmp1908 * _tmp2793 - _tmp1926 * _tmp2792 + _tmp1990 * _tmp2786 - _tmp1999 * _tmp2663 -
        _tmp2025 * _tmp2788 + _tmp2027 * _tmp2661 - _tmp2040 * _tmp2668 - _tmp2055 * _tmp2751 -
        _tmp2069 * _tmp2790 + _tmp2071 * _tmp2652 - _tmp2077 * _tmp2787 - _tmp2084 * _tmp2660;
    hessian_value_ptr[53] =
        -_tmp1710 * _tmp2261 - _tmp1712 * _tmp2707 + _tmp1719 * _tmp2699 + _tmp1737 * _tmp2199 -
        _tmp1738 * _tmp2143 + _tmp1739 * _tmp2701 - _tmp1742 * _tmp2244 + _tmp1751 * _tmp2795 -
        _tmp1753 * _tmp2105 + _tmp1757 * _tmp2125 + _tmp1760 * _tmp2255 - 4 * _tmp1771 * _tmp2219 -
        _tmp1778 * _tmp2089 + _tmp1785 * _tmp2706 - _tmp1787 * _tmp2694 - 4 * _tmp1789 * _tmp2152 +
        _tmp1791 * _tmp2704 - _tmp1796 * _tmp2698 - _tmp1798 * _tmp2768 - _tmp1800 * _tmp2705 -
        _tmp1812 * _tmp2702 - _tmp1816 * _tmp2794 + _tmp1819 * _tmp2695 - _tmp1825 * _tmp2171 -
        _tmp1826 * _tmp2710 + _tmp1832 * _tmp2135 - _tmp1835 * _tmp2798 - _tmp1838 * _tmp2708 +
        _tmp1840 * _tmp2696 + _tmp1844 * _tmp2767 + _tmp1846 * _tmp2766 + _tmp1853 * _tmp2257 +
        _tmp1854 * _tmp2232 + _tmp2096 * _tmp2747 + _tmp2122 * _tmp2797 - _tmp2126 * _tmp2669 -
        _tmp2147 * _tmp2792 + _tmp2163 * _tmp2661 - _tmp2168 * _tmp2656 + _tmp2178 * _tmp2752 -
        _tmp2180 * _tmp2790 - _tmp2190 * _tmp2791 + _tmp2196 * _tmp2796 + _tmp2203 * _tmp2664 +
        _tmp2205 * _tmp2788 - _tmp2207 * _tmp2667 - _tmp2221 * _tmp2787 - _tmp2233 * _tmp2660 -
        _tmp2235 * _tmp2663 - _tmp2237 * _tmp2751 + _tmp2252 * _tmp2652 + _tmp2262 * _tmp2668;
    hessian_value_ptr[54] =
        _tmp1704 * _tmp2716 - _tmp1710 * _tmp2317 - _tmp1712 * _tmp2713 - _tmp1715 * _tmp2719 -
        _tmp1719 * _tmp2727 + _tmp1737 * _tmp2339 - _tmp1738 * _tmp2411 - _tmp1742 * _tmp2293 +
        _tmp1746 * _tmp2776 + 4 * _tmp1751 * _tmp2422 - _tmp1753 * _tmp2390 + _tmp1757 * _tmp2272 +
        _tmp1760 * _tmp2413 + _tmp1761 * _tmp2771 - _tmp1765 * _tmp2715 + _tmp1771 * _tmp2718 -
        _tmp1778 * _tmp2375 - _tmp1787 * _tmp2726 - _tmp1789 * _tmp2772 + 4 * _tmp1796 * _tmp2382 -
        _tmp1798 * _tmp2725 + _tmp1806 * _tmp2799 - _tmp1812 * _tmp2712 + _tmp1819 * _tmp2777 -
        _tmp1825 * _tmp2430 + _tmp1832 * _tmp2291 + _tmp1835 * _tmp2720 + _tmp1838 * _tmp2721 -
        _tmp1840 * _tmp2722 - _tmp1844 * _tmp2728 - _tmp1848 * _tmp2774 + _tmp1853 * _tmp2417 +
        _tmp1854 * _tmp2366 + _tmp2269 * _tmp2664 + _tmp2283 * _tmp2668 - _tmp2288 * _tmp2656 -
        _tmp2298 * _tmp2793 + _tmp2307 * _tmp2652 + _tmp2309 * _tmp2653 - _tmp2323 * _tmp2655 -
        _tmp2325 * _tmp2787 + _tmp2336 * _tmp2797 - _tmp2344 * _tmp2660 - _tmp2349 * _tmp2750 -
        _tmp2354 * _tmp2663 + _tmp2358 * _tmp2665 - _tmp2376 * _tmp2796 - _tmp2394 * _tmp2791 -
        _tmp2414 * _tmp2752 - _tmp2418 * _tmp2672 - _tmp2420 * _tmp2786 + _tmp2427 * _tmp2667;
    hessian_value_ptr[55] = -_tmp1771 * _tmp2800 + _tmp1789 * _tmp2779;
    hessian_value_ptr[56] = -_tmp1806 * _tmp2801 + 4 * _tmp1835 * _tmp2460;
    hessian_value_ptr[57] = _tmp2465 * _tmp2755 + _tmp2468 * _tmp2667;
    hessian_value_ptr[58] = -_tmp1704 * _tmp2730 + _tmp1761 * _tmp2780;
    hessian_value_ptr[59] = _tmp1796 * _tmp2732 - _tmp1844 * _tmp2731;
    hessian_value_ptr[60] = -_tmp1800 * _tmp2733 - _tmp2491 * _tmp2652;
    hessian_value_ptr[61] = _tmp2500 * _tmp2649 + _tmp2502 * _tmp2655;
    hessian_value_ptr[62] = _tmp1816 * _tmp2734 + _tmp2508 * _tmp2791;
    hessian_value_ptr[63] = -_tmp1719 * _tmp2735 + _tmp1812 * _tmp2736;
    hessian_value_ptr[64] = -4 * _tmp1840 * _tmp2523 + _tmp2526 * _tmp2658;
    hessian_value_ptr[65] = _tmp1712 * _tmp2737 + _tmp2534 * _tmp2797;
    hessian_value_ptr[66] = _tmp1746 * _tmp2782 - _tmp2539 * _tmp2752;
    hessian_value_ptr[67] = _tmp1823 * _tmp2738 - _tmp1828 * _tmp2739;
    hessian_value_ptr[68] = _tmp2556 * _tmp2664 + _tmp2558 * _tmp2787;
    hessian_value_ptr[69] = -_tmp1846 * _tmp2783 + _tmp2563 * _tmp2751;
    hessian_value_ptr[70] = -_tmp1751 * _tmp2741 + _tmp2571 * _tmp2660;
    hessian_value_ptr[71] = _tmp2579 * _tmp2653 + _tmp2582 * _tmp2668;
    hessian_value_ptr[72] = _tmp2589 * _tmp2672 - _tmp2591 * _tmp2661;
    hessian_value_ptr[73] = _tmp1819 * _tmp2784 + _tmp2596 * _tmp2665;
    hessian_value_ptr[74] = _tmp2604 * _tmp2790 - _tmp2607 * _tmp2656;
    hessian_value_ptr[75] = 4 * std::pow(_tmp1862, Scalar(2)) + 4 * std::pow(_tmp1872, Scalar(2)) +
                            4 * std::pow(_tmp1880, Scalar(2)) + 4 * std::pow(_tmp1882, Scalar(2)) +
                            4 * std::pow(_tmp1890, Scalar(2)) + 4 * std::pow(_tmp1899, Scalar(2)) +
                            4 * std::pow(_tmp1901, Scalar(2)) + 4 * std::pow(_tmp1908, Scalar(2)) +
                            4 * std::pow(_tmp1910, Scalar(2)) + 4 * std::pow(_tmp1918, Scalar(2)) +
                            4 * std::pow(_tmp1926, Scalar(2)) + 4 * std::pow(_tmp1934, Scalar(2)) +
                            4 * std::pow(_tmp1944, Scalar(2)) + 4 * std::pow(_tmp1953, Scalar(2)) +
                            4 * std::pow(_tmp1961, Scalar(2)) + 4 * std::pow(_tmp1963, Scalar(2)) +
                            4 * std::pow(_tmp1971, Scalar(2)) + 4 * std::pow(_tmp1978, Scalar(2)) +
                            4 * std::pow(_tmp1988, Scalar(2)) + 4 * std::pow(_tmp1990, Scalar(2)) +
                            4 * std::pow(_tmp1999, Scalar(2)) + 4 * std::pow(_tmp2001, Scalar(2)) +
                            4 * std::pow(_tmp2009, Scalar(2)) + 4 * std::pow(_tmp2011, Scalar(2)) +
                            4 * std::pow(_tmp2013, Scalar(2)) + 4 * std::pow(_tmp2015, Scalar(2)) +
                            4 * std::pow(_tmp2023, Scalar(2)) + 4 * std::pow(_tmp2025, Scalar(2)) +
                            4 * std::pow(_tmp2027, Scalar(2)) + 4 * std::pow(_tmp2029, Scalar(2)) +
                            4 * std::pow(_tmp2031, Scalar(2)) + 4 * std::pow(_tmp2038, Scalar(2)) +
                            4 * std::pow(_tmp2040, Scalar(2)) + 4 * std::pow(_tmp2042, Scalar(2)) +
                            4 * std::pow(_tmp2044, Scalar(2)) + 4 * std::pow(_tmp2053, Scalar(2)) +
                            4 * std::pow(_tmp2055, Scalar(2)) + 4 * std::pow(_tmp2057, Scalar(2)) +
                            4 * std::pow(_tmp2059, Scalar(2)) + 4 * std::pow(_tmp2061, Scalar(2)) +
                            4 * std::pow(_tmp2063, Scalar(2)) + 4 * std::pow(_tmp2065, Scalar(2)) +
                            4 * std::pow(_tmp2067, Scalar(2)) + 4 * std::pow(_tmp2069, Scalar(2)) +
                            4 * std::pow(_tmp2071, Scalar(2)) + 4 * std::pow(_tmp2073, Scalar(2)) +
                            4 * std::pow(_tmp2075, Scalar(2)) + 4 * std::pow(_tmp2077, Scalar(2)) +
                            4 * std::pow(_tmp2079, Scalar(2)) + 4 * std::pow(_tmp2082, Scalar(2)) +
                            4 * std::pow(_tmp2084, Scalar(2)) + 4 * std::pow(_tmp2086, Scalar(2));
    hessian_value_ptr[76] =
        -_tmp1862 * _tmp2701 + _tmp1872 * _tmp2700 - _tmp1880 * _tmp2694 + _tmp1882 * _tmp2806 +
        _tmp1890 * _tmp2809 - _tmp1899 * _tmp2709 + 4 * _tmp1901 * _tmp2124 - _tmp1908 * _tmp2705 +
        4 * _tmp1910 * _tmp2134 + 4 * _tmp1926 * _tmp2147 - _tmp1961 * _tmp2698 +
        _tmp1963 * _tmp2805 - _tmp1978 * _tmp2704 - _tmp1990 * _tmp2794 + 4 * _tmp1999 * _tmp2235 +
        4 * _tmp2001 * _tmp2170 + 4 * _tmp2011 * _tmp2104 - _tmp2013 * _tmp2707 -
        _tmp2015 * _tmp2706 - 4 * _tmp2025 * _tmp2205 - _tmp2031 * _tmp2767 + _tmp2044 * _tmp2803 +
        4 * _tmp2055 * _tmp2237 + _tmp2057 * _tmp2696 + _tmp2063 * _tmp2804 + _tmp2067 * _tmp2807 +
        _tmp2071 * _tmp2769 + 4 * _tmp2073 * _tmp2254 + _tmp2075 * _tmp2695 +
        4 * _tmp2077 * _tmp2221 + 4 * _tmp2079 * _tmp2256 + _tmp2084 * _tmp2697 +
        _tmp2086 * _tmp2808 - _tmp2096 * _tmp2691 - _tmp2102 * _tmp2759 + _tmp2116 * _tmp2765 +
        _tmp2122 * _tmp2789 + _tmp2126 * _tmp2684 - _tmp2152 * _tmp2758 - _tmp2158 * _tmp2673 +
        _tmp2163 * _tmp2675 + _tmp2176 * _tmp2692 - _tmp2178 * _tmp2762 + _tmp2180 * _tmp2802 +
        _tmp2185 * _tmp2689 + _tmp2196 * _tmp2761 + _tmp2203 * _tmp2688 + _tmp2219 * _tmp2690 +
        _tmp2229 * _tmp2682 - _tmp2258 * _tmp2686 - _tmp2262 * _tmp2679 - _tmp2264 * _tmp2674;
    hessian_value_ptr[77] =
        -_tmp1880 * _tmp2726 + 4 * _tmp1882 * _tmp2374 - _tmp1899 * _tmp2714 + _tmp1901 * _tmp2810 -
        4 * _tmp1908 * _tmp2298 + _tmp1910 * _tmp2812 - _tmp1926 * _tmp2776 +
        4 * _tmp1963 * _tmp2410 - _tmp1988 * _tmp2772 - 4 * _tmp1990 * _tmp2420 +
        _tmp1999 * _tmp2717 + _tmp2001 * _tmp2815 + _tmp2011 * _tmp2814 - _tmp2013 * _tmp2713 -
        _tmp2023 * _tmp2720 - _tmp2025 * _tmp2799 - _tmp2027 * _tmp2719 + _tmp2031 * _tmp2728 +
        _tmp2038 * _tmp2712 + 4 * _tmp2044 * _tmp2338 + _tmp2055 * _tmp2715 - _tmp2057 * _tmp2722 -
        _tmp2059 * _tmp2718 - _tmp2061 * _tmp2716 + 4 * _tmp2063 * _tmp2365 +
        4 * _tmp2067 * _tmp2292 + _tmp2069 * _tmp2774 + _tmp2073 * _tmp2811 + _tmp2075 * _tmp2777 +
        _tmp2077 * _tmp2816 + _tmp2079 * _tmp2813 + _tmp2082 * _tmp2725 + _tmp2084 * _tmp2724 +
        4 * _tmp2086 * _tmp2316 + _tmp2269 * _tmp2688 - _tmp2283 * _tmp2679 + _tmp2307 * _tmp2760 -
        _tmp2309 * _tmp2685 + _tmp2323 * _tmp2693 + _tmp2336 * _tmp2789 + _tmp2349 * _tmp2759 +
        _tmp2358 * _tmp2674 - _tmp2376 * _tmp2761 + _tmp2382 * _tmp2677 + _tmp2394 * _tmp2817 +
        _tmp2404 * _tmp2686 + _tmp2408 * _tmp2673 + _tmp2414 * _tmp2762 + _tmp2418 * _tmp2680 +
        _tmp2422 * _tmp2682 - _tmp2427 * _tmp2687 - _tmp2433 * _tmp2691;
    hessian_value_ptr[78] = _tmp1988 * _tmp2779 + _tmp2449 * _tmp2690;
    hessian_value_ptr[79] = _tmp2025 * _tmp2801 - _tmp2460 * _tmp2689;
    hessian_value_ptr[80] = -_tmp2465 * _tmp2765 - _tmp2468 * _tmp2687;
    hessian_value_ptr[81] = -_tmp2474 * _tmp2691 + _tmp2476 * _tmp2684;
    hessian_value_ptr[82] = _tmp1961 * _tmp2732 + _tmp2031 * _tmp2731;
    hessian_value_ptr[83] = -_tmp1908 * _tmp2733 - _tmp2071 * _tmp2781;
    hessian_value_ptr[84] = 4 * _tmp1880 * _tmp2500 - _tmp2502 * _tmp2693;
    hessian_value_ptr[85] = _tmp1990 * _tmp2734 - _tmp2508 * _tmp2817;
    hessian_value_ptr[86] = -_tmp2038 * _tmp2736 + _tmp2518 * _tmp2686;
    hessian_value_ptr[87] = -_tmp2523 * _tmp2785 + _tmp2526 * _tmp2673;
    hessian_value_ptr[88] = _tmp2013 * _tmp2737 + _tmp2534 * _tmp2789;
    hessian_value_ptr[89] = -_tmp1926 * _tmp2782 + _tmp2539 * _tmp2762;
    hessian_value_ptr[90] = _tmp1999 * _tmp2739 + _tmp2029 * _tmp2738;
    hessian_value_ptr[91] = -_tmp2077 * _tmp2818 + _tmp2556 * _tmp2688;
    hessian_value_ptr[92] = -_tmp2055 * _tmp2819 + _tmp2565 * _tmp2759;
    hessian_value_ptr[93] = -_tmp2084 * _tmp2742 - _tmp2574 * _tmp2682;
    hessian_value_ptr[94] = -_tmp2579 * _tmp2685 - _tmp2582 * _tmp2679;
    hessian_value_ptr[95] = -_tmp1862 * _tmp2745 - _tmp2591 * _tmp2675;
    hessian_value_ptr[96] = _tmp2075 * _tmp2784 + _tmp2596 * _tmp2674;
    hessian_value_ptr[97] = -_tmp2604 * _tmp2802 - _tmp2607 * _tmp2676;
    hessian_value_ptr[98] = 4 * std::pow(_tmp2088, Scalar(2)) + 4 * std::pow(_tmp2096, Scalar(2)) +
                            4 * std::pow(_tmp2102, Scalar(2)) + 4 * std::pow(_tmp2104, Scalar(2)) +
                            4 * std::pow(_tmp2111, Scalar(2)) + 4 * std::pow(_tmp2116, Scalar(2)) +
                            4 * std::pow(_tmp2122, Scalar(2)) + 4 * std::pow(_tmp2124, Scalar(2)) +
                            4 * std::pow(_tmp2126, Scalar(2)) + 4 * std::pow(_tmp2132, Scalar(2)) +
                            4 * std::pow(_tmp2134, Scalar(2)) + 4 * std::pow(_tmp2140, Scalar(2)) +
                            4 * std::pow(_tmp2142, Scalar(2)) + 4 * std::pow(_tmp2147, Scalar(2)) +
                            4 * std::pow(_tmp2152, Scalar(2)) + 4 * std::pow(_tmp2158, Scalar(2)) +
                            4 * std::pow(_tmp2163, Scalar(2)) + 4 * std::pow(_tmp2168, Scalar(2)) +
                            4 * std::pow(_tmp2170, Scalar(2)) + 4 * std::pow(_tmp2176, Scalar(2)) +
                            4 * std::pow(_tmp2178, Scalar(2)) + 4 * std::pow(_tmp2180, Scalar(2)) +
                            4 * std::pow(_tmp2185, Scalar(2)) + 4 * std::pow(_tmp2190, Scalar(2)) +
                            4 * std::pow(_tmp2196, Scalar(2)) + 4 * std::pow(_tmp2198, Scalar(2)) +
                            4 * std::pow(_tmp2203, Scalar(2)) + 4 * std::pow(_tmp2205, Scalar(2)) +
                            4 * std::pow(_tmp2207, Scalar(2)) + 4 * std::pow(_tmp2212, Scalar(2)) +
                            4 * std::pow(_tmp2217, Scalar(2)) + 4 * std::pow(_tmp2219, Scalar(2)) +
                            4 * std::pow(_tmp2221, Scalar(2)) + 4 * std::pow(_tmp2223, Scalar(2)) +
                            4 * std::pow(_tmp2229, Scalar(2)) + 4 * std::pow(_tmp2231, Scalar(2)) +
                            4 * std::pow(_tmp2233, Scalar(2)) + 4 * std::pow(_tmp2235, Scalar(2)) +
                            4 * std::pow(_tmp2237, Scalar(2)) + 4 * std::pow(_tmp2239, Scalar(2)) +
                            4 * std::pow(_tmp2241, Scalar(2)) + 4 * std::pow(_tmp2243, Scalar(2)) +
                            4 * std::pow(_tmp2245, Scalar(2)) + 4 * std::pow(_tmp2247, Scalar(2)) +
                            4 * std::pow(_tmp2250, Scalar(2)) + 4 * std::pow(_tmp2252, Scalar(2)) +
                            4 * std::pow(_tmp2254, Scalar(2)) + 4 * std::pow(_tmp2256, Scalar(2)) +
                            4 * std::pow(_tmp2258, Scalar(2)) + 4 * std::pow(_tmp2260, Scalar(2)) +
                            4 * std::pow(_tmp2262, Scalar(2)) + 4 * std::pow(_tmp2264, Scalar(2));
    hessian_value_ptr[99] =
        _tmp2096 * _tmp2771 + _tmp2104 * _tmp2814 + _tmp2116 * _tmp2725 + 4 * _tmp2122 * _tmp2336 +
        _tmp2124 * _tmp2810 - _tmp2126 * _tmp2716 - _tmp2132 * _tmp2728 + _tmp2134 * _tmp2812 -
        _tmp2147 * _tmp2776 + _tmp2152 * _tmp2772 - _tmp2163 * _tmp2719 + _tmp2170 * _tmp2815 +
        _tmp2176 * _tmp2712 - _tmp2178 * _tmp2773 + _tmp2180 * _tmp2774 - _tmp2185 * _tmp2720 -
        4 * _tmp2196 * _tmp2376 + _tmp2203 * _tmp2723 + _tmp2205 * _tmp2799 - _tmp2219 * _tmp2718 +
        _tmp2221 * _tmp2816 + _tmp2235 * _tmp2717 + _tmp2237 * _tmp2715 + _tmp2241 * _tmp2726 +
        _tmp2250 * _tmp2713 + _tmp2254 * _tmp2811 + _tmp2256 * _tmp2813 - _tmp2258 * _tmp2727 +
        _tmp2283 * _tmp2703 + _tmp2288 * _tmp2709 + _tmp2292 * _tmp2807 + _tmp2298 * _tmp2705 +
        _tmp2307 * _tmp2769 + _tmp2309 * _tmp2704 + _tmp2314 * _tmp2695 + _tmp2316 * _tmp2808 -
        _tmp2323 * _tmp2706 + _tmp2338 * _tmp2803 + _tmp2344 * _tmp2697 - _tmp2349 * _tmp2766 -
        _tmp2358 * _tmp2710 + _tmp2365 * _tmp2804 - _tmp2372 * _tmp2696 + _tmp2374 * _tmp2806 -
        _tmp2382 * _tmp2698 + _tmp2394 * _tmp2809 - _tmp2408 * _tmp2708 + _tmp2410 * _tmp2805 -
        _tmp2418 * _tmp2701 + _tmp2420 * _tmp2794 + _tmp2422 * _tmp2795 - _tmp2427 * _tmp2700;
    hessian_value_ptr[100] = -_tmp2152 * _tmp2779 + _tmp2219 * _tmp2800;
    hessian_value_ptr[101] = -_tmp2205 * _tmp2801 - _tmp2460 * _tmp2798;
    hessian_value_ptr[102] = -_tmp2465 * _tmp2768 - _tmp2468 * _tmp2700;
    hessian_value_ptr[103] = _tmp2096 * _tmp2780 + _tmp2126 * _tmp2730;
    hessian_value_ptr[104] = -_tmp2132 * _tmp2731 - _tmp2484 * _tmp2698;
    hessian_value_ptr[105] = -_tmp2252 * _tmp2781 + _tmp2493 * _tmp2705;
    hessian_value_ptr[106] = -_tmp2500 * _tmp2694 + _tmp2502 * _tmp2706;
    hessian_value_ptr[107] = -_tmp2239 * _tmp2734 - _tmp2508 * _tmp2809;
    hessian_value_ptr[108] = -_tmp2176 * _tmp2736 - _tmp2518 * _tmp2699;
    hessian_value_ptr[109] = -_tmp2523 * _tmp2696 - _tmp2526 * _tmp2708;
    hessian_value_ptr[110] = _tmp2122 * _tmp2820 - _tmp2531 * _tmp2707;
    hessian_value_ptr[111] = -_tmp2147 * _tmp2782 - _tmp2539 * _tmp2770;
    hessian_value_ptr[112] = _tmp2196 * _tmp2738 + _tmp2235 * _tmp2739;
    hessian_value_ptr[113] = _tmp2203 * _tmp2740 - _tmp2221 * _tmp2818;
    hessian_value_ptr[114] = -_tmp2102 * _tmp2783 - _tmp2237 * _tmp2819;
    hessian_value_ptr[115] = -_tmp2229 * _tmp2741 - _tmp2571 * _tmp2697;
    hessian_value_ptr[116] = _tmp2262 * _tmp2744 + _tmp2579 * _tmp2704;
    hessian_value_ptr[117] = -4 * _tmp2163 * _tmp2591 + _tmp2589 * _tmp2701;
    hessian_value_ptr[118] = -_tmp2596 * _tmp2710 + _tmp2599 * _tmp2695;
    hessian_value_ptr[119] = -4 * _tmp2180 * _tmp2604 + _tmp2607 * _tmp2709;
    hessian_value_ptr[120] = 4 * std::pow(_tmp2269, Scalar(2)) + 4 * std::pow(_tmp2271, Scalar(2)) +
                             4 * std::pow(_tmp2276, Scalar(2)) + 4 * std::pow(_tmp2283, Scalar(2)) +
                             4 * std::pow(_tmp2288, Scalar(2)) + 4 * std::pow(_tmp2290, Scalar(2)) +
                             4 * std::pow(_tmp2292, Scalar(2)) + 4 * std::pow(_tmp2298, Scalar(2)) +
                             4 * std::pow(_tmp2303, Scalar(2)) + 4 * std::pow(_tmp2305, Scalar(2)) +
                             4 * std::pow(_tmp2307, Scalar(2)) + 4 * std::pow(_tmp2309, Scalar(2)) +
                             4 * std::pow(_tmp2314, Scalar(2)) + 4 * std::pow(_tmp2316, Scalar(2)) +
                             4 * std::pow(_tmp2321, Scalar(2)) + 4 * std::pow(_tmp2323, Scalar(2)) +
                             4 * std::pow(_tmp2325, Scalar(2)) + 4 * std::pow(_tmp2330, Scalar(2)) +
                             4 * std::pow(_tmp2336, Scalar(2)) + 4 * std::pow(_tmp2338, Scalar(2)) +
                             4 * std::pow(_tmp2344, Scalar(2)) + 4 * std::pow(_tmp2349, Scalar(2)) +
                             4 * std::pow(_tmp2354, Scalar(2)) + 4 * std::pow(_tmp2356, Scalar(2)) +
                             4 * std::pow(_tmp2358, Scalar(2)) + 4 * std::pow(_tmp2363, Scalar(2)) +
                             4 * std::pow(_tmp2365, Scalar(2)) + 4 * std::pow(_tmp2372, Scalar(2)) +
                             4 * std::pow(_tmp2374, Scalar(2)) + 4 * std::pow(_tmp2376, Scalar(2)) +
                             4 * std::pow(_tmp2382, Scalar(2)) + 4 * std::pow(_tmp2387, Scalar(2)) +
                             4 * std::pow(_tmp2389, Scalar(2)) + 4 * std::pow(_tmp2394, Scalar(2)) +
                             4 * std::pow(_tmp2396, Scalar(2)) + 4 * std::pow(_tmp2398, Scalar(2)) +
                             4 * std::pow(_tmp2404, Scalar(2)) + 4 * std::pow(_tmp2406, Scalar(2)) +
                             4 * std::pow(_tmp2408, Scalar(2)) + 4 * std::pow(_tmp2410, Scalar(2)) +
                             4 * std::pow(_tmp2412, Scalar(2)) + 4 * std::pow(_tmp2414, Scalar(2)) +
                             4 * std::pow(_tmp2416, Scalar(2)) + 4 * std::pow(_tmp2418, Scalar(2)) +
                             4 * std::pow(_tmp2420, Scalar(2)) + 4 * std::pow(_tmp2422, Scalar(2)) +
                             4 * std::pow(_tmp2427, Scalar(2)) + 4 * std::pow(_tmp2429, Scalar(2)) +
                             4 * std::pow(_tmp2431, Scalar(2)) + 4 * std::pow(_tmp2433, Scalar(2)) +
                             4 * std::pow(_tmp2435, Scalar(2)) + 4 * std::pow(_tmp2437, Scalar(2));
    hessian_value_ptr[121] = -_tmp2435 * _tmp2779 - _tmp2449 * _tmp2718;
    hessian_value_ptr[122] = -_tmp2458 * _tmp2799 + _tmp2460 * _tmp2720;
    hessian_value_ptr[123] = _tmp2427 * _tmp2729 - _tmp2465 * _tmp2725;
    hessian_value_ptr[124] = _tmp2474 * _tmp2771 - _tmp2476 * _tmp2716;
    hessian_value_ptr[125] = _tmp2382 * _tmp2732 + _tmp2481 * _tmp2728;
    hessian_value_ptr[126] = _tmp2298 * _tmp2733 - _tmp2307 * _tmp2781;
    hessian_value_ptr[127] = -4 * _tmp2323 * _tmp2502 - _tmp2500 * _tmp2726;
    hessian_value_ptr[128] = -4 * _tmp2394 * _tmp2508 - _tmp2420 * _tmp2734;
    hessian_value_ptr[129] = -_tmp2515 * _tmp2712 + _tmp2518 * _tmp2727;
    hessian_value_ptr[130] = _tmp2523 * _tmp2722 + _tmp2526 * _tmp2721;
    hessian_value_ptr[131] = _tmp2336 * _tmp2820 - _tmp2531 * _tmp2713;
    hessian_value_ptr[132] = _tmp2539 * _tmp2773 + _tmp2541 * _tmp2776;
    hessian_value_ptr[133] = _tmp2354 * _tmp2739 - _tmp2376 * _tmp2738;
    hessian_value_ptr[134] = _tmp2269 * _tmp2740 - _tmp2558 * _tmp2816;
    hessian_value_ptr[135] = _tmp2349 * _tmp2783 - _tmp2563 * _tmp2715;
    hessian_value_ptr[136] = -_tmp2344 * _tmp2742 - _tmp2422 * _tmp2741;
    hessian_value_ptr[137] = _tmp2283 * _tmp2744 + _tmp2309 * _tmp2743;
    hessian_value_ptr[138] = -_tmp2418 * _tmp2745 + _tmp2591 * _tmp2719;
    hessian_value_ptr[139] = 4 * _tmp2358 * _tmp2596 + _tmp2599 * _tmp2777;
    hessian_value_ptr[140] = -_tmp2604 * _tmp2774 + _tmp2607 * _tmp2714;
    hessian_value_ptr[141] =
        _tmp2439 + 4 * std::pow(_tmp2449, Scalar(2)) + 4 * std::pow(_tmp2451, Scalar(2));
    hessian_value_ptr[142] =
        _tmp2453 + 4 * std::pow(_tmp2458, Scalar(2)) + 4 * std::pow(_tmp2460, Scalar(2));
    hessian_value_ptr[143] =
        4 * std::pow(_tmp2465, Scalar(2)) + _tmp2467 + 4 * std::pow(_tmp2468, Scalar(2));
    hessian_value_ptr[144] =
        _tmp2470 + 4 * std::pow(_tmp2474, Scalar(2)) + 4 * std::pow(_tmp2476, Scalar(2));
    hessian_value_ptr[145] =
        4 * std::pow(_tmp2481, Scalar(2)) + 4 * std::pow(_tmp2484, Scalar(2)) + _tmp2486;
    hessian_value_ptr[146] =
        4 * std::pow(_tmp2491, Scalar(2)) + 4 * std::pow(_tmp2493, Scalar(2)) + _tmp2495;
    hessian_value_ptr[147] =
        _tmp2496 + 4 * std::pow(_tmp2500, Scalar(2)) + 4 * std::pow(_tmp2502, Scalar(2));
    hessian_value_ptr[148] =
        _tmp2504 + 4 * std::pow(_tmp2508, Scalar(2)) + 4 * std::pow(_tmp2510, Scalar(2));
    hessian_value_ptr[149] =
        4 * std::pow(_tmp2515, Scalar(2)) + _tmp2517 + 4 * std::pow(_tmp2518, Scalar(2));
    hessian_value_ptr[150] =
        4 * std::pow(_tmp2523, Scalar(2)) + _tmp2525 + 4 * std::pow(_tmp2526, Scalar(2));
    hessian_value_ptr[151] =
        4 * std::pow(_tmp2531, Scalar(2)) + _tmp2533 + 4 * std::pow(_tmp2534, Scalar(2));
    hessian_value_ptr[152] =
        4 * std::pow(_tmp2539, Scalar(2)) + 4 * std::pow(_tmp2541, Scalar(2)) + _tmp2543;
    hessian_value_ptr[153] =
        4 * std::pow(_tmp2547, Scalar(2)) + _tmp2549 + 4 * std::pow(_tmp2550, Scalar(2));
    hessian_value_ptr[154] =
        _tmp2552 + 4 * std::pow(_tmp2556, Scalar(2)) + 4 * std::pow(_tmp2558, Scalar(2));
    hessian_value_ptr[155] =
        4 * std::pow(_tmp2563, Scalar(2)) + 4 * std::pow(_tmp2565, Scalar(2)) + _tmp2567;
    hessian_value_ptr[156] =
        4 * std::pow(_tmp2571, Scalar(2)) + _tmp2573 + 4 * std::pow(_tmp2574, Scalar(2));
    hessian_value_ptr[157] =
        4 * std::pow(_tmp2579, Scalar(2)) + _tmp2581 + 4 * std::pow(_tmp2582, Scalar(2));
    hessian_value_ptr[158] =
        _tmp2584 + 4 * std::pow(_tmp2589, Scalar(2)) + 4 * std::pow(_tmp2591, Scalar(2));
    hessian_value_ptr[159] =
        4 * std::pow(_tmp2596, Scalar(2)) + _tmp2598 + 4 * std::pow(_tmp2599, Scalar(2));
    hessian_value_ptr[160] =
        4 * std::pow(_tmp2604, Scalar(2)) + _tmp2606 + 4 * std::pow(_tmp2607, Scalar(2));
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace bundle_adjustment_fixed_size
